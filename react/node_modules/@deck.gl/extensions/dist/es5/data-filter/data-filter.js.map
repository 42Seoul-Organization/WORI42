{"version":3,"sources":["../../../src/data-filter/data-filter.js"],"names":["defaultProps","getFilterValue","type","value","filterEnabled","filterRange","filterSoftRange","filterTransformSize","filterTransformColor","DATA_TYPE_FROM_SIZE","DataFilterExtension","filterSize","fp64","Error","extension","opts","modules","shaderModule64","shaderModule","defines","DATAFILTER_TYPE","DATAFILTER_DOUBLE","Boolean","context","attributeManager","getAttributeManager","add","filterValues","size","accessor","shaderAttributes","divisor","instanceFilterValues","LayerExtension","extensionName"],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA;;AACA;;AAGA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,cAAc,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GADG;AAGnBC,EAAAA,aAAa,EAAE,IAHI;AAInBC,EAAAA,WAAW,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,CAJM;AAKnBC,EAAAA,eAAe,EAAE,IALE;AAMnBC,EAAAA,mBAAmB,EAAE,IANF;AAOnBC,EAAAA,oBAAoB,EAAE;AAPH,CAArB;AAUA,IAAMC,mBAAmB,GAAG;AAC1B,KAAG,OADuB;AAE1B,KAAG,MAFuB;AAG1B,KAAG,MAHuB;AAI1B,KAAG;AAJuB,CAA5B;;IAOqBC,mB;;;AACnB,iCAAiD;AAAA,mFAAJ,EAAI;AAAA,+BAApCC,UAAoC;AAAA,QAApCA,UAAoC,gCAAvB,CAAuB;AAAA,uBAApBC,IAAoB;AAAA,QAApBA,IAAoB,wBAAb,KAAa;;AAAA;;AAC/C,QAAI,CAACH,mBAAmB,CAACE,UAAD,CAAxB,EAAsC;AACpC,YAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAH8C,8HAKzC;AAACF,MAAAA,UAAU,EAAVA,UAAD;AAAaC,MAAAA,IAAI,EAAJA;AAAb,KALyC;AAMhD;;;;+BAEUE,S,EAAW;AAAA,4BACOA,SAAS,CAACC,IADjB;AAAA,UACbJ,UADa,mBACbA,UADa;AAAA,UACDC,IADC,mBACDA,IADC;AAGpB,aAAO;AACLI,QAAAA,OAAO,EAAE,CAACJ,IAAI,GAAGK,4BAAH,GAAoBC,0BAAzB,CADJ;AAELC,QAAAA,OAAO,EAAE;AACPC,UAAAA,eAAe,EAAEX,mBAAmB,CAACE,UAAD,CAD7B;AAEPU,UAAAA,iBAAiB,EAAEC,OAAO,CAACV,IAAD;AAFnB;AAFJ,OAAP;AAOD;;;oCAEeW,O,EAAST,S,EAAW;AAClC,UAAMU,gBAAgB,GAAG,KAAKC,mBAAL,EAAzB;;AACA,UAAID,gBAAJ,EAAsB;AACpBA,QAAAA,gBAAgB,CAACE,GAAjB,CAAqB;AACnBC,UAAAA,YAAY,EAAE;AACZC,YAAAA,IAAI,EAAEd,SAAS,CAACC,IAAV,CAAeJ,UADT;AAEZT,YAAAA,IAAI,EAAEY,SAAS,CAACC,IAAV,CAAeH,IAAf,cAFM;AAGZiB,YAAAA,QAAQ,EAAE,gBAHE;AAIZC,YAAAA,gBAAgB,EAAE;AAChBH,cAAAA,YAAY,EAAE;AACZI,gBAAAA,OAAO,EAAE;AADG,eADE;AAIhBC,cAAAA,oBAAoB,EAAE;AACpBD,gBAAAA,OAAO,EAAE;AADW;AAJN;AAJN;AADK,SAArB;AAeD;AACF;;;EAxC8CE,oB;;;AA2CjDvB,mBAAmB,CAACwB,aAApB,GAAoC,qBAApC;AACAxB,mBAAmB,CAACV,YAApB,GAAmCA,YAAnC","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {LayerExtension} from '@deck.gl/core';\nimport {shaderModule, shaderModule64} from './shader-module';\nimport GL from '@luma.gl/constants';\n\nconst defaultProps = {\n  getFilterValue: {type: 'accessor', value: 0},\n\n  filterEnabled: true,\n  filterRange: [-1, 1],\n  filterSoftRange: null,\n  filterTransformSize: true,\n  filterTransformColor: true\n};\n\nconst DATA_TYPE_FROM_SIZE = {\n  1: 'float',\n  2: 'vec2',\n  3: 'vec3',\n  4: 'vec4'\n};\n\nexport default class DataFilterExtension extends LayerExtension {\n  constructor({filterSize = 1, fp64 = false} = {}) {\n    if (!DATA_TYPE_FROM_SIZE[filterSize]) {\n      throw new Error('filterSize out of range');\n    }\n\n    super({filterSize, fp64});\n  }\n\n  getShaders(extension) {\n    const {filterSize, fp64} = extension.opts;\n\n    return {\n      modules: [fp64 ? shaderModule64 : shaderModule],\n      defines: {\n        DATAFILTER_TYPE: DATA_TYPE_FROM_SIZE[filterSize],\n        DATAFILTER_DOUBLE: Boolean(fp64)\n      }\n    };\n  }\n\n  initializeState(context, extension) {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.add({\n        filterValues: {\n          size: extension.opts.filterSize,\n          type: extension.opts.fp64 ? GL.DOUBLE : GL.FLOAT,\n          accessor: 'getFilterValue',\n          shaderAttributes: {\n            filterValues: {\n              divisor: 0\n            },\n            instanceFilterValues: {\n              divisor: 1\n            }\n          }\n        }\n      });\n    }\n  }\n}\n\nDataFilterExtension.extensionName = 'DataFilterExtension';\nDataFilterExtension.defaultProps = defaultProps;\n"],"file":"data-filter.js"}