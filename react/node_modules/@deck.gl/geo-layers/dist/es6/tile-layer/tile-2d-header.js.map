{"version":3,"sources":["../../../src/tile-layer/tile-2d-header.js"],"names":["log","Tile2DHeader","constructor","x","y","z","onTileLoad","onTileError","isVisible","isSelected","parent","children","content","_isLoaded","_isCancelled","data","_loader","isLoaded","isCancelled","byteLength","result","Number","isFinite","error","_loadData","getTileData","requestScheduler","bbox","requestToken","scheduleRequest","tile","tileData","err","done","loadData"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,eAAlB;AAEA,eAAe,MAAMC,YAAN,CAAmB;AAChCC,EAAAA,WAAW,CAAC;AAACC,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA,CAAP;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA;AAAtB,GAAD,EAAqC;AAC9C,SAAKJ,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,YAAL,GAAoB,KAApB;AAEA,SAAKR,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AAED,MAAIQ,IAAJ,GAAW;AACT,WAAO,KAAKF,SAAL,GAAiB,KAAKD,OAAtB,GAAgC,KAAKI,OAA5C;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,KAAKJ,SAAZ;AACD;;AAED,MAAIK,WAAJ,GAAkB;AAChB,WAAO,KAAKJ,YAAZ;AACD;;AAED,MAAIK,UAAJ,GAAiB;AACf,UAAMC,MAAM,GAAG,KAAKR,OAAL,GAAe,KAAKA,OAAL,CAAaO,UAA5B,GAAyC,CAAxD;;AACA,QAAI,CAACE,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAL,EAA8B;AAC5BpB,MAAAA,GAAG,CAACuB,KAAJ,CAAU,qCAAV;AACD;;AACD,WAAOH,MAAP;AACD;;AAED,QAAMI,SAAN,CAAgBC,WAAhB,EAA6BC,gBAA7B,EAA+C;AAC7C,UAAM;AAACvB,MAAAA,CAAD;AAAIC,MAAAA,CAAJ;AAAOC,MAAAA,CAAP;AAAUsB,MAAAA;AAAV,QAAkB,IAAxB;AAEA,UAAMC,YAAY,GAAG,MAAMF,gBAAgB,CAACG,eAAjB,CAAiC,IAAjC,EAAuCC,IAAI,IAAI;AACxE,aAAOA,IAAI,CAACrB,UAAL,GAAkB,CAAlB,GAAsB,CAAC,CAA9B;AACD,KAF0B,CAA3B;;AAIA,QAAI,CAACmB,YAAL,EAAmB;AACjB,WAAKd,YAAL,GAAoB,IAApB;AACA;AACD;;AAED,SAAKA,YAAL,GAAoB,KAApB;AACA,QAAIiB,QAAJ;AACA,QAAIR,KAAJ;;AACA,QAAI;AACFQ,MAAAA,QAAQ,GAAG,MAAMN,WAAW,CAAC;AAACtB,QAAAA,CAAD;AAAIC,QAAAA,CAAJ;AAAOC,QAAAA,CAAP;AAAUsB,QAAAA;AAAV,OAAD,CAA5B;AACD,KAFD,CAEE,OAAOK,GAAP,EAAY;AACZT,MAAAA,KAAK,GAAGS,GAAG,IAAI,IAAf;AACD,KAJD,SAIU;AACRJ,MAAAA,YAAY,CAACK,IAAb;AACA,WAAKpB,SAAL,GAAiB,IAAjB;AACD;;AAED,QAAIU,KAAJ,EAAW;AACT,WAAKhB,WAAL,CAAiBgB,KAAjB,EAAwB,IAAxB;AACD,KAFD,MAEO;AACL,WAAKX,OAAL,GAAemB,QAAf;AACA,WAAKzB,UAAL,CAAgB,IAAhB;AACD;AACF;;AAED4B,EAAAA,QAAQ,CAACT,WAAD,EAAcC,gBAAd,EAAgC;AACtC,QAAI,CAACD,WAAL,EAAkB;AAChB;AACD;;AAED,SAAKT,OAAL,GAAe,KAAKQ,SAAL,CAAeC,WAAf,EAA4BC,gBAA5B,CAAf;AACD;;AA5E+B","sourcesContent":["import {log} from '@deck.gl/core';\n\nexport default class Tile2DHeader {\n  constructor({x, y, z, onTileLoad, onTileError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = false;\n    this.isSelected = false;\n    this.parent = null;\n    this.children = [];\n\n    this.content = null;\n    this._isLoaded = false;\n    this._isCancelled = false;\n\n    this.onTileLoad = onTileLoad;\n    this.onTileError = onTileError;\n  }\n\n  get data() {\n    return this._isLoaded ? this.content : this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  get isCancelled() {\n    return this._isCancelled;\n  }\n\n  get byteLength() {\n    const result = this.content ? this.content.byteLength : 0;\n    if (!Number.isFinite(result)) {\n      log.error('byteLength not defined in tile data')();\n    }\n    return result;\n  }\n\n  async _loadData(getTileData, requestScheduler) {\n    const {x, y, z, bbox} = this;\n\n    const requestToken = await requestScheduler.scheduleRequest(this, tile => {\n      return tile.isSelected ? 1 : -1;\n    });\n\n    if (!requestToken) {\n      this._isCancelled = true;\n      return;\n    }\n\n    this._isCancelled = false;\n    let tileData;\n    let error;\n    try {\n      tileData = await getTileData({x, y, z, bbox});\n    } catch (err) {\n      error = err || true;\n    } finally {\n      requestToken.done();\n      this._isLoaded = true;\n    }\n\n    if (error) {\n      this.onTileError(error, this);\n    } else {\n      this.content = tileData;\n      this.onTileLoad(this);\n    }\n  }\n\n  loadData(getTileData, requestScheduler) {\n    if (!getTileData) {\n      return;\n    }\n\n    this._loader = this._loadData(getTileData, requestScheduler);\n  }\n}\n"],"file":"tile-2d-header.js"}