{"version":3,"sources":["../../../src/tile-layer/utils.js"],"names":["TILE_SIZE","DEFAULT_EXTENT","Infinity","urlType","type","value","validate","Array","isArray","every","url","equals","value1","value2","len","length","i","getURLFromTemplate","template","properties","index","Math","abs","x","y","replace","_","property","getBoundingBox","viewport","zRange","extent","bounds","minZ","maxZ","bounds0","getBounds","z","bounds1","min","max","getTileIndex","scale","getScale","pow","osmTile2lngLat","lng","n","PI","lat","atan","exp","tile2XY","tileToBoundingBox","isGeospatial","west","north","east","south","left","top","right","bottom","getIdentityTileIndices","bbox","minX","minY","maxX","maxY","indices","floor","push","getTileIndices","maxZoom","minZoom","tileSize","round","zoom","log2","Number","isFinite"],"mappings":"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","sourcesContent":["import {getOSMTileIndices} from './tile-2d-traversal';\n\nconst TILE_SIZE = 512;\nconst DEFAULT_EXTENT = [-Infinity, -Infinity, Infinity, Infinity];\n\nexport const urlType = {\n  type: 'url',\n  value: '',\n  validate: value =>\n    typeof value === 'string' ||\n    (Array.isArray(value) && value.every(url => typeof url === 'string')),\n  equals: (value1, value2) => {\n    if (value1 === value2) {\n      return true;\n    }\n    if (!Array.isArray(value1) || !Array.isArray(value2)) {\n      return false;\n    }\n    const len = value1.length;\n    if (len !== value2.length) {\n      return false;\n    }\n    for (let i = 0; i < len; i++) {\n      if (value1[i] !== value2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n};\n\nexport function getURLFromTemplate(template, properties) {\n  if (!template || !template.length) {\n    return null;\n  }\n  if (Array.isArray(template)) {\n    const index = Math.abs(properties.x + properties.y) % template.length;\n    template = template[index];\n  }\n  return template.replace\n    ? template.replace(/\\{ *([\\w_-]+) *\\}/g, (_, property) => properties[property])\n    : null;\n}\n\n/**\n * gets the bounding box of a viewport\n */\nfunction getBoundingBox(viewport, zRange, extent) {\n  let bounds;\n  if (zRange && zRange.length === 2) {\n    const [minZ, maxZ] = zRange;\n    const bounds0 = viewport.getBounds({z: minZ});\n    const bounds1 = viewport.getBounds({z: maxZ});\n    bounds = [\n      Math.min(bounds0[0], bounds1[0]),\n      Math.min(bounds0[1], bounds1[1]),\n      Math.max(bounds0[2], bounds1[2]),\n      Math.max(bounds0[3], bounds1[3])\n    ];\n  } else {\n    bounds = viewport.getBounds();\n  }\n  return [\n    Math.max(bounds[0], extent[0]),\n    Math.max(bounds[1], extent[1]),\n    Math.min(bounds[2], extent[2]),\n    Math.min(bounds[3], extent[3])\n  ];\n}\n\nfunction getTileIndex([x, y], scale) {\n  return [(x * scale) / TILE_SIZE, (y * scale) / TILE_SIZE];\n}\n\nfunction getScale(z) {\n  return Math.pow(2, z);\n}\n\n// https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#Lon..2Flat._to_tile_numbers_2\nfunction osmTile2lngLat(x, y, z) {\n  const scale = getScale(z);\n  const lng = (x / scale) * 360 - 180;\n  const n = Math.PI - (2 * Math.PI * y) / scale;\n  const lat = (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n  return [lng, lat];\n}\n\nfunction tile2XY(x, y, z) {\n  const scale = getScale(z);\n  return [(x / scale) * TILE_SIZE, (y / scale) * TILE_SIZE];\n}\n\nexport function tileToBoundingBox(viewport, x, y, z) {\n  if (viewport.isGeospatial) {\n    const [west, north] = osmTile2lngLat(x, y, z);\n    const [east, south] = osmTile2lngLat(x + 1, y + 1, z);\n    return {west, north, east, south};\n  }\n  const [left, top] = tile2XY(x, y, z);\n  const [right, bottom] = tile2XY(x + 1, y + 1, z);\n  return {left, top, right, bottom};\n}\n\nfunction getIdentityTileIndices(viewport, z, extent) {\n  const bbox = getBoundingBox(viewport, null, extent);\n  const scale = getScale(z);\n\n  const [minX, minY] = getTileIndex([bbox[0], bbox[1]], scale);\n  const [maxX, maxY] = getTileIndex([bbox[2], bbox[3]], scale);\n  const indices = [];\n\n  /*\n      |  TILE  |  TILE  |  TILE  |\n        |(minX)            |(maxX)\n   */\n  for (let x = Math.floor(minX); x < maxX; x++) {\n    for (let y = Math.floor(minY); y < maxY; y++) {\n      indices.push({x, y, z});\n    }\n  }\n  return indices;\n}\n\n/**\n * Returns all tile indices in the current viewport. If the current zoom level is smaller\n * than minZoom, return an empty array. If the current zoom level is greater than maxZoom,\n * return tiles that are on maxZoom.\n */\nexport function getTileIndices({viewport, maxZoom, minZoom, zRange, extent, tileSize = TILE_SIZE}) {\n  let z = Math.round(viewport.zoom + Math.log2(TILE_SIZE / tileSize));\n  if (Number.isFinite(minZoom) && z < minZoom) {\n    if (!extent) {\n      return [];\n    }\n    z = minZoom;\n  }\n  if (Number.isFinite(maxZoom) && z > maxZoom) {\n    z = maxZoom;\n  }\n  return viewport.isGeospatial\n    ? getOSMTileIndices(viewport, z, zRange, extent || DEFAULT_EXTENT)\n    : getIdentityTileIndices(viewport, z, extent || DEFAULT_EXTENT);\n}\n"],"file":"utils.js"}