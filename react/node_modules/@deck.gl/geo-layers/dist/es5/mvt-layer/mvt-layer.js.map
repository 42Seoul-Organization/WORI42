{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","MVTLayer","tile","url","props","data","Promise","reject","MVTLoader","getLoadOptions","worldScale","Math","pow","z","xScale","yScale","xOffset","x","yOffset","y","modelMatrix","Matrix4","scale","autoHighlight","coordinateOrigin","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","info","pickingEvent","hoveredFeatureId","state","hoveredFeature","object","newHoveredFeatureId","getFeatureUniqueId","setState","isFeatureIdPresent","isFeatureIdDefined","Array","isArray","featureIdToHighlight","findIndex","feature","TileLayer","properties","id","undefined","layerName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAG,GAAnB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADC;AAEnBC,EAAAA,oBAAoB,EAAE;AAFH,CAArB;;IAKqBC,Q;;;;;;;;;;gCACPC,I,EAAM;AAChB,UAAMC,GAAG,GAAG,+BAAmB,KAAKC,KAAL,CAAWC,IAA9B,EAAoCH,IAApC,CAAZ;;AACA,UAAI,CAACC,GAAL,EAAU;AACR,eAAOG,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AACD,aAAO,gBAAKJ,GAAL,EAAUK,cAAV,EAAqB,KAAKC,cAAL,EAArB,CAAP;AACD;;;oCAEeL,K,EAAO;AAAA,UACdF,IADc,GACNE,KADM,CACdF,IADc;AAErB,UAAMQ,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYV,IAAI,CAACW,CAAjB,CAAnB;AAEA,UAAMC,MAAM,GAAGnB,UAAU,GAAGe,UAA5B;AACA,UAAMK,MAAM,GAAG,CAACD,MAAhB;AAEA,UAAME,OAAO,GAAIrB,UAAU,GAAGO,IAAI,CAACe,CAAnB,GAAwBP,UAAxC;AACA,UAAMQ,OAAO,GAAGvB,UAAU,IAAI,IAAIO,IAAI,CAACiB,CAAL,GAAST,UAAjB,CAA1B;AAEA,UAAMU,WAAW,GAAG,IAAIC,aAAJ,GAAcC,KAAd,CAAoB,CAACR,MAAD,EAASC,MAAT,EAAiB,CAAjB,CAApB,CAApB;AAEAX,MAAAA,KAAK,CAACmB,aAAN,GAAsB,KAAtB;AACAnB,MAAAA,KAAK,CAACgB,WAAN,GAAoBA,WAApB;AACAhB,MAAAA,KAAK,CAACoB,gBAAN,GAAyB,CAACR,OAAD,EAAUE,OAAV,EAAmB,CAAnB,CAAzB;AACAd,MAAAA,KAAK,CAACqB,gBAAN,GAAyBC,yBAAkBC,SAA3C;AACAvB,MAAAA,KAAK,CAACwB,UAAN,iDAAwBxB,KAAK,CAACwB,UAAN,IAAoB,EAA5C,IAAiD,IAAIC,yBAAJ,EAAjD;AAEA,6HAA6BzB,KAA7B;AACD;;;4BAEO0B,I,EAAMC,Y,EAAc;AAAA,wBACgB,KAAK3B,KADrB;AAAA,UACnBP,gBADmB,eACnBA,gBADmB;AAAA,UACD0B,aADC,eACDA,aADC;;AAG1B,UAAIA,aAAJ,EAAmB;AAAA,YACVS,gBADU,GACU,KAAKC,KADf,CACVD,gBADU;AAEjB,YAAME,cAAc,GAAGJ,IAAI,CAACK,MAA5B;AACA,YAAIC,mBAAJ;;AAEA,YAAIF,cAAJ,EAAoB;AAClBE,UAAAA,mBAAmB,GAAGC,kBAAkB,CAACH,cAAD,EAAiBrC,gBAAjB,CAAxC;AACD;;AAED,YAAImC,gBAAgB,KAAKI,mBAAzB,EAA8C;AAC5C,eAAKE,QAAL,CAAc;AAACN,YAAAA,gBAAgB,EAAEI;AAAnB,WAAd;AACD;AACF;;AAED,qHAAqBN,IAArB,EAA2BC,YAA3B;AACD;;;8CAEyB7B,I,EAAM;AAAA,UACvB8B,gBADuB,GACH,KAAKC,KADF,CACvBD,gBADuB;AAAA,yBAEmB,KAAK5B,KAFxB;AAAA,UAEvBP,gBAFuB,gBAEvBA,gBAFuB;AAAA,UAELG,oBAFK,gBAELA,oBAFK;AAAA,UAGvBK,IAHuB,GAGfH,IAHe,CAGvBG,IAHuB;AAK9B,UAAMkC,kBAAkB,GACtBC,kBAAkB,CAACR,gBAAD,CAAlB,IAAwCQ,kBAAkB,CAACxC,oBAAD,CAD5D;;AAGA,UAAI,CAACuC,kBAAD,IAAuB,CAACE,KAAK,CAACC,OAAN,CAAcrC,IAAd,CAA5B,EAAiD;AAC/C,eAAO,CAAC,CAAR;AACD;;AAED,UAAMsC,oBAAoB,GAAGH,kBAAkB,CAACxC,oBAAD,CAAlB,GACzBA,oBADyB,GAEzBgC,gBAFJ;AAIA,aAAO3B,IAAI,CAACuC,SAAL,CACL,UAAAC,OAAO;AAAA,eAAIR,kBAAkB,CAACQ,OAAD,EAAUhD,gBAAV,CAAlB,KAAkD8C,oBAAtD;AAAA,OADF,CAAP;AAGD;;;EArEmCG,qB;;;;AAwEtC,SAAST,kBAAT,CAA4BQ,OAA5B,EAAqChD,gBAArC,EAAuD;AACrD,MAAIA,gBAAJ,EAAsB;AACpB,WAAOgD,OAAO,CAACE,UAAR,CAAmBlD,gBAAnB,CAAP;AACD;;AAED,MAAI,QAAQgD,OAAZ,EAAqB;AACnB,WAAOA,OAAO,CAACG,EAAf;AACD;;AAED,SAAO,CAAC,CAAR;AACD;;AAED,SAASR,kBAAT,CAA4BzC,KAA5B,EAAmC;AACjC,SAAOA,KAAK,KAAKkD,SAAV,IAAuBlD,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAA1D;AACD;;AAEDE,QAAQ,CAACiD,SAAT,GAAqB,UAArB;AACAjD,QAAQ,CAACL,YAAT,GAAwBA,YAAxB","sourcesContent":["import {Matrix4} from 'math.gl';\nimport {MVTLoader} from '@loaders.gl/mvt';\nimport {load} from '@loaders.gl/core';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate} from '../tile-layer/utils';\nimport ClipExtension from './clip-extension';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null\n};\n\nexport default class MVTLayer extends TileLayer {\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.props.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    return load(url, MVTLoader, this.getLoadOptions());\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n    props.modelMatrix = modelMatrix;\n    props.coordinateOrigin = [xOffset, yOffset, 0];\n    props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n    props.extensions = [...(props.extensions || []), new ClipExtension()];\n\n    return super.renderSubLayers(props);\n  }\n\n  onHover(info, pickingEvent) {\n    const {uniqueIdProperty, autoHighlight} = this.props;\n\n    if (autoHighlight) {\n      const {hoveredFeatureId} = this.state;\n      const hoveredFeature = info.object;\n      let newHoveredFeatureId;\n\n      if (hoveredFeature) {\n        newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      }\n\n      if (hoveredFeatureId !== newHoveredFeatureId) {\n        this.setState({hoveredFeatureId: newHoveredFeatureId});\n      }\n    }\n\n    return super.onHover(info, pickingEvent);\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const {data} = tile;\n\n    const isFeatureIdPresent =\n      isFeatureIdDefined(hoveredFeatureId) || isFeatureIdDefined(highlightedFeatureId);\n\n    if (!isFeatureIdPresent || !Array.isArray(data)) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isFeatureIdDefined(highlightedFeatureId)\n      ? highlightedFeatureId\n      : hoveredFeatureId;\n\n    return data.findIndex(\n      feature => getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight\n    );\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return -1;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}