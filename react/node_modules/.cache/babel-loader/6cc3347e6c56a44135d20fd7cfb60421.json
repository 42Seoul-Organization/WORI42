{"ast":null,"code":"/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { AxisBreak } from \"./AxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar ValueAxisBreak =\n/** @class */\nfunction (_super) {\n  __extends(ValueAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ValueAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ValueAxisBreak\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(ValueAxisBreak.prototype, \"startPosition\", {\n    /**\r\n     * Pixel position of the break's start.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.valueToPosition(this.adjustedStartValue);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ValueAxisBreak.prototype, \"endPosition\", {\n    /**\r\n     * Pixel position of the break's end.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function get() {\n      if (this.axis) {\n        return this.axis.valueToPosition(this.adjustedEndValue);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ValueAxisBreak;\n}(AxisBreak);\n\nexport { ValueAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;","map":{"version":3,"sources":["../../../../../src/.internal/charts/axes/ValueAxisBreak.ts"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;;AAOA,SAAS,SAAT,QAAsF,aAAtF;AAEA,SAAS,QAAT,QAAyB,qBAAzB;AAwCA;;;;;;;AAOA;;;;;;;;;;;;;AAYA,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;AA8CnC;;;;;AAGA,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,SAAL,GAAiB,gBAAjB;;AACA,IAAA,KAAI,CAAC,UAAL;;;AACA;;AAQD,EAAA,MAAA,CAAA,cAAA,CAAW,cAAA,CAAA,SAAX,EAAW,eAAX,EAAwB;AANxB;;;;;;SAMA,eAAA;AACC,UAAI,KAAK,IAAT,EAAe;AACd,eAAO,KAAK,IAAL,CAAU,eAAV,CAA0B,KAAK,kBAA/B,CAAP;AACA;AACD,KAJuB;oBAAA;;AAAA,GAAxB;AAYA,EAAA,MAAA,CAAA,cAAA,CAAW,cAAA,CAAA,SAAX,EAAW,aAAX,EAAsB;AANtB;;;;;;SAMA,eAAA;AACC,UAAI,KAAK,IAAT,EAAe;AACd,eAAO,KAAK,IAAL,CAAU,eAAV,CAA0B,KAAK,gBAA/B,CAAP;AACA;AACD,KAJqB;oBAAA;;AAAA,GAAtB;AAMD,SAAA,cAAA;AAAC,CA/ED,CAAoC,SAApC,CAAA;;;AAiFA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,cAA/C","sourcesContent":["/**\r\n * A module which defines functionality related to Value Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { ValueAxis } from \"./ValueAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Value break starts on.\r\n\t */\r\n\tstartValue?: number;\r\n\r\n\t/**\r\n\t * Value break ends on.\r\n\t */\r\n\tendValue?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ValueAxisBreak]].\r\n */\r\nexport interface IValueAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ValueAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IValueAxisBreakAdapters extends IAxisBreakAdapters, IValueAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" on value axis.\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * when comparing columns with relatively similar values, it would make sense\r\n * to cut out their mid section, so that their tip differences are more\r\n * prominent.\r\n *\r\n * @see {@link IValueAxisBreakEvents} for a list of available events\r\n * @see {@link IValueAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ValueAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IValueAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IValueAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IValueAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: ValueAxis;\r\n\r\n\t/**\r\n\t * [adjustedStep description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedStep: number;\r\n\r\n\t/**\r\n\t * [adjustedMin description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMin: number;\r\n\r\n\t/**\r\n\t * [adjustedMax description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic adjustedMax: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ValueAxisBreak\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedStartValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.valueToPosition(this.adjustedEndValue);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ValueAxisBreak\"] = ValueAxisBreak;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}