{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\n\nvar CloseButton =\n/** @class */\nfunction (_super) {\n  __extends(CloseButton, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CloseButton() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"CloseButton\";\n\n    _this.padding(8, 8, 8, 8);\n\n    _this.showSystemTooltip = true;\n    _this.width = 30;\n    _this.height = 30;\n    var interfaceColors = new InterfaceColorSet();\n    _this.cursorOverStyle = MouseCursorStyle.pointer;\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    var bgc = interfaceColors.getFor(\"background\");\n    background.fill = bgc;\n    background.stroke = interfaceColors.getFor(\"primaryButton\");\n    background.strokeOpacity = 1;\n    background.strokeWidth = 1;\n    var downColor = interfaceColors.getFor(\"primaryButtonActive\");\n    var bhs = background.states.getKey(\"hover\");\n    bhs.properties.strokeWidth = 3;\n    bhs.properties.fill = bgc;\n    var bds = background.states.getKey(\"down\");\n    bds.properties.stroke = downColor;\n    bds.properties.fill = bgc; // Create an icon\n\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    icon.stroke = background.stroke;\n    _this.icon = icon; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  CloseButton.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    var w = this.pixelWidth / 3;\n    var h = this.pixelHeight / 3;\n    var path = $path.moveTo({\n      x: -w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: w / 2,\n      y: h / 2\n    });\n    path += $path.moveTo({\n      x: w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: -w / 2,\n      y: h / 2\n    });\n    this.icon.path = path;\n    this.invalidateLayout();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  CloseButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Close\");\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nexport { CloseButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;","map":{"version":3,"sources":["../../../../../src/.internal/core/elements/CloseButton.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CloseButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICloseButtonAdapters extends IButtonAdapters, ICloseButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\r\nexport class CloseButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICloseButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICloseButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICloseButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CloseButton\";\r\n\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tthis.width = 30;\r\n\t\tthis.height = 30;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\tlet bgc = interfaceColors.getFor(\"background\");\r\n\t\tbackground.fill = bgc;\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.strokeWidth = 1;\r\n\r\n\t\tlet downColor = interfaceColors.getFor(\"primaryButtonActive\")\r\n\r\n\t\tlet bhs =background.states.getKey(\"hover\");\r\n\t\tbhs.properties.strokeWidth = 3;\r\n\t\tbhs.properties.fill = bgc;\r\n\r\n\t\tlet bds = background.states.getKey(\"down\");\t\t\t\t\r\n\t\tbds.properties.stroke = downColor;\r\n\t\tbds.properties.fill = bgc;\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\t\ticon.stroke = background.stroke;\r\n\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tlet w = this.pixelWidth / 3;\r\n\t\tlet h = this.pixelHeight / 3;\r\n\r\n\t\tlet path = $path.moveTo({ x: -w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: w / 2, y: h / 2 });\r\n\t\tpath += $path.moveTo({ x: w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: -w / 2, y: h / 2 });\r\n\t\tthis.icon.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Close\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}