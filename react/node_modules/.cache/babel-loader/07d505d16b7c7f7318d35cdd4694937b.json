{"ast":null,"code":"/**\r\n * A collection of DOM-related functions.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Disposer } from \"./Disposer\";\nimport { readFrame, writeFrame } from \"./AsyncPending\";\nimport { options } from \"../Options\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var SVGNS = \"http://www.w3.org/2000/svg\";\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var XMLNS = \"http://www.w3.org/2000/xmlns/\";\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport var XLINK = \"http://www.w3.org/1999/xlink\";\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\n\nexport function addEventListener(dom, type, listener, options) {\n  //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n  //console.log(type, dom);\n  dom.addEventListener(type, listener, options || false);\n  return new Disposer(function () {\n    dom.removeEventListener(type, listener, options || false);\n  });\n}\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\n\nexport function getElement(el) {\n  if ($type.isString(el)) {\n    var e = document.getElementById(el);\n\n    if (e == null) {\n      e = document.getElementsByClassName(el)[0];\n    }\n\n    if (e instanceof HTMLElement) {\n      return e;\n    }\n  } else if (el instanceof HTMLElement) {\n    return el;\n  }\n}\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\n\nexport function addClass(element, className) {\n  if (!element) {\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    var currentClassName = element.getAttribute(\"class\");\n\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\n        return item !== className;\n      }).join(\" \") + \" \" + className);\n    } else {\n      element.setAttribute(\"class\", className);\n    } //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\n\n  }\n}\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\n\nexport function removeClass(element, className) {\n  if (!element) {\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    var currentClassName = element.getAttribute(\"class\");\n\n    if (currentClassName) {\n      element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\n        return item !== className;\n      }).join(\" \"));\n    } //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\n\n  }\n}\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\n\nexport function setStyle(element, property, value) {\n  element.style[property] = value;\n}\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport function getComputedStyle(element, property) {\n  if (element.currentStyle) {\n    return element.currentStyle[property];\n  }\n\n  return document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\n}\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport function blur() {\n  var input = document.createElement(\"input\");\n  input.style.position = \"fixed\";\n  input.style.top = \"0px\";\n  input.style.left = \"-10000px\";\n  document.body.appendChild(input);\n  input.focus();\n  input.blur();\n  document.body.removeChild(input);\n}\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\n\nexport function focus(element) {\n  if (element instanceof HTMLElement) {\n    element.focus();\n  } else {\n    var input = document.createElement(\"input\");\n    var fo = document.createElementNS(SVGNS, \"foreignObject\");\n    fo.appendChild(input);\n    element.appendChild(fo);\n    input.focus();\n    input.disabled = true;\n    fo.remove();\n  }\n  /*if ((<any>element).focus != undefined) {\r\n      (<any>element).focus();\r\n  }\r\n  else if (element instanceof SVGSVGElement) {\r\n      // Not implemented\r\n      // @todo implement focus fallback\r\n  }*/\n\n}\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\n\nexport function outerHTML(element) {\n  if (element.outerHTML) {\n    return element.outerHTML;\n  } else {\n    var twrap = document.createElement(\"div\");\n    var tnode = element.cloneNode(true);\n    twrap.appendChild(tnode);\n    var content = twrap.innerHTML;\n    return content;\n  }\n}\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\n\nexport function isElement(el) {\n  return el instanceof Object && el && el.nodeType === 1;\n}\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\n\nexport function contains(a, b) {\n  var cursor = b;\n\n  while (true) {\n    if (a === cursor) {\n      return true;\n    } else if (cursor.parentNode == null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host == null) {\n        return false;\n      } else {\n        cursor = cursor.host;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\n\nexport function getShadowRoot(a) {\n  var cursor = a;\n\n  while (true) {\n    if (cursor.parentNode == null) {\n      // TODO better ShadowRoot detection\n      if (cursor.host != null) {\n        return cursor;\n      } else {\n        return null;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\n\nexport function getRoot(a) {\n  // TODO replace with Node.prototype.getRootNode\n  var owner = a.ownerDocument;\n  var cursor = a;\n\n  while (true) {\n    if (cursor.parentNode == null) {\n      // If the cursor is the document, or it is a ShadowRoot\n      // TODO better ShadowRoot detection\n      if (cursor === owner || cursor.host != null) {\n        return cursor;\n      } else {\n        return null;\n      }\n    } else {\n      cursor = cursor.parentNode;\n    }\n  }\n}\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\n\nexport function eventTarget(event) {\n  if (typeof event.composedPath === \"function\") {\n    return event.composedPath()[0];\n  } else {\n    return event.target;\n  }\n}\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\n\nexport function copyAttributes(source, target) {\n  $array.each(source.attributes, function (attr) {\n    // TODO what if it's null ?\n    if (attr.value != null) {\n      target.setAttribute(attr.name, attr.value);\n    }\n  });\n}\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\n\nexport function fixPixelPerfect(el) {\n  readFrame(function () {\n    // sometimes IE doesn't like this\n    // TODO figure out a way to remove this\n    try {\n      var rect = el.getBoundingClientRect();\n      var left_1 = rect.left - Math.round(rect.left);\n      var top_1 = rect.top - Math.round(rect.top);\n\n      if (left_1 !== 0) {\n        writeFrame(function () {\n          el.style.left = left_1 + \"px\";\n        });\n      }\n\n      if (top_1 !== 0) {\n        writeFrame(function () {\n          el.style.top = top_1 + \"px\";\n        });\n      }\n    } catch (e) {}\n  });\n}\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\n\nvar rootStylesheet;\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\n\nfunction getStylesheet(element) {\n  if (element == null) {\n    if (!$type.hasValue(rootStylesheet)) {\n      // TODO use createElementNS ?\n      var e = document.createElement(\"style\");\n      e.type = \"text/css\";\n\n      if (options.nonce != \"\") {\n        e.setAttribute(\"nonce\", options.nonce);\n      }\n\n      document.head.appendChild(e);\n      rootStylesheet = e.sheet;\n    }\n\n    return rootStylesheet;\n  } else {\n    // TODO use createElementNS ?\n    var e = document.createElement(\"style\");\n    e.type = \"text/css\";\n\n    if (options.nonce != \"\") {\n      e.setAttribute(\"nonce\", options.nonce);\n    }\n\n    element.appendChild(e);\n    return e.sheet;\n  }\n}\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\n\n\nfunction appendStylesheet(root, selector) {\n  var index = root.cssRules.length;\n  root.insertRule(selector + \"{}\", index);\n  return root.cssRules[index];\n}\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\n\n\nvar StyleRule =\n/** @class */\nfunction (_super) {\n  __extends(StyleRule, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param selector  CSS selector\r\n   * @param styles    An object of style attribute - value pairs\r\n   */\n\n\n  function StyleRule(element, selector, styles) {\n    var _this = this;\n\n    var root = getStylesheet(element); // TODO test this\n\n    _this = _super.call(this, function () {\n      // TODO a bit hacky\n      var index = $array.indexOf(root.cssRules, _this._rule);\n\n      if (index === -1) {\n        throw new Error(\"Could not dispose StyleRule\");\n      } else {\n        // TODO if it's empty remove it from the DOM ?\n        root.deleteRule(index);\n      }\n    }) || this;\n    _this._rule = appendStylesheet(root, selector);\n    $object.each(styles, function (key, value) {\n      _this.setStyle(key, value);\n    });\n    return _this;\n  }\n\n  Object.defineProperty(StyleRule.prototype, \"selector\", {\n    /**\r\n     * @return CSS selector\r\n     */\n    get: function () {\n      return this._rule.selectorText;\n    },\n\n    /**\r\n     * A CSS selector text.\r\n     *\r\n     * E.g.: `.myClass p`\r\n     *\r\n     * @param selector  CSS selector\r\n     */\n    set: function (selector) {\n      this._rule.selectorText = selector;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets the same style properties with browser-specific prefixes.\r\n   *\r\n   * @param name   Attribute name\r\n   * @param value  Attribute value\r\n   */\n\n  StyleRule.prototype._setVendorPrefixName = function (name, value) {\n    var style = this._rule.style;\n    style.setProperty(\"-webkit-\" + name, value, \"\");\n    style.setProperty(\"-moz-\" + name, value, \"\");\n    style.setProperty(\"-ms-\" + name, value, \"\");\n    style.setProperty(\"-o-\" + name, value, \"\");\n    style.setProperty(name, value, \"\");\n  };\n  /**\r\n   * Sets a value for specific style attribute.\r\n   *\r\n   * @param name   Attribute\r\n   * @param value  Value\r\n   */\n\n\n  StyleRule.prototype.setStyle = function (name, value) {\n    if (name === \"transition\") {\n      this._setVendorPrefixName(name, value);\n    } else {\n      this._rule.style.setProperty(name, value, \"\");\n    }\n  };\n\n  return StyleRule;\n}(Disposer);\n\nexport { StyleRule };\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nvar styleId = 0;\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\n\nvar StyleClass =\n/** @class */\nfunction (_super) {\n  __extends(StyleClass, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param styles  An object of style attribute - value pairs\r\n   * @param name    Class name\r\n   */\n\n\n  function StyleClass(element, styles, name) {\n    var _this = this;\n\n    var className = !$type.hasValue(name) // TODO generate the classname randomly\n    ? \"__style_\" + ++styleId + \"__\" : name;\n    _this = _super.call(this, element, \".\" + className, styles) || this;\n    _this._className = className;\n    return _this;\n  }\n\n  Object.defineProperty(StyleClass.prototype, \"className\", {\n    /**\r\n     * @return Class name\r\n     */\n    get: function () {\n      return this._className;\n    },\n\n    /**\r\n     * Class name.\r\n     *\r\n     * @param name  Class name\r\n     */\n    set: function (name) {\n      this._className = name;\n      this.selector = \".\" + name;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts the whole class to\r\n   * @ignore Exclude from docs\r\n   */\n\n  StyleClass.prototype.toString = function () {\n    return this._className;\n  };\n\n  return StyleClass;\n}(StyleRule);\n\nexport { StyleClass };\nexport function ready(f) {\n  if (document.readyState !== \"loading\") {\n    f();\n  } else {\n    var listener_1 = function () {\n      if (document.readyState !== \"loading\") {\n        document.removeEventListener(\"readystatechange\", listener_1);\n        f();\n      }\n    };\n\n    document.addEventListener(\"readystatechange\", listener_1);\n  }\n}\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\n\nexport function findFont(element) {\n  // Check if element has styles set\n  var font = getComputedStyle(element, \"font-family\");\n\n  if (!font) {\n    // Completely transparent. Look for a parent\n    var parent_1 = element.parentElement || element.parentNode;\n\n    if (parent_1) {\n      return findFont(parent_1);\n    } else {\n      return undefined;\n    }\n  } else {\n    return font;\n  }\n}\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\n\nexport function findFontSize(element) {\n  // Check if element has styles set\n  var font = getComputedStyle(element, \"font-size\");\n\n  if (!font) {\n    // Completely transparent. Look for a parent\n    var parent_2 = element.parentElement || element.parentNode;\n\n    if (parent_2) {\n      return findFontSize(parent_2);\n    } else {\n      return undefined;\n    }\n  } else {\n    return font;\n  }\n}\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\n\nexport function isHidden(element) {\n  return element.offsetParent === null;\n}\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\n\nexport function isElementInViewport(el, viewportTarget) {\n  // Get position data of the element\n  var rect = el.getBoundingClientRect(); // Convert to array\n\n  var targets = $type.isArray(viewportTarget) ? viewportTarget : viewportTarget ? [viewportTarget] : []; // Should we measure against specific viewport element?\n\n  if (targets.length) {\n    for (var i = 0; i < targets.length; i++) {\n      var target = targets[i]; // Check if viewport itself is visible\n\n      if (!isElementInViewport(target)) {\n        return false;\n      } // Check if element is visible within the viewport\n\n\n      var viewportRect = target.getBoundingClientRect();\n\n      if (rect.top >= 0 && rect.left >= 0 && rect.top <= viewportRect.top + viewportRect.height && rect.left <= viewportRect.left + viewportRect.width) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return rect.top >= 0 && rect.left >= 0 && rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth);\n}","map":{"version":3,"sources":["../../../../../src/.internal/core/utils/DOM.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * A collection of DOM-related functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer, IDisposer } from \"./Disposer\";\r\nimport { readFrame, writeFrame } from \"./AsyncPending\";\r\nimport { options } from \"../Options\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n\r\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const SVGNS: string = \"http://www.w3.org/2000/svg\";\r\n\r\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XMLNS: string = \"http://www.w3.org/2000/xmlns/\";\r\n\r\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport const XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\r\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n\t//console.log(type, dom);\r\n\tdom.addEventListener(type, <EventListener>listener, options || false);\r\n\r\n\treturn new Disposer(() => {\r\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\r\n\t});\r\n}\r\n\r\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\r\nexport function getElement(el: $type.Optional<HTMLElement | string>): $type.Optional<HTMLElement> {\r\n\tif ($type.isString(el)) {\r\n\t\tlet e: Element | null = document.getElementById(el);\r\n\r\n\t\tif (e == null) {\r\n\t\t\te = document.getElementsByClassName(el)[0];\r\n\t\t}\r\n\r\n\t\tif (e instanceof HTMLElement) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t} else if (el instanceof HTMLElement) {\r\n\t\treturn el;\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\telement.classList.add(className);\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \") + \" \" + className);\r\n\t\t}\r\n\t\telse {\r\n\t\t\telement.setAttribute(\"class\", className);\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element: HTMLElement | SVGSVGElement, className: string): void {\r\n\tif (!element) {\r\n\t\treturn;\r\n\t}\r\n\tif (element.classList) {\r\n\t\telement.classList.remove(className);\r\n\t}\r\n\telse {\r\n\t\tlet currentClassName = element.getAttribute(\"class\");\r\n\t\tif (currentClassName) {\r\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\r\n\t\t\t\treturn item !== className;\r\n\t\t\t}).join(\" \"));\r\n\t\t}\r\n\t\t//element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\r\nexport function setStyle(element: HTMLElement | SVGSVGElement, property: string, value: string): void {\r\n\t(<any>element.style)[property] = value;\r\n}\r\n\r\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getComputedStyle(element: Element, property: string): string | number {\r\n\r\n\tif ((<any>element).currentStyle) {\r\n\t\treturn (<any>element).currentStyle[property];\r\n\t}\r\n\r\n\treturn document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\r\n}\r\n\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function blur(): void {\r\n\tlet input = document.createElement(\"input\");\r\n\tinput.style.position = \"fixed\";\r\n\tinput.style.top = \"0px\";\r\n\tinput.style.left = \"-10000px\";\r\n\tdocument.body.appendChild(input);\r\n\tinput.focus();\r\n\tinput.blur();\r\n\tdocument.body.removeChild(input);\r\n}\r\n\r\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\r\nexport function focus(element: HTMLElement | SVGSVGElement): void {\r\n\r\n\tif (element instanceof HTMLElement) {\r\n\t\telement.focus();\r\n\t}\r\n\telse {\r\n\t\tlet input = document.createElement(\"input\");\r\n\t\tlet fo = <SVGSVGElement>document.createElementNS(SVGNS, \"foreignObject\");\r\n\t\tfo.appendChild(input);\r\n\t\telement.appendChild(fo);\r\n\t\tinput.focus();\r\n\t\tinput.disabled = true;\r\n\t\tfo.remove();\r\n\t}\r\n\r\n\t/*if ((<any>element).focus != undefined) {\r\n\t\t(<any>element).focus();\r\n\t}\r\n\telse if (element instanceof SVGSVGElement) {\r\n\t\t// Not implemented\r\n\t\t// @todo implement focus fallback\r\n\t}*/\r\n}\r\n\r\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\r\nexport function outerHTML(element: HTMLElement | SVGSVGElement): string {\r\n\tif (element.outerHTML) {\r\n\t\treturn element.outerHTML;\r\n\t}\r\n\telse {\r\n\t\tlet twrap = document.createElement(\"div\");\r\n\t\tlet tnode = element.cloneNode(true);\r\n\t\ttwrap.appendChild(tnode);\r\n\t\tlet content = twrap.innerHTML;\r\n\t\treturn content;\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\r\nexport function isElement(el: HTMLElement): boolean {\r\n\treturn el instanceof Object && el && el.nodeType === 1;\r\n}\r\n\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a: HTMLElement | SVGSVGElement, b: HTMLElement | SVGSVGElement): boolean {\r\n\tlet cursor: Node = b;\r\n\r\n\twhile (true) {\r\n\t\tif (a === cursor) {\r\n\t\t\treturn true;\r\n\r\n\t\t} else if (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the shadow root of the element or null\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getShadowRoot(a: Node): ShadowRoot | null {\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getRoot(a: Node): Document | ShadowRoot | null {\r\n\t// TODO replace with Node.prototype.getRootNode\r\n\tconst owner = a.ownerDocument;\r\n\r\n\tlet cursor: Node = a;\r\n\r\n\twhile (true) {\r\n\t\tif (cursor.parentNode == null) {\r\n\t\t\t// If the cursor is the document, or it is a ShadowRoot\r\n\t\t\t// TODO better ShadowRoot detection\r\n\t\t\tif (cursor === owner || (<ShadowRoot>cursor).host != null) {\r\n\t\t\t\treturn <Document | ShadowRoot>cursor;\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tcursor = cursor.parentNode;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\r\nexport function eventTarget(event: Event): EventTarget {\r\n\tif (typeof (<any>event).composedPath === \"function\") {\r\n\t\treturn (<any>event).composedPath()[0];\r\n\r\n\t} else {\r\n\t\treturn event.target;\r\n\t}\r\n}\r\n\r\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\r\nexport function copyAttributes(source: Element | HTMLElement | SVGSVGElement, target: HTMLElement | SVGSVGElement): void {\r\n\t$array.each(source.attributes, (attr) => {\r\n\t\t// TODO what if it's null ?\r\n\t\tif (attr.value != null) {\r\n\t\t\ttarget.setAttribute(attr.name, attr.value);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\r\nexport function fixPixelPerfect(el: HTMLElement): void {\r\n\treadFrame(() => {\r\n\t\t// sometimes IE doesn't like this\r\n\t\t// TODO figure out a way to remove this\r\n\t\ttry {\r\n\t\t\tconst rect = el.getBoundingClientRect();\r\n\r\n\t\t\tconst left = rect.left - Math.round(rect.left);\r\n\t\t\tconst top = rect.top - Math.round(rect.top);\r\n\r\n\t\t\tif (left !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.left = left + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (top !== 0) {\r\n\t\t\t\twriteFrame(() => {\r\n\t\t\t\t\tel.style.top = top + \"px\";\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t} catch (e) { }\r\n\t});\r\n}\r\n\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\r\n\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet(element: ShadowRoot | null): CSSStyleSheet {\r\n\tif (element == null) {\r\n\t\tif (!$type.hasValue(rootStylesheet)) {\r\n\t\t\t// TODO use createElementNS ?\r\n\t\t\tconst e = document.createElement(\"style\");\r\n\t\t\te.type = \"text/css\";\r\n\t\t\tif (options.nonce != \"\") {\r\n\t\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t\t}\r\n\t\t\tdocument.head.appendChild(e);\r\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\r\n\t\t}\r\n\r\n\t\treturn rootStylesheet;\r\n\r\n\t} else {\r\n\t\t// TODO use createElementNS ?\r\n\t\tconst e = document.createElement(\"style\");\r\n\t\te.type = \"text/css\";\r\n\t\tif (options.nonce != \"\") {\r\n\t\t\te.setAttribute(\"nonce\", options.nonce)\r\n\t\t}\r\n\t\telement.appendChild(e);\r\n\t\treturn e.sheet as CSSStyleSheet;\r\n\t}\r\n}\r\n\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\r\n\tconst index = root.cssRules.length;\r\n\r\n\troot.insertRule(selector + \"{}\", index);\r\n\r\n\treturn root.cssRules[index] as CSSStyleRule;\r\n}\r\n\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nexport class StyleRule extends Disposer {\r\n\r\n\t/**\r\n\t * CSS rule.\r\n\t */\r\n\tprivate _rule: CSSStyleRule;\r\n\r\n\t/**\r\n\t * A CSS selector text.\r\n\t *\r\n\t * E.g.: `.myClass p`\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t */\r\n\tpublic set selector(selector: string) {\r\n\t\tthis._rule.selectorText = selector;\r\n\t}\r\n\r\n\t/**\r\n\t * @return CSS selector\r\n\t */\r\n\tpublic get selector(): string {\r\n\t\treturn this._rule.selectorText;\r\n\t}\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param selector  CSS selector\r\n\t * @param styles    An object of style attribute - value pairs\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }) {\r\n\t\tconst root = getStylesheet(element);\r\n\r\n\t\t// TODO test this\r\n\t\tsuper(() => {\r\n\t\t\t// TODO a bit hacky\r\n\t\t\tconst index = $array.indexOf(root.cssRules, this._rule);\r\n\r\n\t\t\tif (index === -1) {\r\n\t\t\t\tthrow new Error(\"Could not dispose StyleRule\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// TODO if it's empty remove it from the DOM ?\r\n\t\t\t\troot.deleteRule(index);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._rule = appendStylesheet(root, selector);\r\n\r\n\t\t$object.each(styles, (key, value) => {\r\n\t\t\tthis.setStyle(key, value);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the same style properties with browser-specific prefixes.\r\n\t *\r\n\t * @param name   Attribute name\r\n\t * @param value  Attribute value\r\n\t */\r\n\tprivate _setVendorPrefixName(name: string, value: string): void {\r\n\t\tconst style = this._rule.style;\r\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\r\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\r\n\t\tstyle.setProperty(name, value, \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a value for specific style attribute.\r\n\t *\r\n\t * @param name   Attribute\r\n\t * @param value  Value\r\n\t */\r\n\tpublic setStyle(name: string, value: string): void {\r\n\t\tif (name === \"transition\") {\r\n\t\t\tthis._setVendorPrefixName(name, value);\r\n\r\n\t\t} else {\r\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nlet styleId: number = 0;\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport class StyleClass extends StyleRule {\r\n\r\n\t/**\r\n\t * Class name.\r\n\t */\r\n\tprivate _className: string;\r\n\r\n\t/**\r\n\t * Constructor.\r\n\t *\r\n\t * @param styles  An object of style attribute - value pairs\r\n\t * @param name    Class name\r\n\t */\r\n\tconstructor(element: ShadowRoot | null, styles: { [name: string]: string }, name?: string) {\r\n\t\tconst className =\r\n\t\t\t(!$type.hasValue(name)\r\n\t\t\t\t// TODO generate the classname randomly\r\n\t\t\t\t? \"__style_\" + (++styleId) + \"__\"\r\n\t\t\t\t: name);\r\n\r\n\t\tsuper(element, \".\" + className, styles);\r\n\r\n\t\tthis._className = className;\r\n\t}\r\n\r\n\t/**\r\n\t * Class name.\r\n\t *\r\n\t * @param name  Class name\r\n\t */\r\n\tpublic set className(name: string) {\r\n\t\tthis._className = name;\r\n\t\tthis.selector = \".\" + name;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Class name\r\n\t */\r\n\tpublic get className(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the whole class to\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic toString(): string {\r\n\t\treturn this._className;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport function ready(f: () => void): void {\r\n\tif (document.readyState !== \"loading\") {\r\n\t\tf();\r\n\r\n\t} else {\r\n\t\tconst listener = () => {\r\n\t\t\tif (document.readyState !== \"loading\") {\r\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\r\n\t\t\t\tf();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"readystatechange\", listener);\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFont(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-family\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFont(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFontSize(element: Element): string {\r\n\r\n\t// Check if element has styles set\r\n\tlet font = getComputedStyle(element, \"font-size\");\r\n\r\n\tif (!font) {\r\n\t\t// Completely transparent. Look for a parent\r\n\t\tlet parent = element.parentElement || <Element>element.parentNode;\r\n\t\tif (parent) {\r\n\t\t\treturn findFontSize(parent);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn (<string>font);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\r\nexport function isHidden(element: HTMLElement): boolean {\r\n\treturn (element.offsetParent === null);\r\n}\r\n\r\n\r\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\r\nexport function isElementInViewport(el: HTMLElement, viewportTarget?: HTMLElement | HTMLElement[]): boolean {\r\n\r\n\t// Get position data of the element\r\n\tlet rect = el.getBoundingClientRect();\r\n\r\n\t// Convert to array\r\n\tconst targets = $type.isArray(viewportTarget) ? viewportTarget : viewportTarget ? [viewportTarget] : [];\r\n\r\n\t// Should we measure against specific viewport element?\r\n\tif (targets.length) {\r\n\t\tfor (let i = 0; i < targets.length; i++) {\r\n\r\n\t\t\tconst target = targets[i];\r\n\r\n\t\t\t// Check if viewport itself is visible\r\n\t\t\tif (!isElementInViewport(target)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// Check if element is visible within the viewport\r\n\t\t\tlet viewportRect = target.getBoundingClientRect();\r\n\t\t\tif (\r\n\t\t\t\trect.top >= 0 &&\r\n\t\t\t\trect.left >= 0 &&\r\n\t\t\t\trect.top <= (viewportRect.top + viewportRect.height) &&\r\n\t\t\t\trect.left <= (viewportRect.left + viewportRect.width)\r\n\t\t\t) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn (\r\n\t\trect.top >= 0 &&\r\n\t\trect.left >= 0 &&\r\n\t\trect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n\t\trect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n\t);\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}