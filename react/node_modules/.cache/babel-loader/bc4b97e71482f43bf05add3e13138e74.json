{"ast":null,"code":"/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar CurvedColumnSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(CurvedColumnSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CurvedColumnSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CurvedColumnSeriesDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return CurvedColumnSeriesDataItem;\n}(ColumnSeriesDataItem);\n\nexport { CurvedColumnSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar CurvedColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(CurvedColumnSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CurvedColumnSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CurvedColumnSeries\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Returns an element to use for the curved column.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Element.\r\n   */\n\n\n  CurvedColumnSeries.prototype.createColumnTemplate = function () {\n    return new CurvedColumn();\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n\n    var column = dataItem.column;\n    column = dataItem.column;\n\n    if (column) {\n      var curvedColumn = dataItem.column.curvedColumn;\n      curvedColumn.fill = dataItem.column.fill;\n\n      if (this.baseAxis == this.yAxis) {\n        column.orientation = \"horizontal\";\n      } else {\n        column.orientation = \"vertical\";\n      }\n    }\n  };\n\n  return CurvedColumnSeries;\n}(ColumnSeries);\n\nexport { CurvedColumnSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;","map":{"version":3,"sources":["../../../../../src/.internal/charts/series/CurvedColumnSeries.ts"],"names":[],"mappings":"AAAA;;;;;;AAMA;;;;;;;AAMA,SAAS,YAAT,EAAqH,oBAArH,QAAiJ,gBAAjJ;AACA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAAS,QAAT,QAAyB,qBAAzB;AAGA;;;;;;;AAOA;;;;;;AAKA,IAAA,0BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;AAY/C;;;;;AAGA,WAAA,0BAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,SAAL,GAAiB,4BAAjB;;AACA,IAAA,KAAI,CAAC,UAAL;;;AACA;;AAEF,SAAA,0BAAA;AAAC,CArBD,CAAgD,oBAAhD,CAAA;;;AAsDA;;;;;;;AAOA;;;;;;;;AAOA,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;AAgCvC;;;;;AAGA,WAAA,kBAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGC,IAAA,KAAI,CAAC,SAAL,GAAiB,oBAAjB;;AACA,IAAA,KAAI,CAAC,UAAL;;;AACA;AAED;;;;;;;;AAMU,EAAA,kBAAA,CAAA,SAAA,CAAA,oBAAA,GAAV,YAAA;AACC,WAAO,IAAI,YAAJ,EAAP;AACA,GAFS;AAKV;;;;;;;;AAMO,EAAA,kBAAA,CAAA,SAAA,CAAA,uBAAA,GAAP,UAA+B,QAA/B,EAA0D;AACzD,IAAA,MAAA,CAAA,SAAA,CAAM,uBAAN,CAA6B,IAA7B,CAA6B,IAA7B,EAA8B,QAA9B;;AAEA,QAAI,MAAM,GAAG,QAAQ,CAAC,MAAtB;AACA,IAAA,MAAM,GAAG,QAAQ,CAAC,MAAlB;;AAEA,QAAI,MAAJ,EAAY;AACX,UAAI,YAAY,GAAG,QAAQ,CAAC,MAAT,CAAgB,YAAnC;AAEA,MAAA,YAAY,CAAC,IAAb,GAAoB,QAAQ,CAAC,MAAT,CAAgB,IAApC;;AAEA,UAAI,KAAK,QAAL,IAAiB,KAAK,KAA1B,EAAiC;AAChC,QAAA,MAAM,CAAC,WAAP,GAAqB,YAArB;AACA,OAFD,MAGK;AACJ,QAAA,MAAM,CAAC,WAAP,GAAqB,UAArB;AACA;AACD;AACD,GAlBM;;AAmBR,SAAA,kBAAA;AAAC,CA9ED,CAAwC,YAAxC,CAAA;;;AAgFA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,oBAA3B,IAAmD,kBAAnD;AACA,QAAQ,CAAC,iBAAT,CAA2B,4BAA3B,IAA2D,0BAA3D","sourcesContent":["/**\r\n * CurvedColumnSeries module.\r\n *\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { CurvedColumn } from \"../elements/CurvedColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CurvedColumnSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CurvedColumnSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurvedColumnSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesDataFields extends IColumnSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CurvedColumnSeries]].\r\n */\r\nexport interface ICurvedColumnSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurvedColumnSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurvedColumnSeriesAdapters extends IColumnSeriesAdapters, ICurvedColumnSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a curved columns graph.\r\n *\r\n * @see {@link ICurvedColumnSeriesEvents} for a list of available Events\r\n * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class CurvedColumnSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the column.\r\n\t */\r\n\tpublic _column: CurvedColumn;\r\n\r\n\t/**\r\n\t * Defines type of the data item.\r\n\t */\r\n\tpublic _dataItem: CurvedColumnSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ICurvedColumnSeriesDataFields\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurvedColumnSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurvedColumnSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurvedColumnSeriesEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CurvedColumnSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for the curved column.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new CurvedColumn();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validates data item's elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\r\n\t\tlet column = dataItem.column;\r\n\t\tcolumn = dataItem.column;\r\n\r\n\t\tif (column) {\r\n\t\t\tlet curvedColumn = dataItem.column.curvedColumn;\r\n\r\n\t\t\tcurvedColumn.fill = dataItem.column.fill;\r\n\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tcolumn.orientation = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcolumn.orientation = \"vertical\";\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurvedColumnSeries\"] = CurvedColumnSeries;\r\nregistry.registeredClasses[\"CurvedColumnSeriesDataItem\"] = CurvedColumnSeriesDataItem;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}