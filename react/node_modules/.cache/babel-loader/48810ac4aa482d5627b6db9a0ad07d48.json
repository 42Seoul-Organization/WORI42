{"ast":null,"code":"/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { system } from \"../System\";\nimport { registry } from \"../Registry\";\nimport { Container } from \"../Container\";\nimport { Component } from \"../Component\";\nimport { Paper } from \"../rendering/Paper\";\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\nimport { Preloader } from \"../elements/Preloader\";\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\nimport { Tooltip } from \"../elements/Tooltip\";\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\nimport { percent } from \"./Percent\";\nimport { options } from \"../Options\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport * as $dom from \"./DOM\";\nimport * as $utils from \"./Utils\";\nimport * as $log from \"./Log\";\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\n\nfunction createChild(htmlElement, classType) {\n  var htmlContainer = $dom.getElement(htmlElement); // If there's no container available yet, we create a fake one\n\n  var tmpContainer = false;\n\n  if (!htmlContainer) {\n    htmlContainer = document.createElement(\"div\");\n    htmlContainer.style.width = \"200px\";\n    htmlContainer.style.height = \"200px\";\n    htmlContainer.style.visibility = \"hidden\";\n    htmlContainer.style.position = \"absolute\";\n    document.body.appendChild(htmlContainer);\n    tmpContainer = true;\n  }\n\n  if (htmlContainer) {\n    htmlContainer.innerHTML = \"\"; //htmlContainer.style.overflow = \"hidden\";\n\n    var svgDiv_1 = new SVGContainer(htmlContainer);\n    var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1)); // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\n    // svg area - this is often needed when working with small charts.\n    // main container which holds content container and tooltips container\n\n    var container_1 = new Container();\n    container_1.htmlContainer = htmlContainer;\n    container_1.svgContainer = svgDiv_1;\n    container_1.width = percent(100);\n    container_1.height = percent(100);\n    container_1.background.fillOpacity = 0;\n    container_1.paper = paper;\n    paper.append(container_1.group); // Set up moving to proper element container if it's not yet ready at call time\n\n    if (tmpContainer) {\n      $dom.ready(function () {\n        container_1.moveHtmlContainer(htmlElement);\n      });\n    } // this is set from parent container, but this one doesn't have, so do it manually.\n\n\n    container_1.relativeWidth = 1;\n    container_1.relativeHeight = 1;\n    svgDiv_1.container = container_1; // creating classType instance\n\n    var sprite_1 = container_1.createChild(classType);\n    sprite_1.topParent = container_1;\n    var uid = sprite_1.uid;\n    registry.invalidSprites[uid] = [];\n    registry.invalidDatas[uid] = [];\n    registry.invalidPositions[uid] = [];\n    registry.invalidLayouts[uid] = [];\n    container_1.baseId = uid;\n    sprite_1.isBaseSprite = true;\n    sprite_1.focusFilter = new FocusFilter();\n    registry.baseSprites.push(sprite_1);\n    registry.baseSpritesByUid[uid] = sprite_1;\n    sprite_1.maskRectangle = {\n      x: 0,\n      y: 0,\n      width: Math.max(svgDiv_1.width || 0, 0),\n      height: Math.max(svgDiv_1.height || 0, 0)\n    }; // this solves issues with display:none, as all children are measured as 0x0\n\n    container_1.events.on(\"maxsizechanged\", function (event) {\n      if (event.previousWidth == 0 || event.previousHeight == 0) {\n        container_1.deepInvalidate();\n      }\n\n      if (sprite_1.maskRectangle) {\n        sprite_1.maskRectangle = {\n          x: 0,\n          y: 0,\n          width: Math.max(svgDiv_1.width || 0, 0),\n          height: Math.max(svgDiv_1.height || 0, 0)\n        };\n      }\n    });\n    var loopTimer_1 = null; // Checks to see whether the chart was properly disposed or not\n\n    var loop_1 = function () {\n      if (!sprite_1.isDisposed()) {\n        if ($dom.getRoot(sprite_1.dom) == null) {\n          if (options.autoDispose) {\n            container_1.htmlContainer = undefined;\n            svgDiv_1.htmlElement = undefined;\n            sprite_1.dispose();\n          } else {\n            $log.warn(\"Chart was not disposed\", sprite_1.uid);\n          }\n\n          loopTimer_1 = null;\n        } else {\n          loopTimer_1 = window.setTimeout(loop_1, 1000);\n        }\n      } else {\n        loopTimer_1 = null;\n      }\n    };\n\n    loop_1();\n    sprite_1.addDisposer(new Disposer(function () {\n      if (loopTimer_1 !== null) {\n        clearTimeout(loopTimer_1);\n      }\n\n      $array.remove(registry.baseSprites, sprite_1);\n      registry.baseSpritesByUid[sprite_1.uid] = undefined;\n    })); // TODO figure out a better way of doing this\n\n    sprite_1.addDisposer(container_1); // tooltip container\n\n    var tooltipContainer_1 = container_1.createChild(Container);\n    tooltipContainer_1.topParent = container_1;\n    tooltipContainer_1.width = percent(100);\n    tooltipContainer_1.height = percent(100);\n    tooltipContainer_1.isMeasured = false;\n    container_1.tooltipContainer = tooltipContainer_1;\n    sprite_1.tooltip = new Tooltip();\n    sprite_1.tooltip.hide(0);\n    sprite_1.tooltip.setBounds({\n      x: 0,\n      y: 0,\n      width: tooltipContainer_1.maxWidth,\n      height: tooltipContainer_1.maxHeight\n    });\n    tooltipContainer_1.events.on(\"maxsizechanged\", function () {\n      $type.getValue(sprite_1.tooltip).setBounds({\n        x: 0,\n        y: 0,\n        width: tooltipContainer_1.maxWidth,\n        height: tooltipContainer_1.maxHeight\n      });\n    }, undefined, false); //@todo: maybe we don't need to create one by default but only on request?\n\n    var preloader_1 = new Preloader();\n    preloader_1.events.on(\"inited\", function () {\n      preloader_1.__disabled = true;\n    }, undefined, false);\n    container_1.preloader = preloader_1; //if (!options.commercialLicense) {\n\n    if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\n      var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\n      tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\n        if (tooltipContainer_1.maxWidth <= 100 || tooltipContainer_1.maxHeight <= 50) {\n          logo_1.hide();\n        } else if (logo_1.isHidden || logo_1.isHiding) {\n          logo_1.show();\n        }\n      }, undefined, false);\n      sprite_1.logo = logo_1;\n      logo_1.align = \"left\";\n      logo_1.valign = \"bottom\";\n    }\n\n    $utils.used(sprite_1.numberFormatter); // need to create one.\n    // Set this as an autonomouse instance\n    // Controls like Preloader, Export will use this.\n\n    container_1.isStandaloneInstance = true;\n\n    if (options.onlyShowOnViewport) {\n      if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\n        sprite_1.__disabled = true;\n        sprite_1.tooltipContainer.__disabled = true;\n        var disposers = [$dom.addEventListener(window, \"DOMContentLoaded\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"load\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"resize\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"scroll\", function () {\n          viewPortHandler(sprite_1);\n        })];\n\n        if (options.viewportTarget) {\n          var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\n\n          for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            disposers.push($dom.addEventListener(target, \"resize\", function () {\n              viewPortHandler(sprite_1);\n            }));\n            disposers.push($dom.addEventListener(target, \"scroll\", function () {\n              viewPortHandler(sprite_1);\n            }));\n          }\n        }\n\n        var disposer = new MultiDisposer(disposers);\n        sprite_1.addDisposer(disposer);\n        sprite_1.vpDisposer = disposer;\n      } else if (options.queue) {\n        addToQueue(sprite_1);\n      }\n    } else if (options.queue) {\n      addToQueue(sprite_1);\n    }\n\n    return sprite_1;\n  } else {\n    system.log(\"html container not found\");\n    throw new Error(\"html container not found\");\n  }\n}\n/**\r\n * Disposes all of the currently active charts.\r\n */\n\n\nexport function disposeAllCharts() {\n  while (registry.baseSprites.length !== 0) {\n    registry.baseSprites.pop().dispose();\n  }\n}\nexport function addToQueue(sprite) {\n  if (registry.queue.indexOf(sprite) == -1) {\n    sprite.__disabled = true;\n    sprite.tooltipContainer.__disabled = true;\n    sprite.events.disableType(\"appeared\");\n\n    if (registry.queue.length == 0) {\n      registry.events.once(\"exitframe\", function () {\n        queueHandler(sprite);\n      });\n      system.requestFrame();\n    }\n\n    sprite.addDisposer(new Disposer(function () {\n      removeFromQueue(sprite);\n    }));\n    registry.queue.push(sprite);\n  }\n}\nexport function removeFromQueue(sprite) {\n  var index = registry.queue.indexOf(sprite);\n\n  if (index >= 0) {\n    registry.queue.splice(registry.queue.indexOf(sprite), 1);\n    var nextSprite = registry.queue[index];\n\n    if (nextSprite) {\n      queueHandler(nextSprite);\n    }\n  }\n}\nexport function viewPortHandler(sprite) {\n  if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n\n    addToQueue(sprite);\n  }\n}\nexport function queueHandler(sprite) {\n  sprite.__disabled = false;\n  sprite.tooltipContainer.__disabled = false;\n  sprite.events.enableType(\"appeared\");\n  sprite.dispatch(\"removedfromqueue\");\n\n  if (sprite.showOnInit) {\n    sprite.events.on(\"appeared\", function () {\n      removeFromQueue(sprite);\n    });\n  }\n\n  if (sprite.vpDisposer) {\n    sprite.vpDisposer.dispose();\n  }\n\n  if (sprite instanceof Container) {\n    sprite.invalidateLabels();\n  }\n\n  if (sprite.tooltipContainer) {\n    sprite.tooltipContainer.invalidateLayout();\n  }\n\n  if (sprite instanceof Component) {\n    sprite.invalidateData();\n    sprite.reinit();\n    sprite.events.once(\"datavalidated\", function () {\n      if (sprite.showOnInit) {\n        sprite.appear();\n      } else {\n        removeFromQueue(sprite);\n      }\n    });\n  } else {\n    sprite.reinit();\n    sprite.events.once(\"inited\", function () {\n      removeFromQueue(sprite);\n    });\n\n    if (sprite.showOnInit) {\n      sprite.appear();\n    }\n  }\n}\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\n\nexport function create(htmlElement, classType) {\n  // This is a nasty hack for the benefit of vanilla JS users, who do not\n  // enjoy benefits of type-check anyway.\n  // We're allowing passing in a name of the class rather than type reference\n  // itself.\n  var classError;\n\n  if ($type.isString(classType)) {\n    if ($type.hasValue(registry.registeredClasses[classType])) {\n      classType = registry.registeredClasses[classType];\n    } else {\n      classType = registry.registeredClasses[\"Container\"];\n      classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n    }\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, classType); // Error?\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  }\n\n  return chart;\n}\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\n\nexport function createFromConfig(config, htmlElement, classType) {\n  // Extract chart type from config if necessary\n  if (!$type.hasValue(classType)) {\n    classType = config.type;\n    delete config.type;\n  } // Extract element from config if necessary\n\n\n  if (!$type.hasValue(htmlElement)) {\n    htmlElement = config.container;\n    delete config.container;\n  } // Check if we need to extract actual type reference\n\n\n  var finalType;\n  var classError;\n\n  if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\n    finalType = registry.registeredClasses[classType];\n  } else if (typeof classType !== \"function\") {\n    finalType = Container;\n    classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n  } else {\n    finalType = classType;\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, finalType); // Set config\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  } else {\n    chart.config = config;\n  }\n\n  return chart;\n}\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\nexport function useTheme(value) {\n  if (registry.themes.indexOf(value) === -1) {\n    registry.themes.push(value);\n  }\n}\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\nexport function unuseTheme(value) {\n  $array.remove(registry.themes, value);\n}\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\n\nexport function unuseAllThemes() {\n  registry.themes = [];\n}\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\n\nexport function addLicense(license) {\n  options.licenses.push(license);\n}","map":{"version":3,"sources":["../../../../../src/.internal/core/utils/Instance.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { ITheme } from \"../../themes/ITheme\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\tlet htmlContainer = $dom.getElement(htmlElement);\r\n\r\n\t// If there's no container available yet, we create a fake one\r\n\tlet tmpContainer = false;\r\n\tif (!htmlContainer) {\r\n\t\thtmlContainer = document.createElement(\"div\");\r\n\t\thtmlContainer.style.width = \"200px\";\r\n\t\thtmlContainer.style.height = \"200px\";\r\n\t\thtmlContainer.style.visibility = \"hidden\";\r\n\t\thtmlContainer.style.position = \"absolute\";\r\n\t\tdocument.body.appendChild(htmlContainer);\r\n\t\ttmpContainer = true;\r\n\t}\r\n\r\n\tif (htmlContainer) {\r\n\r\n\t\thtmlContainer.innerHTML = \"\";\r\n\t\t//htmlContainer.style.overflow = \"hidden\";\r\n\r\n\t\tlet svgDiv = new SVGContainer(htmlContainer);\r\n\t\tlet paper = new Paper(svgDiv.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n\r\n\t\t// the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n\t\t// svg area - this is often needed when working with small charts.\r\n\r\n\t\t// main container which holds content container and tooltips container\r\n\t\tlet container = new Container();\r\n\t\tcontainer.htmlContainer = htmlContainer;\r\n\t\tcontainer.svgContainer = svgDiv;\r\n\t\tcontainer.width = percent(100);\r\n\t\tcontainer.height = percent(100);\r\n\t\tcontainer.background.fillOpacity = 0;\r\n\t\tcontainer.paper = paper;\r\n\t\tpaper.append(container.group);\r\n\r\n\t\t// Set up moving to proper element container if it's not yet ready at call time\r\n\t\tif (tmpContainer) {\r\n\t\t\t$dom.ready(() => {\r\n\t\t\t\tcontainer.moveHtmlContainer(htmlElement);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// this is set from parent container, but this one doesn't have, so do it manually.\r\n\t\tcontainer.relativeWidth = 1;\r\n\t\tcontainer.relativeHeight = 1;\r\n\r\n\t\tsvgDiv.container = container;\r\n\r\n\t\t// creating classType instance\r\n\t\tlet sprite = container.createChild(classType);\r\n\t\tsprite.topParent = container;\r\n\t\tlet uid = sprite.uid;\r\n\r\n\t\tregistry.invalidSprites[uid] = [];\r\n\t\tregistry.invalidDatas[uid] = [];\r\n\t\tregistry.invalidPositions[uid] = [];\r\n\t\tregistry.invalidLayouts[uid] = [];\r\n\r\n\t\tcontainer.baseId = uid;\r\n\r\n\t\tsprite.isBaseSprite = true;\r\n\t\tsprite.focusFilter = new FocusFilter();\r\n\t\tregistry.baseSprites.push(sprite);\r\n\t\tregistry.baseSpritesByUid[uid] = sprite;\r\n\r\n\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\r\n\t\t// this solves issues with display:none, as all children are measured as 0x0\r\n\t\tcontainer.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tcontainer.deepInvalidate();\r\n\t\t\t}\r\n\t\t\tif (sprite.maskRectangle) {\r\n\t\t\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet loopTimer: number | null = null;\r\n\r\n\t\t// Checks to see whether the chart was properly disposed or not\r\n\t\tconst loop = () => {\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\tif ($dom.getRoot(sprite.dom) == null) {\r\n\t\t\t\t\tif (options.autoDispose) {\r\n\t\t\t\t\t\tcontainer.htmlContainer = undefined;\r\n\t\t\t\t\t\tsvgDiv.htmlElement = undefined;\r\n\t\t\t\t\t\tsprite.dispose();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$log.warn(\"Chart was not disposed\", sprite.uid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloopTimer = null;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloopTimer = window.setTimeout(loop, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tloopTimer = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tloop();\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tif (loopTimer !== null) {\r\n\t\t\t\tclearTimeout(loopTimer);\r\n\t\t\t}\r\n\t\t\t$array.remove(registry.baseSprites, sprite);\r\n\t\t\tregistry.baseSpritesByUid[sprite.uid] = undefined;\r\n\t\t}));\r\n\r\n\t\t// TODO figure out a better way of doing this\r\n\t\tsprite.addDisposer(container);\r\n\r\n\t\t// tooltip container\r\n\t\tlet tooltipContainer: Container = container.createChild(Container);\r\n\t\ttooltipContainer.topParent = container;\r\n\t\ttooltipContainer.width = percent(100);\r\n\t\ttooltipContainer.height = percent(100);\r\n\t\ttooltipContainer.isMeasured = false;\r\n\t\tcontainer.tooltipContainer = tooltipContainer;\r\n\r\n\t\tsprite.tooltip = new Tooltip();\r\n\t\tsprite.tooltip.hide(0);\r\n\t\tsprite.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\r\n\t\ttooltipContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\t$type.getValue(sprite.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\t\t}, undefined, false)\r\n\r\n\t\t//@todo: maybe we don't need to create one by default but only on request?\r\n\r\n\t\tlet preloader = new Preloader();\r\n\t\tpreloader.events.on(\"inited\", () => {\r\n\t\t\tpreloader.__disabled = true;\r\n\t\t}, undefined, false);\r\n\t\tcontainer.preloader = preloader;\r\n\r\n\t\t//if (!options.commercialLicense) {\r\n\t\tif (sprite instanceof Container && !sprite.hasLicense()) {\r\n\t\t\tlet logo = tooltipContainer.createChild(AmChartsLogo);\r\n\t\t\ttooltipContainer.events.on(\"maxsizechanged\", (ev) => {\r\n\t\t\t\tif ((tooltipContainer.maxWidth <= 100) || (tooltipContainer.maxHeight <= 50)) {\r\n\t\t\t\t\tlogo.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse if (logo.isHidden || logo.isHiding) {\r\n\t\t\t\t\tlogo.show();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tsprite.logo = logo;\r\n\t\t\tlogo.align = \"left\";\r\n\t\t\tlogo.valign = \"bottom\";\r\n\t\t}\r\n\r\n\t\t$utils.used(sprite.numberFormatter); // need to create one.\r\n\r\n\t\t// Set this as an autonomouse instance\r\n\t\t// Controls like Preloader, Export will use this.\r\n\t\tcontainer.isStandaloneInstance = true;\r\n\r\n\t\tif (options.onlyShowOnViewport) {\r\n\t\t\tif (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\tsprite.tooltipContainer.__disabled = true;\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\t$dom.addEventListener(window, \"DOMContentLoaded\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"load\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"resize\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"scroll\", function() { viewPortHandler(sprite); })\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (options.viewportTarget) {\r\n\t\t\t\t\tconst targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n\t\t\t\t\tfor (let i = 0; i < targets.length; i++) {\r\n\t\t\t\t\t\tconst target = targets[i];\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"resize\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"scroll\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet disposer = new MultiDisposer(disposers);\r\n\r\n\t\t\t\tsprite.addDisposer(disposer);\r\n\t\t\t\tsprite.vpDisposer = disposer;\r\n\t\t\t}\r\n\t\t\telse if (options.queue) {\r\n\t\t\t\taddToQueue(sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.queue) {\r\n\t\t\taddToQueue(sprite);\r\n\t\t}\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\telse {\r\n\t\tsystem.log(\"html container not found\");\r\n\t\tthrow new Error(\"html container not found\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts(): void {\r\n\twhile (registry.baseSprites.length !== 0) {\r\n\t\tregistry.baseSprites.pop().dispose();\r\n\t}\r\n}\r\n\r\nexport function addToQueue(sprite: Sprite) {\r\n\tif (registry.queue.indexOf(sprite) == -1) {\r\n\t\tsprite.__disabled = true;\r\n\t\tsprite.tooltipContainer.__disabled = true;\r\n\t\tsprite.events.disableType(\"appeared\");\r\n\r\n\t\tif (registry.queue.length == 0) {\r\n\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\tqueueHandler(sprite);\r\n\t\t\t})\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t}))\r\n\r\n\t\tregistry.queue.push(sprite);\r\n\t}\r\n}\r\n\r\nexport function removeFromQueue(sprite: Sprite) {\r\n\tlet index = registry.queue.indexOf(sprite);\r\n\tif (index >= 0) {\r\n\t\tregistry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n\t\tlet nextSprite = registry.queue[index];\r\n\t\tif (nextSprite) {\r\n\t\t\tqueueHandler(nextSprite);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function viewPortHandler(sprite: Sprite) {\r\n\tif (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\r\n\t\taddToQueue(sprite);\r\n\t}\r\n}\r\n\r\nexport function queueHandler(sprite: Sprite) {\r\n\tsprite.__disabled = false;\r\n\tsprite.tooltipContainer.__disabled = false;\r\n\tsprite.events.enableType(\"appeared\");\r\n\tsprite.dispatch(\"removedfromqueue\");\r\n\r\n\tif (sprite.showOnInit) {\r\n\t\tsprite.events.on(\"appeared\", () => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t})\r\n\t}\r\n\r\n\tif (sprite.vpDisposer) {\r\n\t\tsprite.vpDisposer.dispose();\r\n\t}\r\n\tif (sprite instanceof Container) {\r\n\t\tsprite.invalidateLabels();\r\n\t}\r\n\r\n\tif (sprite.tooltipContainer) {\r\n\t\tsprite.tooltipContainer.invalidateLayout();\r\n\t}\r\n\tif (sprite instanceof Component) {\r\n\t\tsprite.invalidateData();\r\n\t\tsprite.reinit();\r\n\r\n\t\tsprite.events.once(\"datavalidated\", () => {\r\n\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\tsprite.appear();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tsprite.reinit();\r\n\t\tsprite.events.once(\"inited\", () => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t})\r\n\t\tif (sprite.showOnInit) {\r\n\t\t\tsprite.appear();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\r\n\t// This is a nasty hack for the benefit of vanilla JS users, who do not\r\n\t// enjoy benefits of type-check anyway.\r\n\t// We're allowing passing in a name of the class rather than type reference\r\n\t// itself.\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType)) {\r\n\t\tif ($type.hasValue(registry.registeredClasses[classType])) {\r\n\t\t\tclassType = registry.registeredClasses[classType];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassType = registry.registeredClasses[\"Container\"];\r\n\t\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, classType);\r\n\r\n\t// Error?\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config: { [index: string]: any }, htmlElement?: string | HTMLElement, classType?: { new(): Sprite; } | string): Sprite {\r\n\r\n\t// Extract chart type from config if necessary\r\n\tif (!$type.hasValue(classType)) {\r\n\t\tclassType = config.type;\r\n\t\tdelete config.type;\r\n\t}\r\n\r\n\t// Extract element from config if necessary\r\n\tif (!$type.hasValue(htmlElement)) {\r\n\t\thtmlElement = config.container;\r\n\t\tdelete config.container;\r\n\t}\r\n\r\n\t// Check if we need to extract actual type reference\r\n\tlet finalType;\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n\t\tfinalType = registry.registeredClasses[classType];\r\n\t}\r\n\telse if (typeof classType !== \"function\") {\r\n\t\tfinalType = Container;\r\n\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t}\r\n\telse {\r\n\t\tfinalType = classType;\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, finalType);\r\n\r\n\t// Set config\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\telse {\r\n\t\tchart.config = config;\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value: ITheme): void {\r\n\tif (registry.themes.indexOf(value) === -1) {\r\n\t\tregistry.themes.push(value);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value: ITheme): void {\r\n\t$array.remove(registry.themes, value);\r\n}\r\n\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes(): void {\r\n\tregistry.themes = [];\r\n}\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\toptions.licenses.push(license);\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}