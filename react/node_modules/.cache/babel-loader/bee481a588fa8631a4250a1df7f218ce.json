{"ast":null,"code":"/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Candlestick =\n/** @class */\nfunction (_super) {\n  __extends(Candlestick, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Candlestick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Candlestick\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Candlestick.prototype.createAssets = function () {\n    _super.prototype.createAssets.call(this);\n\n    this.lowLine = this.createChild(Line);\n    this.lowLine.shouldClone = false;\n    this.highLine = this.createChild(Line);\n    this.highLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[Candlestick]].\r\n   *\r\n   * @param source Source Candlestick\r\n   */\n\n\n  Candlestick.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.lowLine) {\n      this.lowLine.copyFrom(source.lowLine);\n    }\n\n    if (this.highLine) {\n      this.highLine.copyFrom(source.highLine);\n    }\n  };\n\n  return Candlestick;\n}(Column);\n\nexport { Candlestick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;","map":{"version":3,"sources":["../../../../../src/.internal/charts/elements/Candlestick.ts"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAAS,MAAT,QAA0E,UAA1E;AACA,SAAS,IAAT,QAAqB,0BAArB;AACA,SAAS,QAAT,QAAyB,qBAAzB;AA4BA;;;;;;;AAOA;;;;;;;;;AAQA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;AA2BhC;;;;;AAGA,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,SAAL,GAAiB,aAAjB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,MAAd;;AACA;AAED;;;;;AAGU,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB;;AAEA,SAAK,OAAL,GAAe,KAAK,WAAL,CAAiB,IAAjB,CAAf;AACA,SAAK,OAAL,CAAa,WAAb,GAA2B,KAA3B;AAEA,SAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,IAAjB,CAAhB;AACA,SAAK,QAAL,CAAc,WAAd,GAA4B,KAA5B;AACA,GARS;AAUV;;;;;;;AAKO,EAAA,WAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,MAAhB,EAA4B;AAC3B,IAAA,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,MAAf;;AACA,QAAI,KAAK,OAAT,EAAkB;AACjB,WAAK,OAAL,CAAa,QAAb,CAAsB,MAAM,CAAC,OAA7B;AACA;;AACD,QAAI,KAAK,QAAT,EAAmB;AAClB,WAAK,QAAL,CAAc,QAAd,CAAuB,MAAM,CAAC,QAA9B;AACA;AACD,GARM;;AAUR,SAAA,WAAA;AAAC,CAhED,CAAiC,MAAjC,CAAA;;;AAkEA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,WAA5C","sourcesContent":["/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Candlestick]].\r\n */\r\nexport interface ICandlestickProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Candlestick]].\r\n */\r\nexport interface ICandlestickEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Candlestick]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickAdapters extends IColumnAdapters, ICandlestickProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Candlestick extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickEvents;\r\n\r\n\t/**\r\n\t * Low line element\r\n\t */\r\n\tpublic lowLine: Line;\r\n\r\n\t/**\r\n\t * High line element\r\n\t */\r\n\tpublic highLine: Line;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Candlestick\";\r\n\t\tthis.layout = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tsuper.createAssets();\r\n\r\n\t\tthis.lowLine = this.createChild(Line);\r\n\t\tthis.lowLine.shouldClone = false;\r\n\r\n\t\tthis.highLine = this.createChild(Line);\r\n\t\tthis.highLine.shouldClone = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Candlestick]].\r\n\t *\r\n\t * @param source Source Candlestick\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.lowLine) {\r\n\t\t\tthis.lowLine.copyFrom(source.lowLine);\r\n\t\t}\r\n\t\tif (this.highLine) {\r\n\t\t\tthis.highLine.copyFrom(source.highLine);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}