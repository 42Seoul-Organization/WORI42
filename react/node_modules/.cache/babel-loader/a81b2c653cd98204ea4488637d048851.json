{"ast":null,"code":"/**\r\n * Module for \"Blur\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a \"Blur\" filter.\r\n */\n\nvar BlurFilter =\n/** @class */\nfunction (_super) {\n  __extends(BlurFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function BlurFilter() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"BlurFilter\"; // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n\n    _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\n\n    _this.feGaussianBlur.attr({\n      \"result\": \"blurOut\",\n      \"in\": \"SourceGraphic\"\n    });\n\n    _this.filterPrimitives.push(_this.feGaussianBlur); // Set default properties\n\n\n    _this.width = 200;\n    _this.height = 200;\n    _this.blur = 1.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(BlurFilter.prototype, \"blur\", {\n    /**\r\n     * @return Blur\r\n     */\n    get: function get() {\n      return this.properties.blur;\n    },\n\n    /**\r\n     * Blur value.\r\n     *\r\n     * The bigger the value, the blurrier the target element will become.\r\n     *\r\n     * @default 1.5\r\n     * @param value Blur\r\n     */\n    set: function set(value) {\n      this.properties.blur = value;\n      this.feGaussianBlur.attr({\n        \"stdDeviation\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return BlurFilter;\n}(Filter);\n\nexport { BlurFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;","map":{"version":3,"sources":["../../../../../../src/.internal/core/rendering/filters/BlurFilter.ts"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAAS,MAAT,QAAyC,UAAzC;AAGA,SAAS,QAAT,QAAyB,gBAAzB;AAwDC;AAGD;;;;;;;AAOA;;;;AAGA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;AAoB/B;;;;;AAGA,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAGC,IAAA,KAAI,CAAC,SAAL,GAAiB,YAAjB,CAHD,CAKC;AACA;AACA;AACA;;AAEA,IAAA,KAAI,CAAC,cAAL,GAAsB,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,gBAAf,CAAtB;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,IAApB,CAAyB;AAAE,gBAAU,SAAZ;AAAuB,YAAM;AAA7B,KAAzB;;AACA,IAAA,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,KAAI,CAAC,cAAhC,EAZD,CAcC;;;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,GAAb;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,GAAd;AACA,IAAA,KAAI,CAAC,IAAL,GAAY,GAAZ;;AAEA,IAAA,KAAI,CAAC,UAAL;;;AACA;;AAUD,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,MAAX,EAAe;AAKf;;;SAGA,eAAA;AACC,aAAO,KAAK,UAAL,CAAgB,IAAvB;AACA,KAVc;;AARf;;;;;;;;SAQA,aAAgB,KAAhB,EAA6B;AAC5B,WAAK,UAAL,CAAgB,IAAhB,GAAuB,KAAvB;AACA,WAAK,cAAL,CAAoB,IAApB,CAAyB;AAAE,wBAAgB,KAAK,GAAG,KAAK;AAA/B,OAAzB;AACA,KAHc;oBAAA;;AAAA,GAAf;AAYD,SAAA,UAAA;AAAC,CAjED,CAAgC,MAAhC,CAAA;;;AAmEA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,YAA3B,IAA2C,UAA3C","sourcesContent":["/**\r\n * Module for \"Blur\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Blur\" filter.\r\n */\r\nexport interface BlurFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tdy?: number;\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Opacity. (0-1)\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\topacity?: number;\r\n\r\n\t/**\r\n\t * Color.\r\n\t *\r\n\t * @ignore Deprecated\r\n\t * @deprecated ?\r\n\t * @todo Remove?\r\n\t */\r\n\tcolor?: Color;\r\n\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"Blur\" filter.\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: BlurFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t * @see [@link BlurFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<BlurFilterProperties, any>;\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"BlurFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Blur value.\r\n\t *\r\n\t * The bigger the value, the blurrier the target element will become.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param value Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"BlurFilter\"] = BlurFilter;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}