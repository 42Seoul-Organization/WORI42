{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/* eslint-disable no-bitwise, unicorn/prefer-query-selector */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* eslint-disable max-len */\n\n\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/* eslint-enable max-len */\n\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var w = img.naturalWidth;\n  var h = img.naturalHeight;\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, aSum, rOutSum, gOutSum, bOutSum, aOutSum, rInSum, gInSum, bInSum, aInSum, pr, pg, pb, pa, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = aInSum = rSum = gSum = bSum = aSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[p + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = (rSum * mulSum >> shgSum) * pa;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      aInSum += stackIn.a = pixels[p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = aInSum = rInSum = gSum = bSum = aSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (rSum * mulSum >> shgSum) * pa;\n        pixels[p + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[p + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      aSum += aInSum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, rOutSum, gOutSum, bOutSum, rInSum, gInSum, bInSum, pr, pg, pb, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = rSum = gSum = bSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = rInSum = gSum = bSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = rSum * mulSum >> shgSum;\n      pixels[p + 1] = gSum * mulSum >> shgSum;\n      pixels[p + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };","map":{"version":3,"sources":["/Users/leehochan/Desktop/WORI42/react/node_modules/stackblur-canvas/dist/stackblur-es.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","mulTable","shgTable","processImage","img","canvas","radius","blurAlphaChannel","document","getElementById","w","naturalWidth","h","naturalHeight","style","width","height","context","getContext","clearRect","drawImage","isNaN","processCanvasRGBA","processCanvasRGB","getImageDataFromCanvas","topX","topY","getImageData","e","Error","imageData","processImageDataRGBA","putImageData","pixels","data","x","y","i","p","yp","yi","yw","rSum","gSum","bSum","aSum","rOutSum","gOutSum","bOutSum","aOutSum","rInSum","gInSum","bInSum","aInSum","pr","pg","pb","pa","rbs","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","stackEnd","next","stackIn","stackOut","mulSum","shgSum","r","g","b","a","processImageDataRGB","canvasRGB","canvasRGBA","image","imageDataRGB","imageDataRGBA"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB;;AAEA,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AACvEH,IAAAA,OAAO,GAAG,UAAUC,GAAV,EAAe;AACvB,aAAO,OAAOA,GAAd;AACD,KAFD;AAGD,GAJD,MAIO;AACLD,IAAAA,OAAO,GAAG,UAAUC,GAAV,EAAe;AACvB,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AACD,KAFD;AAGD;;AAED,SAAOD,OAAO,CAACC,GAAD,CAAd;AACD;;AAED,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;AAED;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;AACA,IAAIC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,GAAjF,EAAsF,GAAtF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,GAArG,EAA0G,GAA1G,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,EAA8H,GAA9H,EAAmI,GAAnI,EAAwI,GAAxI,EAA6I,GAA7I,EAAkJ,GAAlJ,EAAuJ,GAAvJ,EAA4J,GAA5J,EAAiK,GAAjK,EAAsK,GAAtK,EAA2K,GAA3K,EAAgL,GAAhL,EAAqL,GAArL,EAA0L,GAA1L,EAA+L,GAA/L,EAAoM,GAApM,EAAyM,GAAzM,EAA8M,GAA9M,EAAmN,GAAnN,EAAwN,GAAxN,EAA6N,GAA7N,EAAkO,GAAlO,EAAuO,GAAvO,EAA4O,GAA5O,EAAiP,GAAjP,EAAsP,GAAtP,EAA2P,GAA3P,EAAgQ,GAAhQ,EAAqQ,GAArQ,EAA0Q,GAA1Q,EAA+Q,GAA/Q,EAAoR,GAApR,EAAyR,GAAzR,EAA8R,GAA9R,EAAmS,GAAnS,EAAwS,GAAxS,EAA6S,GAA7S,EAAkT,GAAlT,EAAuT,GAAvT,EAA4T,GAA5T,EAAiU,GAAjU,EAAsU,GAAtU,EAA2U,GAA3U,EAAgV,GAAhV,EAAqV,GAArV,EAA0V,GAA1V,EAA+V,GAA/V,EAAoW,GAApW,EAAyW,GAAzW,EAA8W,GAA9W,EAAmX,GAAnX,EAAwX,GAAxX,EAA6X,GAA7X,EAAkY,GAAlY,EAAuY,GAAvY,EAA4Y,GAA5Y,EAAiZ,GAAjZ,EAAsZ,GAAtZ,EAA2Z,GAA3Z,EAAga,GAAha,EAAqa,GAAra,EAA0a,GAA1a,EAA+a,GAA/a,EAAob,GAApb,EAAyb,GAAzb,EAA8b,GAA9b,EAAmc,GAAnc,EAAwc,GAAxc,EAA6c,GAA7c,EAAkd,GAAld,EAAud,GAAvd,EAA4d,GAA5d,EAAie,GAAje,EAAse,GAAte,EAA2e,GAA3e,EAAgf,GAAhf,EAAqf,GAArf,EAA0f,GAA1f,EAA+f,GAA/f,EAAogB,GAApgB,EAAygB,GAAzgB,EAA8gB,GAA9gB,EAAmhB,GAAnhB,EAAwhB,GAAxhB,EAA6hB,GAA7hB,EAAkiB,GAAliB,EAAuiB,GAAviB,EAA4iB,GAA5iB,EAAijB,GAAjjB,EAAsjB,GAAtjB,EAA2jB,GAA3jB,EAAgkB,GAAhkB,EAAqkB,GAArkB,EAA0kB,GAA1kB,EAA+kB,GAA/kB,EAAolB,GAAplB,EAAylB,GAAzlB,EAA8lB,GAA9lB,EAAmmB,GAAnmB,EAAwmB,GAAxmB,EAA6mB,GAA7mB,EAAknB,GAAlnB,EAAunB,GAAvnB,EAA4nB,GAA5nB,EAAioB,GAAjoB,EAAsoB,GAAtoB,EAA2oB,GAA3oB,EAAgpB,GAAhpB,EAAqpB,GAArpB,EAA0pB,GAA1pB,EAA+pB,GAA/pB,EAAoqB,GAApqB,EAAyqB,GAAzqB,EAA8qB,GAA9qB,EAAmrB,GAAnrB,EAAwrB,GAAxrB,EAA6rB,GAA7rB,EAAksB,GAAlsB,EAAusB,GAAvsB,EAA4sB,GAA5sB,EAAitB,GAAjtB,EAAstB,GAAttB,EAA2tB,GAA3tB,EAAguB,GAAhuB,EAAquB,GAAruB,EAA0uB,GAA1uB,EAA+uB,GAA/uB,EAAovB,GAApvB,EAAyvB,GAAzvB,EAA8vB,GAA9vB,EAAmwB,GAAnwB,EAAwwB,GAAxwB,EAA6wB,GAA7wB,EAAkxB,GAAlxB,EAAuxB,GAAvxB,EAA4xB,GAA5xB,EAAiyB,GAAjyB,EAAsyB,GAAtyB,EAA2yB,GAA3yB,EAAgzB,GAAhzB,EAAqzB,GAArzB,EAA0zB,GAA1zB,EAA+zB,GAA/zB,EAAo0B,GAAp0B,EAAy0B,GAAz0B,EAA80B,GAA90B,EAAm1B,GAAn1B,EAAw1B,GAAx1B,EAA61B,GAA71B,EAAk2B,GAAl2B,EAAu2B,GAAv2B,EAA42B,GAA52B,EAAi3B,GAAj3B,EAAs3B,GAAt3B,EAA23B,GAA33B,EAAg4B,GAAh4B,EAAq4B,GAAr4B,EAA04B,GAA14B,EAA+4B,GAA/4B,EAAo5B,GAAp5B,EAAy5B,GAAz5B,EAA85B,GAA95B,EAAm6B,GAAn6B,EAAw6B,GAAx6B,EAA66B,GAA76B,EAAk7B,GAAl7B,EAAu7B,GAAv7B,EAA47B,GAA57B,EAAi8B,GAAj8B,EAAs8B,GAAt8B,EAA28B,GAA38B,EAAg9B,GAAh9B,EAAq9B,GAAr9B,EAA09B,GAA19B,EAA+9B,GAA/9B,EAAo+B,GAAp+B,EAAy+B,GAAz+B,EAA8+B,GAA9+B,EAAm/B,GAAn/B,EAAw/B,GAAx/B,EAA6/B,GAA7/B,EAAkgC,GAAlgC,EAAugC,GAAvgC,EAA4gC,GAA5gC,EAAihC,GAAjhC,EAAshC,GAAthC,EAA2hC,GAA3hC,EAAgiC,GAAhiC,EAAqiC,GAAriC,EAA0iC,GAA1iC,EAA+iC,GAA/iC,EAAojC,GAApjC,EAAyjC,GAAzjC,EAA8jC,GAA9jC,EAAmkC,GAAnkC,EAAwkC,GAAxkC,EAA6kC,GAA7kC,EAAklC,GAAllC,EAAulC,GAAvlC,EAA4lC,GAA5lC,EAAimC,GAAjmC,EAAsmC,GAAtmC,EAA2mC,GAA3mC,EAAgnC,GAAhnC,EAAqnC,GAArnC,EAA0nC,GAA1nC,EAA+nC,GAA/nC,EAAooC,GAApoC,EAAyoC,GAAzoC,EAA8oC,GAA9oC,EAAmpC,GAAnpC,EAAwpC,GAAxpC,EAA6pC,GAA7pC,EAAkqC,GAAlqC,EAAuqC,GAAvqC,EAA4qC,GAA5qC,EAAirC,GAAjrC,EAAsrC,GAAtrC,EAA2rC,GAA3rC,EAAgsC,GAAhsC,EAAqsC,GAArsC,EAA0sC,GAA1sC,EAA+sC,GAA/sC,EAAotC,GAAptC,EAAytC,GAAztC,EAA8tC,GAA9tC,EAAmuC,GAAnuC,EAAwuC,GAAxuC,EAA6uC,GAA7uC,EAAkvC,GAAlvC,EAAuvC,GAAvvC,CAAf;AACA,IAAIC,QAAQ,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,EAAgE,EAAhE,EAAoE,EAApE,EAAwE,EAAxE,EAA4E,EAA5E,EAAgF,EAAhF,EAAoF,EAApF,EAAwF,EAAxF,EAA4F,EAA5F,EAAgG,EAAhG,EAAoG,EAApG,EAAwG,EAAxG,EAA4G,EAA5G,EAAgH,EAAhH,EAAoH,EAApH,EAAwH,EAAxH,EAA4H,EAA5H,EAAgI,EAAhI,EAAoI,EAApI,EAAwI,EAAxI,EAA4I,EAA5I,EAAgJ,EAAhJ,EAAoJ,EAApJ,EAAwJ,EAAxJ,EAA4J,EAA5J,EAAgK,EAAhK,EAAoK,EAApK,EAAwK,EAAxK,EAA4K,EAA5K,EAAgL,EAAhL,EAAoL,EAApL,EAAwL,EAAxL,EAA4L,EAA5L,EAAgM,EAAhM,EAAoM,EAApM,EAAwM,EAAxM,EAA4M,EAA5M,EAAgN,EAAhN,EAAoN,EAApN,EAAwN,EAAxN,EAA4N,EAA5N,EAAgO,EAAhO,EAAoO,EAApO,EAAwO,EAAxO,EAA4O,EAA5O,EAAgP,EAAhP,EAAoP,EAApP,EAAwP,EAAxP,EAA4P,EAA5P,EAAgQ,EAAhQ,EAAoQ,EAApQ,EAAwQ,EAAxQ,EAA4Q,EAA5Q,EAAgR,EAAhR,EAAoR,EAApR,EAAwR,EAAxR,EAA4R,EAA5R,EAAgS,EAAhS,EAAoS,EAApS,EAAwS,EAAxS,EAA4S,EAA5S,EAAgT,EAAhT,EAAoT,EAApT,EAAwT,EAAxT,EAA4T,EAA5T,EAAgU,EAAhU,EAAoU,EAApU,EAAwU,EAAxU,EAA4U,EAA5U,EAAgV,EAAhV,EAAoV,EAApV,EAAwV,EAAxV,EAA4V,EAA5V,EAAgW,EAAhW,EAAoW,EAApW,EAAwW,EAAxW,EAA4W,EAA5W,EAAgX,EAAhX,EAAoX,EAApX,EAAwX,EAAxX,EAA4X,EAA5X,EAAgY,EAAhY,EAAoY,EAApY,EAAwY,EAAxY,EAA4Y,EAA5Y,EAAgZ,EAAhZ,EAAoZ,EAApZ,EAAwZ,EAAxZ,EAA4Z,EAA5Z,EAAga,EAAha,EAAoa,EAApa,EAAwa,EAAxa,EAA4a,EAA5a,EAAgb,EAAhb,EAAob,EAApb,EAAwb,EAAxb,EAA4b,EAA5b,EAAgc,EAAhc,EAAoc,EAApc,EAAwc,EAAxc,EAA4c,EAA5c,EAAgd,EAAhd,EAAod,EAApd,EAAwd,EAAxd,EAA4d,EAA5d,EAAge,EAAhe,EAAoe,EAApe,EAAwe,EAAxe,EAA4e,EAA5e,EAAgf,EAAhf,EAAof,EAApf,EAAwf,EAAxf,EAA4f,EAA5f,EAAggB,EAAhgB,EAAogB,EAApgB,EAAwgB,EAAxgB,EAA4gB,EAA5gB,EAAghB,EAAhhB,EAAohB,EAAphB,EAAwhB,EAAxhB,EAA4hB,EAA5hB,EAAgiB,EAAhiB,EAAoiB,EAApiB,EAAwiB,EAAxiB,EAA4iB,EAA5iB,EAAgjB,EAAhjB,EAAojB,EAApjB,EAAwjB,EAAxjB,EAA4jB,EAA5jB,EAAgkB,EAAhkB,EAAokB,EAApkB,EAAwkB,EAAxkB,EAA4kB,EAA5kB,EAAglB,EAAhlB,EAAolB,EAAplB,EAAwlB,EAAxlB,EAA4lB,EAA5lB,EAAgmB,EAAhmB,EAAomB,EAApmB,EAAwmB,EAAxmB,EAA4mB,EAA5mB,EAAgnB,EAAhnB,EAAonB,EAApnB,EAAwnB,EAAxnB,EAA4nB,EAA5nB,EAAgoB,EAAhoB,EAAooB,EAApoB,EAAwoB,EAAxoB,EAA4oB,EAA5oB,EAAgpB,EAAhpB,EAAopB,EAAppB,EAAwpB,EAAxpB,EAA4pB,EAA5pB,EAAgqB,EAAhqB,EAAoqB,EAApqB,EAAwqB,EAAxqB,EAA4qB,EAA5qB,EAAgrB,EAAhrB,EAAorB,EAAprB,EAAwrB,EAAxrB,EAA4rB,EAA5rB,EAAgsB,EAAhsB,EAAosB,EAApsB,EAAwsB,EAAxsB,EAA4sB,EAA5sB,EAAgtB,EAAhtB,EAAotB,EAAptB,EAAwtB,EAAxtB,EAA4tB,EAA5tB,EAAguB,EAAhuB,EAAouB,EAApuB,EAAwuB,EAAxuB,EAA4uB,EAA5uB,EAAgvB,EAAhvB,EAAovB,EAApvB,EAAwvB,EAAxvB,EAA4vB,EAA5vB,EAAgwB,EAAhwB,EAAowB,EAApwB,EAAwwB,EAAxwB,EAA4wB,EAA5wB,EAAgxB,EAAhxB,EAAoxB,EAApxB,EAAwxB,EAAxxB,EAA4xB,EAA5xB,EAAgyB,EAAhyB,EAAoyB,EAApyB,EAAwyB,EAAxyB,EAA4yB,EAA5yB,EAAgzB,EAAhzB,EAAozB,EAApzB,EAAwzB,EAAxzB,EAA4zB,EAA5zB,EAAg0B,EAAh0B,EAAo0B,EAAp0B,EAAw0B,EAAx0B,EAA40B,EAA50B,EAAg1B,EAAh1B,EAAo1B,EAAp1B,EAAw1B,EAAx1B,EAA41B,EAA51B,EAAg2B,EAAh2B,EAAo2B,EAAp2B,EAAw2B,EAAx2B,EAA42B,EAA52B,EAAg3B,EAAh3B,EAAo3B,EAAp3B,EAAw3B,EAAx3B,EAA43B,EAA53B,EAAg4B,EAAh4B,EAAo4B,EAAp4B,EAAw4B,EAAx4B,EAA44B,EAA54B,EAAg5B,EAAh5B,EAAo5B,EAAp5B,EAAw5B,EAAx5B,EAA45B,EAA55B,EAAg6B,EAAh6B,EAAo6B,EAAp6B,EAAw6B,EAAx6B,EAA46B,EAA56B,EAAg7B,EAAh7B,EAAo7B,EAAp7B,EAAw7B,EAAx7B,EAA47B,EAA57B,EAAg8B,EAAh8B,EAAo8B,EAAp8B,EAAw8B,EAAx8B,EAA48B,EAA58B,EAAg9B,EAAh9B,EAAo9B,EAAp9B,EAAw9B,EAAx9B,EAA49B,EAA59B,EAAg+B,EAAh+B,EAAo+B,EAAp+B,EAAw+B,EAAx+B,EAA4+B,EAA5+B,EAAg/B,EAAh/B,EAAo/B,EAAp/B,EAAw/B,EAAx/B,CAAf;AACA;;AAEA;;;;;;;;AAQA,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,gBAA3C,EAA6D;AAC3D,MAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AAC3BA,IAAAA,GAAG,GAAGI,QAAQ,CAACC,cAAT,CAAwBL,GAAxB,CAAN;AACD;;AAED,MAAI,CAACA,GAAD,IAAQ,EAAE,kBAAkBA,GAApB,CAAZ,EAAsC;AACpC;AACD;;AAED,MAAIM,CAAC,GAAGN,GAAG,CAACO,YAAZ;AACA,MAAIC,CAAC,GAAGR,GAAG,CAACS,aAAZ;;AAEA,MAAI,OAAOR,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,IAAAA,MAAM,GAAGG,QAAQ,CAACC,cAAT,CAAwBJ,MAAxB,CAAT;AACD;;AAED,MAAI,CAACA,MAAD,IAAW,EAAE,gBAAgBA,MAAlB,CAAf,EAA0C;AACxC;AACD;;AAEDA,EAAAA,MAAM,CAACS,KAAP,CAAaC,KAAb,GAAqBL,CAAC,GAAG,IAAzB;AACAL,EAAAA,MAAM,CAACS,KAAP,CAAaE,MAAb,GAAsBJ,CAAC,GAAG,IAA1B;AACAP,EAAAA,MAAM,CAACU,KAAP,GAAeL,CAAf;AACAL,EAAAA,MAAM,CAACW,MAAP,GAAgBJ,CAAhB;AACA,MAAIK,OAAO,GAAGZ,MAAM,CAACa,UAAP,CAAkB,IAAlB,CAAd;AACAD,EAAAA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBT,CAAxB,EAA2BE,CAA3B;AACAK,EAAAA,OAAO,CAACG,SAAR,CAAkBhB,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA,MAAIiB,KAAK,CAACf,MAAD,CAAL,IAAiBA,MAAM,GAAG,CAA9B,EAAiC;AAC/B;AACD;;AAED,MAAIC,gBAAJ,EAAsB;AACpBe,IAAAA,iBAAiB,CAACjB,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAeK,CAAf,EAAkBE,CAAlB,EAAqBN,MAArB,CAAjB;AACD,GAFD,MAEO;AACLiB,IAAAA,gBAAgB,CAAClB,MAAD,EAAS,CAAT,EAAY,CAAZ,EAAeK,CAAf,EAAkBE,CAAlB,EAAqBN,MAArB,CAAhB;AACD;AACF;AACD;;;;;;;;;;;AAWA,SAASkB,sBAAT,CAAgCnB,MAAhC,EAAwCoB,IAAxC,EAA8CC,IAA9C,EAAoDX,KAApD,EAA2DC,MAA3D,EAAmE;AACjE,MAAI,OAAOX,MAAP,KAAkB,QAAtB,EAAgC;AAC9BA,IAAAA,MAAM,GAAGG,QAAQ,CAACC,cAAT,CAAwBJ,MAAxB,CAAT;AACD;;AAED,MAAI,CAACA,MAAD,IAAWd,OAAO,CAACc,MAAD,CAAP,KAAoB,QAA/B,IAA2C,EAAE,gBAAgBA,MAAlB,CAA/C,EAA0E;AACxE,UAAM,IAAIL,SAAJ,CAAc,+CAA+C,+BAA7D,CAAN;AACD;;AAED,MAAIiB,OAAO,GAAGZ,MAAM,CAACa,UAAP,CAAkB,IAAlB,CAAd;;AAEA,MAAI;AACF,WAAOD,OAAO,CAACU,YAAR,CAAqBF,IAArB,EAA2BC,IAA3B,EAAiCX,KAAjC,EAAwCC,MAAxC,CAAP;AACD,GAFD,CAEE,OAAOY,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CAAU,kCAAkCD,CAA5C,CAAN;AACD;AACF;AACD;;;;;;;;;;;AAWA,SAASN,iBAAT,CAA2BjB,MAA3B,EAAmCoB,IAAnC,EAAyCC,IAAzC,EAA+CX,KAA/C,EAAsDC,MAAtD,EAA8DV,MAA9D,EAAsE;AACpE,MAAIe,KAAK,CAACf,MAAD,CAAL,IAAiBA,MAAM,GAAG,CAA9B,EAAiC;AAC/B;AACD;;AAEDA,EAAAA,MAAM,IAAI,CAAV;AACA,MAAIwB,SAAS,GAAGN,sBAAsB,CAACnB,MAAD,EAASoB,IAAT,EAAeC,IAAf,EAAqBX,KAArB,EAA4BC,MAA5B,CAAtC;AACAc,EAAAA,SAAS,GAAGC,oBAAoB,CAACD,SAAD,EAAYL,IAAZ,EAAkBC,IAAlB,EAAwBX,KAAxB,EAA+BC,MAA/B,EAAuCV,MAAvC,CAAhC;AACAD,EAAAA,MAAM,CAACa,UAAP,CAAkB,IAAlB,EAAwBc,YAAxB,CAAqCF,SAArC,EAAgDL,IAAhD,EAAsDC,IAAtD;AACD;AACD;;;;;;;;;;;AAWA,SAASK,oBAAT,CAA8BD,SAA9B,EAAyCL,IAAzC,EAA+CC,IAA/C,EAAqDX,KAArD,EAA4DC,MAA5D,EAAoEV,MAApE,EAA4E;AAC1E,MAAI2B,MAAM,GAAGH,SAAS,CAACI,IAAvB;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoDC,OAApD,EAA6DC,OAA7D,EAAsEC,OAAtE,EAA+EC,OAA/E,EAAwFC,MAAxF,EAAgGC,MAAhG,EAAwGC,MAAxG,EAAgHC,MAAhH,EAAwHC,EAAxH,EAA4HC,EAA5H,EAAgIC,EAAhI,EAAoIC,EAApI,EAAwIC,GAAxI;AACA,MAAIC,GAAG,GAAG,IAAIrD,MAAJ,GAAa,CAAvB,CAH0E,CAGhD;;AAE1B,MAAIsD,WAAW,GAAG7C,KAAK,GAAG,CAA1B;AACA,MAAI8C,YAAY,GAAG7C,MAAM,GAAG,CAA5B;AACA,MAAI8C,WAAW,GAAGxD,MAAM,GAAG,CAA3B;AACA,MAAIyD,SAAS,GAAGD,WAAW,IAAIA,WAAW,GAAG,CAAlB,CAAX,GAAkC,CAAlD;AACA,MAAIE,UAAU,GAAG,IAAIC,SAAJ,EAAjB;AACA,MAAIC,KAAK,GAAGF,UAAZ;AACA,MAAIG,QAAJ;;AAEA,OAAK9B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsB,GAAhB,EAAqBtB,CAAC,EAAtB,EAA0B;AACxB6B,IAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,GAAa,IAAIH,SAAJ,EAArB;;AAEA,QAAI5B,CAAC,KAAKyB,WAAV,EAAuB;AACrBK,MAAAA,QAAQ,GAAGD,KAAX;AACD;AACF;;AAEDA,EAAAA,KAAK,CAACE,IAAN,GAAaJ,UAAb;AACA,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA7B,EAAAA,EAAE,GAAGD,EAAE,GAAG,CAAV;AACA,MAAI+B,MAAM,GAAGtE,QAAQ,CAACK,MAAD,CAArB;AACA,MAAIkE,MAAM,GAAGtE,QAAQ,CAACI,MAAD,CAArB;;AAEA,OAAK8B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,MAAhB,EAAwBoB,CAAC,EAAzB,EAA6B;AAC3Bc,IAAAA,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGX,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,CAAhE;AACAC,IAAAA,OAAO,GAAGgB,WAAW,IAAIR,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAf,CAArB;AACAO,IAAAA,OAAO,GAAGe,WAAW,IAAIP,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAQ,IAAAA,OAAO,GAAGc,WAAW,IAAIN,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAS,IAAAA,OAAO,GAAGa,WAAW,IAAIL,EAAE,GAAGxB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAE,IAAAA,IAAI,IAAIqB,SAAS,GAAGT,EAApB;AACAX,IAAAA,IAAI,IAAIoB,SAAS,GAAGR,EAApB;AACAX,IAAAA,IAAI,IAAImB,SAAS,GAAGP,EAApB;AACAX,IAAAA,IAAI,IAAIkB,SAAS,GAAGN,EAApB;AACAS,IAAAA,KAAK,GAAGF,UAAR;;AAEA,SAAK3B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChC6B,MAAAA,KAAK,CAACO,CAAN,GAAUnB,EAAV;AACAY,MAAAA,KAAK,CAACQ,CAAN,GAAUnB,EAAV;AACAW,MAAAA,KAAK,CAACS,CAAN,GAAUnB,EAAV;AACAU,MAAAA,KAAK,CAACU,CAAN,GAAUnB,EAAV;AACAS,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAED,SAAK/B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChCC,MAAAA,CAAC,GAAGE,EAAE,IAAI,CAACoB,WAAW,GAAGvB,CAAd,GAAkBuB,WAAlB,GAAgCvB,CAAjC,KAAuC,CAA3C,CAAN;AACAK,MAAAA,IAAI,IAAI,CAACwB,KAAK,CAACO,CAAN,GAAUnB,EAAE,GAAGrB,MAAM,CAACK,CAAD,CAAtB,KAA8BoB,GAAG,GAAGI,WAAW,GAAGzB,CAAlD,CAAR;AACAM,MAAAA,IAAI,IAAI,CAACuB,KAAK,CAACQ,CAAN,GAAUnB,EAAE,GAAGtB,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,IAAiCoB,GAAzC;AACAd,MAAAA,IAAI,IAAI,CAACsB,KAAK,CAACS,CAAN,GAAUnB,EAAE,GAAGvB,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,IAAiCoB,GAAzC;AACAb,MAAAA,IAAI,IAAI,CAACqB,KAAK,CAACU,CAAN,GAAUnB,EAAE,GAAGxB,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,IAAiCoB,GAAzC;AACAR,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAS,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAEDC,IAAAA,OAAO,GAAGL,UAAV;AACAM,IAAAA,QAAQ,GAAGH,QAAX;;AAEA,SAAKhC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,KAAhB,EAAuBoB,CAAC,EAAxB,EAA4B;AAC1BF,MAAAA,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiBiB,EAAE,GAAGZ,IAAI,GAAG0B,MAAP,IAAiBC,MAAvC;;AAEA,UAAIf,EAAE,KAAK,CAAX,EAAc;AACZA,QAAAA,EAAE,GAAG,MAAMA,EAAX;AACAxB,QAAAA,MAAM,CAACO,EAAD,CAAN,GAAa,CAACE,IAAI,GAAG6B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAAzC;AACAxB,QAAAA,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiB,CAACG,IAAI,GAAG4B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAA7C;AACAxB,QAAAA,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiB,CAACI,IAAI,GAAG2B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAA7C;AACD,OALD,MAKO;AACLxB,QAAAA,MAAM,CAACO,EAAD,CAAN,GAAaP,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiBP,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiB,CAA/C;AACD;;AAEDE,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,OAAO,IAAIuB,OAAO,CAACI,CAAnB;AACA1B,MAAAA,OAAO,IAAIsB,OAAO,CAACK,CAAnB;AACA1B,MAAAA,OAAO,IAAIqB,OAAO,CAACM,CAAnB;AACA1B,MAAAA,OAAO,IAAIoB,OAAO,CAACO,CAAnB;AACAtC,MAAAA,CAAC,GAAGG,EAAE,IAAI,CAACH,CAAC,GAAGH,CAAC,GAAG7B,MAAJ,GAAa,CAAlB,IAAuBsD,WAAvB,GAAqCtB,CAArC,GAAyCsB,WAA7C,CAAF,IAA+D,CAAnE;AACAV,MAAAA,MAAM,IAAImB,OAAO,CAACI,CAAR,GAAYxC,MAAM,CAACK,CAAD,CAA5B;AACAa,MAAAA,MAAM,IAAIkB,OAAO,CAACK,CAAR,GAAYzC,MAAM,CAACK,CAAC,GAAG,CAAL,CAA5B;AACAc,MAAAA,MAAM,IAAIiB,OAAO,CAACM,CAAR,GAAY1C,MAAM,CAACK,CAAC,GAAG,CAAL,CAA5B;AACAe,MAAAA,MAAM,IAAIgB,OAAO,CAACO,CAAR,GAAY3C,MAAM,CAACK,CAAC,GAAG,CAAL,CAA5B;AACAI,MAAAA,IAAI,IAAIQ,MAAR;AACAP,MAAAA,IAAI,IAAIQ,MAAR;AACAP,MAAAA,IAAI,IAAIQ,MAAR;AACAP,MAAAA,IAAI,IAAIQ,MAAR;AACAgB,MAAAA,OAAO,GAAGA,OAAO,CAACD,IAAlB;AACAtB,MAAAA,OAAO,IAAIQ,EAAE,GAAGgB,QAAQ,CAACG,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGe,QAAQ,CAACI,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGc,QAAQ,CAACK,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGa,QAAQ,CAACM,CAAzB;AACA1B,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAa,MAAAA,QAAQ,GAAGA,QAAQ,CAACF,IAApB;AACA5B,MAAAA,EAAE,IAAI,CAAN;AACD;;AAEDC,IAAAA,EAAE,IAAI1B,KAAN;AACD;;AAED,OAAKoB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,KAAhB,EAAuBoB,CAAC,EAAxB,EAA4B;AAC1BgB,IAAAA,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGH,MAAM,GAAGP,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAGH,IAAI,GAAG,CAAhE;AACAF,IAAAA,EAAE,GAAGL,CAAC,IAAI,CAAV;AACAW,IAAAA,OAAO,GAAGgB,WAAW,IAAIR,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAf,CAArB;AACAO,IAAAA,OAAO,GAAGe,WAAW,IAAIP,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAQ,IAAAA,OAAO,GAAGc,WAAW,IAAIN,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAS,IAAAA,OAAO,GAAGa,WAAW,IAAIL,EAAE,GAAGxB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAE,IAAAA,IAAI,IAAIqB,SAAS,GAAGT,EAApB;AACAX,IAAAA,IAAI,IAAIoB,SAAS,GAAGR,EAApB;AACAX,IAAAA,IAAI,IAAImB,SAAS,GAAGP,EAApB;AACAX,IAAAA,IAAI,IAAIkB,SAAS,GAAGN,EAApB;AACAS,IAAAA,KAAK,GAAGF,UAAR;;AAEA,SAAK3B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChC6B,MAAAA,KAAK,CAACO,CAAN,GAAUnB,EAAV;AACAY,MAAAA,KAAK,CAACQ,CAAN,GAAUnB,EAAV;AACAW,MAAAA,KAAK,CAACS,CAAN,GAAUnB,EAAV;AACAU,MAAAA,KAAK,CAACU,CAAN,GAAUnB,EAAV;AACAS,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAED7B,IAAAA,EAAE,GAAGxB,KAAL;;AAEA,SAAKsB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI/B,MAAjB,EAAyB+B,CAAC,EAA1B,EAA8B;AAC5BG,MAAAA,EAAE,GAAGD,EAAE,GAAGJ,CAAL,IAAU,CAAf;AACAO,MAAAA,IAAI,IAAI,CAACwB,KAAK,CAACO,CAAN,GAAUnB,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAtB,KAA+BkB,GAAG,GAAGI,WAAW,GAAGzB,CAAnD,CAAR;AACAM,MAAAA,IAAI,IAAI,CAACuB,KAAK,CAACQ,CAAN,GAAUnB,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAtB,IAAkCkB,GAA1C;AACAd,MAAAA,IAAI,IAAI,CAACsB,KAAK,CAACS,CAAN,GAAUnB,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAtB,IAAkCkB,GAA1C;AACAb,MAAAA,IAAI,IAAI,CAACqB,KAAK,CAACU,CAAN,GAAUnB,EAAE,GAAGxB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAtB,IAAkCkB,GAA1C;AACAR,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAS,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;;AAEA,UAAI/B,CAAC,GAAGwB,YAAR,EAAsB;AACpBtB,QAAAA,EAAE,IAAIxB,KAAN;AACD;AACF;;AAEDyB,IAAAA,EAAE,GAAGL,CAAL;AACAkC,IAAAA,OAAO,GAAGL,UAAV;AACAM,IAAAA,QAAQ,GAAGH,QAAX;;AAEA,SAAK/B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,MAAhB,EAAwBoB,CAAC,EAAzB,EAA6B;AAC3BE,MAAAA,CAAC,GAAGE,EAAE,IAAI,CAAV;AACAP,MAAAA,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgBmB,EAAE,GAAGZ,IAAI,GAAG0B,MAAP,IAAiBC,MAAtC;;AAEA,UAAIf,EAAE,GAAG,CAAT,EAAY;AACVA,QAAAA,EAAE,GAAG,MAAMA,EAAX;AACAxB,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAY,CAACI,IAAI,GAAG6B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAAxC;AACAxB,QAAAA,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgB,CAACK,IAAI,GAAG4B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAA5C;AACAxB,QAAAA,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgB,CAACM,IAAI,GAAG2B,MAAP,IAAiBC,MAAlB,IAA4Bf,EAA5C;AACD,OALD,MAKO;AACLxB,QAAAA,MAAM,CAACK,CAAD,CAAN,GAAYL,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgBL,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgB,CAA5C;AACD;;AAEDI,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,OAAO,IAAIuB,OAAO,CAACI,CAAnB;AACA1B,MAAAA,OAAO,IAAIsB,OAAO,CAACK,CAAnB;AACA1B,MAAAA,OAAO,IAAIqB,OAAO,CAACM,CAAnB;AACA1B,MAAAA,OAAO,IAAIoB,OAAO,CAACO,CAAnB;AACAtC,MAAAA,CAAC,GAAGH,CAAC,GAAG,CAAC,CAACG,CAAC,GAAGF,CAAC,GAAG0B,WAAT,IAAwBD,YAAxB,GAAuCvB,CAAvC,GAA2CuB,YAA5C,IAA4D9C,KAAhE,IAAyE,CAA7E;AACA2B,MAAAA,IAAI,IAAIQ,MAAM,IAAImB,OAAO,CAACI,CAAR,GAAYxC,MAAM,CAACK,CAAD,CAApC;AACAK,MAAAA,IAAI,IAAIQ,MAAM,IAAIkB,OAAO,CAACK,CAAR,GAAYzC,MAAM,CAACK,CAAC,GAAG,CAAL,CAApC;AACAM,MAAAA,IAAI,IAAIQ,MAAM,IAAIiB,OAAO,CAACM,CAAR,GAAY1C,MAAM,CAACK,CAAC,GAAG,CAAL,CAApC;AACAO,MAAAA,IAAI,IAAIQ,MAAM,IAAIgB,OAAO,CAACO,CAAR,GAAY3C,MAAM,CAACK,CAAC,GAAG,CAAL,CAApC;AACA+B,MAAAA,OAAO,GAAGA,OAAO,CAACD,IAAlB;AACAtB,MAAAA,OAAO,IAAIQ,EAAE,GAAGgB,QAAQ,CAACG,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGe,QAAQ,CAACI,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGc,QAAQ,CAACK,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGa,QAAQ,CAACM,CAAzB;AACA1B,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAa,MAAAA,QAAQ,GAAGA,QAAQ,CAACF,IAApB;AACA5B,MAAAA,EAAE,IAAIzB,KAAN;AACD;AACF;;AAED,SAAOe,SAAP;AACD;AACD;;;;;;;;;;;AAWA,SAASP,gBAAT,CAA0BlB,MAA1B,EAAkCoB,IAAlC,EAAwCC,IAAxC,EAA8CX,KAA9C,EAAqDC,MAArD,EAA6DV,MAA7D,EAAqE;AACnE,MAAIe,KAAK,CAACf,MAAD,CAAL,IAAiBA,MAAM,GAAG,CAA9B,EAAiC;AAC/B;AACD;;AAEDA,EAAAA,MAAM,IAAI,CAAV;AACA,MAAIwB,SAAS,GAAGN,sBAAsB,CAACnB,MAAD,EAASoB,IAAT,EAAeC,IAAf,EAAqBX,KAArB,EAA4BC,MAA5B,CAAtC;AACAc,EAAAA,SAAS,GAAG+C,mBAAmB,CAAC/C,SAAD,EAAYL,IAAZ,EAAkBC,IAAlB,EAAwBX,KAAxB,EAA+BC,MAA/B,EAAuCV,MAAvC,CAA/B;AACAD,EAAAA,MAAM,CAACa,UAAP,CAAkB,IAAlB,EAAwBc,YAAxB,CAAqCF,SAArC,EAAgDL,IAAhD,EAAsDC,IAAtD;AACD;AACD;;;;;;;;;;;AAWA,SAASmD,mBAAT,CAA6B/C,SAA7B,EAAwCL,IAAxC,EAA8CC,IAA9C,EAAoDX,KAApD,EAA2DC,MAA3D,EAAmEV,MAAnE,EAA2E;AACzE,MAAI2B,MAAM,GAAGH,SAAS,CAACI,IAAvB;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CE,OAA9C,EAAuDC,OAAvD,EAAgEC,OAAhE,EAAyEE,MAAzE,EAAiFC,MAAjF,EAAyFC,MAAzF,EAAiGE,EAAjG,EAAqGC,EAArG,EAAyGC,EAAzG,EAA6GE,GAA7G;AACA,MAAIC,GAAG,GAAG,IAAIrD,MAAJ,GAAa,CAAvB,CAHyE,CAG/C;;AAE1B,MAAIsD,WAAW,GAAG7C,KAAK,GAAG,CAA1B;AACA,MAAI8C,YAAY,GAAG7C,MAAM,GAAG,CAA5B;AACA,MAAI8C,WAAW,GAAGxD,MAAM,GAAG,CAA3B;AACA,MAAIyD,SAAS,GAAGD,WAAW,IAAIA,WAAW,GAAG,CAAlB,CAAX,GAAkC,CAAlD;AACA,MAAIE,UAAU,GAAG,IAAIC,SAAJ,EAAjB;AACA,MAAIC,KAAK,GAAGF,UAAZ;AACA,MAAIG,QAAJ;;AAEA,OAAK9B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGsB,GAAhB,EAAqBtB,CAAC,EAAtB,EAA0B;AACxB6B,IAAAA,KAAK,GAAGA,KAAK,CAACE,IAAN,GAAa,IAAIH,SAAJ,EAArB;;AAEA,QAAI5B,CAAC,KAAKyB,WAAV,EAAuB;AACrBK,MAAAA,QAAQ,GAAGD,KAAX;AACD;AACF;;AAEDA,EAAAA,KAAK,CAACE,IAAN,GAAaJ,UAAb;AACA,MAAIK,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAG,IAAf;AACA7B,EAAAA,EAAE,GAAGD,EAAE,GAAG,CAAV;AACA,MAAI+B,MAAM,GAAGtE,QAAQ,CAACK,MAAD,CAArB;AACA,MAAIkE,MAAM,GAAGtE,QAAQ,CAACI,MAAD,CAArB;;AAEA,OAAK8B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,MAAhB,EAAwBoB,CAAC,EAAzB,EAA6B;AAC3Bc,IAAAA,MAAM,GAAGC,MAAM,GAAGC,MAAM,GAAGV,IAAI,GAAGC,IAAI,GAAGC,IAAI,GAAG,CAAhD;AACAE,IAAAA,OAAO,GAAGgB,WAAW,IAAIR,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAf,CAArB;AACAO,IAAAA,OAAO,GAAGe,WAAW,IAAIP,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAQ,IAAAA,OAAO,GAAGc,WAAW,IAAIN,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAE,IAAAA,IAAI,IAAIqB,SAAS,GAAGT,EAApB;AACAX,IAAAA,IAAI,IAAIoB,SAAS,GAAGR,EAApB;AACAX,IAAAA,IAAI,IAAImB,SAAS,GAAGP,EAApB;AACAU,IAAAA,KAAK,GAAGF,UAAR;;AAEA,SAAK3B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChC6B,MAAAA,KAAK,CAACO,CAAN,GAAUnB,EAAV;AACAY,MAAAA,KAAK,CAACQ,CAAN,GAAUnB,EAAV;AACAW,MAAAA,KAAK,CAACS,CAAN,GAAUnB,EAAV;AACAU,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAED,SAAK/B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChCC,MAAAA,CAAC,GAAGE,EAAE,IAAI,CAACoB,WAAW,GAAGvB,CAAd,GAAkBuB,WAAlB,GAAgCvB,CAAjC,KAAuC,CAA3C,CAAN;AACAK,MAAAA,IAAI,IAAI,CAACwB,KAAK,CAACO,CAAN,GAAUnB,EAAE,GAAGrB,MAAM,CAACK,CAAD,CAAtB,KAA8BoB,GAAG,GAAGI,WAAW,GAAGzB,CAAlD,CAAR;AACAM,MAAAA,IAAI,IAAI,CAACuB,KAAK,CAACQ,CAAN,GAAUnB,EAAE,GAAGtB,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,IAAiCoB,GAAzC;AACAd,MAAAA,IAAI,IAAI,CAACsB,KAAK,CAACS,CAAN,GAAUnB,EAAE,GAAGvB,MAAM,CAACK,CAAC,GAAG,CAAL,CAAtB,IAAiCoB,GAAzC;AACAR,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAU,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAEDC,IAAAA,OAAO,GAAGL,UAAV;AACAM,IAAAA,QAAQ,GAAGH,QAAX;;AAEA,SAAKhC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,KAAhB,EAAuBoB,CAAC,EAAxB,EAA4B;AAC1BF,MAAAA,MAAM,CAACO,EAAD,CAAN,GAAaE,IAAI,GAAG6B,MAAP,IAAiBC,MAA9B;AACAvC,MAAAA,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiBG,IAAI,GAAG4B,MAAP,IAAiBC,MAAlC;AACAvC,MAAAA,MAAM,CAACO,EAAE,GAAG,CAAN,CAAN,GAAiBI,IAAI,GAAG2B,MAAP,IAAiBC,MAAlC;AACA9B,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAF,MAAAA,OAAO,IAAIuB,OAAO,CAACI,CAAnB;AACA1B,MAAAA,OAAO,IAAIsB,OAAO,CAACK,CAAnB;AACA1B,MAAAA,OAAO,IAAIqB,OAAO,CAACM,CAAnB;AACArC,MAAAA,CAAC,GAAGG,EAAE,IAAI,CAACH,CAAC,GAAGH,CAAC,GAAG7B,MAAJ,GAAa,CAAlB,IAAuBsD,WAAvB,GAAqCtB,CAArC,GAAyCsB,WAA7C,CAAF,IAA+D,CAAnE;AACAV,MAAAA,MAAM,IAAImB,OAAO,CAACI,CAAR,GAAYxC,MAAM,CAACK,CAAD,CAA5B;AACAa,MAAAA,MAAM,IAAIkB,OAAO,CAACK,CAAR,GAAYzC,MAAM,CAACK,CAAC,GAAG,CAAL,CAA5B;AACAc,MAAAA,MAAM,IAAIiB,OAAO,CAACM,CAAR,GAAY1C,MAAM,CAACK,CAAC,GAAG,CAAL,CAA5B;AACAI,MAAAA,IAAI,IAAIQ,MAAR;AACAP,MAAAA,IAAI,IAAIQ,MAAR;AACAP,MAAAA,IAAI,IAAIQ,MAAR;AACAiB,MAAAA,OAAO,GAAGA,OAAO,CAACD,IAAlB;AACAtB,MAAAA,OAAO,IAAIQ,EAAE,GAAGgB,QAAQ,CAACG,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGe,QAAQ,CAACI,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGc,QAAQ,CAACK,CAAzB;AACAzB,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAc,MAAAA,QAAQ,GAAGA,QAAQ,CAACF,IAApB;AACA5B,MAAAA,EAAE,IAAI,CAAN;AACD;;AAEDC,IAAAA,EAAE,IAAI1B,KAAN;AACD;;AAED,OAAKoB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,KAAhB,EAAuBoB,CAAC,EAAxB,EAA4B;AAC1BgB,IAAAA,MAAM,GAAGC,MAAM,GAAGF,MAAM,GAAGP,IAAI,GAAGC,IAAI,GAAGF,IAAI,GAAG,CAAhD;AACAF,IAAAA,EAAE,GAAGL,CAAC,IAAI,CAAV;AACAW,IAAAA,OAAO,GAAGgB,WAAW,IAAIR,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAf,CAArB;AACAO,IAAAA,OAAO,GAAGe,WAAW,IAAIP,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAQ,IAAAA,OAAO,GAAGc,WAAW,IAAIN,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAf,CAArB;AACAE,IAAAA,IAAI,IAAIqB,SAAS,GAAGT,EAApB;AACAX,IAAAA,IAAI,IAAIoB,SAAS,GAAGR,EAApB;AACAX,IAAAA,IAAI,IAAImB,SAAS,GAAGP,EAApB;AACAU,IAAAA,KAAK,GAAGF,UAAR;;AAEA,SAAK3B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGyB,WAAhB,EAA6BzB,CAAC,EAA9B,EAAkC;AAChC6B,MAAAA,KAAK,CAACO,CAAN,GAAUnB,EAAV;AACAY,MAAAA,KAAK,CAACQ,CAAN,GAAUnB,EAAV;AACAW,MAAAA,KAAK,CAACS,CAAN,GAAUnB,EAAV;AACAU,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;AACD;;AAED7B,IAAAA,EAAE,GAAGxB,KAAL;;AAEA,SAAKsB,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAI/B,MAAjB,EAAyB+B,CAAC,EAA1B,EAA8B;AAC5BG,MAAAA,EAAE,GAAGD,EAAE,GAAGJ,CAAL,IAAU,CAAf;AACAO,MAAAA,IAAI,IAAI,CAACwB,KAAK,CAACO,CAAN,GAAUnB,EAAE,GAAGrB,MAAM,CAACO,EAAD,CAAtB,KAA+BkB,GAAG,GAAGI,WAAW,GAAGzB,CAAnD,CAAR;AACAM,MAAAA,IAAI,IAAI,CAACuB,KAAK,CAACQ,CAAN,GAAUnB,EAAE,GAAGtB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAtB,IAAkCkB,GAA1C;AACAd,MAAAA,IAAI,IAAI,CAACsB,KAAK,CAACS,CAAN,GAAUnB,EAAE,GAAGvB,MAAM,CAACO,EAAE,GAAG,CAAN,CAAtB,IAAkCkB,GAA1C;AACAR,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAU,MAAAA,KAAK,GAAGA,KAAK,CAACE,IAAd;;AAEA,UAAI/B,CAAC,GAAGwB,YAAR,EAAsB;AACpBtB,QAAAA,EAAE,IAAIxB,KAAN;AACD;AACF;;AAEDyB,IAAAA,EAAE,GAAGL,CAAL;AACAkC,IAAAA,OAAO,GAAGL,UAAV;AACAM,IAAAA,QAAQ,GAAGH,QAAX;;AAEA,SAAK/B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGpB,MAAhB,EAAwBoB,CAAC,EAAzB,EAA6B;AAC3BE,MAAAA,CAAC,GAAGE,EAAE,IAAI,CAAV;AACAP,MAAAA,MAAM,CAACK,CAAD,CAAN,GAAYI,IAAI,GAAG6B,MAAP,IAAiBC,MAA7B;AACAvC,MAAAA,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgBK,IAAI,GAAG4B,MAAP,IAAiBC,MAAjC;AACAvC,MAAAA,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgBM,IAAI,GAAG2B,MAAP,IAAiBC,MAAjC;AACA9B,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAH,MAAAA,IAAI,IAAII,OAAR;AACAF,MAAAA,OAAO,IAAIuB,OAAO,CAACI,CAAnB;AACA1B,MAAAA,OAAO,IAAIsB,OAAO,CAACK,CAAnB;AACA1B,MAAAA,OAAO,IAAIqB,OAAO,CAACM,CAAnB;AACArC,MAAAA,CAAC,GAAGH,CAAC,GAAG,CAAC,CAACG,CAAC,GAAGF,CAAC,GAAG0B,WAAT,IAAwBD,YAAxB,GAAuCvB,CAAvC,GAA2CuB,YAA5C,IAA4D9C,KAAhE,IAAyE,CAA7E;AACA2B,MAAAA,IAAI,IAAIQ,MAAM,IAAImB,OAAO,CAACI,CAAR,GAAYxC,MAAM,CAACK,CAAD,CAApC;AACAK,MAAAA,IAAI,IAAIQ,MAAM,IAAIkB,OAAO,CAACK,CAAR,GAAYzC,MAAM,CAACK,CAAC,GAAG,CAAL,CAApC;AACAM,MAAAA,IAAI,IAAIQ,MAAM,IAAIiB,OAAO,CAACM,CAAR,GAAY1C,MAAM,CAACK,CAAC,GAAG,CAAL,CAApC;AACA+B,MAAAA,OAAO,GAAGA,OAAO,CAACD,IAAlB;AACAtB,MAAAA,OAAO,IAAIQ,EAAE,GAAGgB,QAAQ,CAACG,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGe,QAAQ,CAACI,CAAzB;AACA1B,MAAAA,OAAO,IAAIQ,EAAE,GAAGc,QAAQ,CAACK,CAAzB;AACAzB,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAH,MAAAA,MAAM,IAAII,EAAV;AACAc,MAAAA,QAAQ,GAAGA,QAAQ,CAACF,IAApB;AACA5B,MAAAA,EAAE,IAAIzB,KAAN;AACD;AACF;;AAED,SAAOe,SAAP;AACD;AACD;;;;;AAKA,IAAImC,SAAS;AACb;;;AAGA,SAASA,SAAT,GAAqB;AACnBpE,EAAAA,eAAe,CAAC,IAAD,EAAOoE,SAAP,CAAf;;AAEA,OAAKQ,CAAL,GAAS,CAAT;AACA,OAAKC,CAAL,GAAS,CAAT;AACA,OAAKC,CAAL,GAAS,CAAT;AACA,OAAKC,CAAL,GAAS,CAAT;AACA,OAAKR,IAAL,GAAY,IAAZ;AACD,CAZD;;AAcA,SAASH,SAAT,EAAoB1C,gBAAgB,IAAIuD,SAAxC,EAAmDxD,iBAAiB,IAAIyD,UAAxE,EAAoF5E,YAAY,IAAI6E,KAApG,EAA2GH,mBAAmB,IAAII,YAAlI,EAAgJlD,oBAAoB,IAAImD,aAAxK","sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/* eslint-disable no-bitwise, unicorn/prefer-query-selector */\n\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* eslint-disable max-len */\nvar mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];\nvar shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];\n/* eslint-enable max-len */\n\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @returns {undefined}\n */\n\nfunction processImage(img, canvas, radius, blurAlphaChannel) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  var w = img.naturalWidth;\n  var h = img.naturalHeight;\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0);\n\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\n\n\nfunction getImageDataFromCanvas(canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n\n  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');\n  }\n\n  var context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGBA(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGBA(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, aSum, rOutSum, gOutSum, bOutSum, aOutSum, rInSum, gInSum, bInSum, aInSum, pr, pg, pb, pa, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = aInSum = rSum = gSum = bSum = aSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[p + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = (rSum * mulSum >> shgSum) * pa;\n        pixels[yi + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[yi + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      aInSum += stackIn.a = pixels[p + 3];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = aInSum = rInSum = gSum = bSum = aSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      aSum += (stack.a = pa = pixels[yi + 3]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = aSum * mulSum >> shgSum;\n\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = (rSum * mulSum >> shgSum) * pa;\n        pixels[p + 1] = (gSum * mulSum >> shgSum) * pa;\n        pixels[p + 2] = (bSum * mulSum >> shgSum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      aSum += aInSum += stackIn.a = pixels[p + 3];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      aOutSum += pa = stackOut.a;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\n\n\nfunction processCanvasRGB(canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) {\n    return;\n  }\n\n  radius |= 0;\n  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\n\n\nfunction processImageDataRGB(imageData, topX, topY, width, height, radius) {\n  var pixels = imageData.data;\n  var x, y, i, p, yp, yi, yw, rSum, gSum, bSum, rOutSum, gOutSum, bOutSum, rInSum, gInSum, bInSum, pr, pg, pb, rbs;\n  var div = 2 * radius + 1; // const w4 = width << 2;\n\n  var widthMinus1 = width - 1;\n  var heightMinus1 = height - 1;\n  var radiusPlus1 = radius + 1;\n  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n  var stackStart = new BlurStack();\n  var stack = stackStart;\n  var stackEnd;\n\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n\n  stack.next = stackStart;\n  var stackIn = null;\n  var stackOut = null;\n  yw = yi = 0;\n  var mulSum = mulTable[radius];\n  var shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = rSum = gSum = bSum = 0;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[p + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[p + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (x = 0; x < width; x++) {\n      pixels[yi] = rSum * mulSum >> shgSum;\n      pixels[yi + 1] = gSum * mulSum >> shgSum;\n      pixels[yi + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;\n      rInSum += stackIn.r = pixels[p];\n      gInSum += stackIn.g = pixels[p + 1];\n      bInSum += stackIn.b = pixels[p + 2];\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += 4;\n    }\n\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = rInSum = gSum = bSum = rSum = 0;\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = yp + x << 2;\n      rSum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = pg = pixels[yi + 1]) * rbs;\n      bSum += (stack.b = pb = pixels[yi + 2]) * rbs;\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = rSum * mulSum >> shgSum;\n      pixels[p + 1] = gSum * mulSum >> shgSum;\n      pixels[p + 2] = bSum * mulSum >> shgSum;\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      p = x + ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;\n      rSum += rInSum += stackIn.r = pixels[p];\n      gSum += gInSum += stackIn.g = pixels[p + 1];\n      bSum += bInSum += stackIn.b = pixels[p + 2];\n      stackIn = stackIn.next;\n      rOutSum += pr = stackOut.r;\n      gOutSum += pg = stackOut.g;\n      bOutSum += pb = stackOut.b;\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      stackOut = stackOut.next;\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n/**\n *\n */\n\n\nvar BlurStack =\n/**\n * Set properties.\n */\nfunction BlurStack() {\n  _classCallCheck(this, BlurStack);\n\n  this.r = 0;\n  this.g = 0;\n  this.b = 0;\n  this.a = 0;\n  this.next = null;\n};\n\nexport { BlurStack, processCanvasRGB as canvasRGB, processCanvasRGBA as canvasRGBA, processImage as image, processImageDataRGB as imageDataRGB, processImageDataRGBA as imageDataRGBA };\n"]},"metadata":{},"sourceType":"module"}