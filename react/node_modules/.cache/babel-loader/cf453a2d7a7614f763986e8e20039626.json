{"ast":null,"code":"import _objectSpread from\"/Users/leehochan/Desktop/WORI42/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/leehochan/Desktop/WORI42/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect}from\"react\";import MapGL,{FlyToInterpolator}from\"react-map-gl\";import\"mapbox-gl/dist/mapbox-gl.css\";// import { config } from \"../../../config\";\nimport request from\"../Axios/request\";import InputBox from\"./InputBox\";import dotenv from\"dotenv\";dotenv.config();function Compose(){var _useState=useState({longitude:127.024612,latitude:37.5326,zoom:9,pitch:0,bearing:0,transitionInterpolator:new FlyToInterpolator({speed:1.2}),transitionDuration:1000,searchInfo:\"\",isMain:true}),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var mainSearchInput=useCallback(function(vp){setInfo(_objectSpread({},info,{searchInfo:vp.target.value}));},[info]);var goToViewPort=useCallback(function(){request(\"get\",\"https://maps.googleapis.com/maps/api/geocode/json\",{address:info.searchInfo,key:process.env.REACT_APP_Google_Token}).then(function(res){setInfo(_objectSpread({},info,{isMain:false,latitude:res.data.results[0].geometry.location.lat,longitude:res.data.results[0].geometry.location.lng,zoom:11,transitionInterpolator:new FlyToInterpolator(),transitionDuration:1000}));}).catch(function(res){console.log(res);});},[info]);useEffect(function(){if(info.isMain){var interval=setInterval(function(){setInfo(_objectSpread({},info,{latitude:info.latitude+0.01,longitude:info.longitude+0.01}));},100);return function(){return clearInterval(interval);};}return;},[info]);return/*#__PURE__*/React.createElement(MapGL,Object.assign({},info,{width:\"100vw\",height:\"100vh\"// mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n// mapboxApiAccessToken={config.MAPBOX_THEME}\n,onViewportChange:function onViewportChange(nextViewport){return setInfo(_objectSpread({},info,{},nextViewport));},mapStyle:\"mapbox://styles/mapbox/dark-v9\",mapboxApiAccessToken:process.env.REACT_APP_MAPBOX_TOKEN}),/*#__PURE__*/React.createElement(InputBox,{info:info,setInfo:setInfo,mainSearchInput:mainSearchInput,goToViewPort:goToViewPort,isMain:info.isMain}));}export default Compose;","map":{"version":3,"sources":["/Users/leehochan/Desktop/WORI42/src/Component/Example/Compose/Compose.js"],"names":["React","useState","useCallback","useEffect","MapGL","FlyToInterpolator","request","InputBox","dotenv","config","Compose","longitude","latitude","zoom","pitch","bearing","transitionInterpolator","speed","transitionDuration","searchInfo","isMain","info","setInfo","mainSearchInput","vp","target","value","goToViewPort","address","key","process","env","REACT_APP_Google_Token","then","res","data","results","geometry","location","lat","lng","catch","console","log","interval","setInterval","clearInterval","nextViewport","REACT_APP_MAPBOX_TOKEN"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import { config } from \"../../../config\";\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBox\";\nimport dotenv from \"dotenv\"\ndotenv.config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 9,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true,\n  });\n  \n  const mainSearchInput = useCallback(\n    (vp) => {\n      setInfo({\n        ...info,\n        searchInfo: vp.target.value,\n      });\n    },\n    [info]\n  );\n\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: process.env.REACT_APP_Google_Token\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          zoom: 11,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  }, [info]);\n\n  useEffect(() => {\n    if (info.isMain) {\n      const interval = setInterval(() => {\n        setInfo({\n          ...info,\n          latitude: info.latitude + 0.01,\n          longitude: info.longitude + 0.01,\n        });\n      }, 100);\n      return () => clearInterval(interval);\n    }\n    return;\n  }, [info]);\n\n  return (\n    <MapGL\n      {...info}\n      width=\"100vw\"\n      height=\"100vh\"\n      // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n      // mapboxApiAccessToken={config.MAPBOX_THEME}\n      onViewportChange={(nextViewport) => setInfo({ ...info, ...nextViewport })}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n    >\n      <InputBox\n        info={info}\n        setInfo={setInfo}\n        mainSearchInput={mainSearchInput}\n        goToViewPort={goToViewPort}\n        isMain={info.isMain}\n      />\n    </MapGL>\n  );\n}\n\nexport default Compose;\n"]},"metadata":{},"sourceType":"module"}