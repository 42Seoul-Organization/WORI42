{"ast":null,"code":"/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Column3D =\n/** @class */\nfunction (_super) {\n  __extends(Column3D, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Column3D() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Column3D\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Column3D.prototype.createAssets = function () {\n    this.column3D = this.createChild(Rectangle3D);\n    this.column3D.shouldClone = false;\n    this.column3D.strokeOpacity = 0; // some dirty hack so that if user access column, it won't get error\n\n    this.column = this.column3D;\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Column3D.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    if (this.column3D) {\n      this.column3D.width = this.pixelWidth;\n      this.column3D.height = this.pixelHeight;\n\n      if (this.column3D.invalid) {\n        this.column3D.validate();\n      }\n    }\n  };\n  /**\r\n   * Copies all parameters from another [[Column3D]].\r\n   *\r\n   * @param source Source Column3D\r\n   */\n\n\n  Column3D.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.column3D) {\n      this.column3D.copyFrom(source.column3D);\n    }\n  };\n  /**\r\n   * Sets actual `fill` property on the SVG element, including applicable color\r\n   * modifiers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param value  Fill\r\n   */\n\n\n  Column3D.prototype.setFill = function (value) {\n    _super.prototype.setFill.call(this, value);\n\n    this.column.fill = value;\n  };\n\n  return Column3D;\n}(Column);\n\nexport { Column3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Column3D\"] = Column3D;","map":{"version":3,"sources":["../../../../../src/.internal/charts/elements/Column3D.ts"],"names":[],"mappings":"AAAA;;;;;AAKA;;;;;;;AAMA,SAAS,MAAT,QAA0E,UAA1E;AACA,SAAS,WAAT,QAA4B,oCAA5B;AACA,SAAS,QAAT,QAAyB,qBAAzB;AAiCA;;;;;;;AAOA;;;;;;;;;AAQA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;AAuB7B;;;;;AAGA,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,SAAL,GAAiB,UAAjB;;AACA;AAED;;;;;AAGU,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAV,YAAA;AACC,SAAK,QAAL,GAAgB,KAAK,WAAL,CAAiB,WAAjB,CAAhB;AACA,SAAK,QAAL,CAAc,WAAd,GAA4B,KAA5B;AACA,SAAK,QAAL,CAAc,aAAd,GAA8B,CAA9B,CAHD,CAKC;;AACA,SAAK,MAAL,GAAmB,KAAK,QAAxB;AACA,GAPS;AASV;;;;;AAGO,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd;;AACA,QAAI,KAAK,QAAT,EAAmB;AAClB,WAAK,QAAL,CAAc,KAAd,GAAsB,KAAK,UAA3B;AACA,WAAK,QAAL,CAAc,MAAd,GAAuB,KAAK,WAA5B;;AACA,UAAG,KAAK,QAAL,CAAc,OAAjB,EAAyB;AACxB,aAAK,QAAL,CAAc,QAAd;AACA;AACD;AACD,GATM;AAWP;;;;;;;AAKO,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,MAAhB,EAA4B;AAC3B,IAAA,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,MAAf;;AACA,QAAI,KAAK,QAAT,EAAmB;AAClB,WAAK,QAAL,CAAc,QAAd,CAAuB,MAAM,CAAC,QAA9B;AACA;AACD,GALM;AAOP;;;;;;;;;AAOU,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAV,UAAkB,KAAlB,EAA0F;AACzF,IAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,KAAd;;AACA,SAAK,MAAL,CAAY,IAAZ,GAAmB,KAAnB;AACA,GAHS;;AAIX,SAAA,QAAA;AAAC,CAhFD,CAA8B,MAA9B,CAAA;;;AAkFA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,UAA3B,IAAyC,QAAzC","sourcesContent":["/**\r\n * Module that defines everything related to building 3D Columns.\r\n * It is a container which has column3D element which is a Rectangle3D.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column, IColumnProperties, IColumnAdapters, IColumnEvents } from \"./Column\";\r\nimport { Rectangle3D } from \"../../core/elements/3d/Rectangle3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Column3D]].\r\n */\r\nexport interface IColumn3DProperties extends IColumnProperties { }\r\n\r\n/**\r\n * Defines events for [[Column3D]].\r\n */\r\nexport interface IColumn3DEvents extends IColumnEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Column3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IColumn3DAdapters extends IColumnAdapters, IColumn3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates Column3Ds.\r\n *\r\n * @see {@link IColumn3DEvents} for a list of available events\r\n * @see {@link IColumn3DAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class Column3D extends Column {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IColumn3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IColumn3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IColumn3DEvents;\r\n\r\n\r\n\t/**\r\n\t * column3D element\r\n\t */\r\n\tpublic column3D: Rectangle3D;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Column3D\";\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createAssets() {\r\n\t\tthis.column3D = this.createChild(Rectangle3D);\r\n\t\tthis.column3D.shouldClone = false;\r\n\t\tthis.column3D.strokeOpacity = 0;\r\n\r\n\t\t// some dirty hack so that if user access column, it won't get error\r\n\t\tthis.column = <any>this.column3D;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.width = this.pixelWidth;\r\n\t\t\tthis.column3D.height = this.pixelHeight;\r\n\t\t\tif(this.column3D.invalid){\r\n\t\t\t\tthis.column3D.validate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[Column3D]].\r\n\t *\r\n\t * @param source Source Column3D\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source)\r\n\t\tif (this.column3D) {\r\n\t\t\tthis.column3D.copyFrom(source.column3D);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\t\tthis.column.fill = value;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column3D\"] = Column3D;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}