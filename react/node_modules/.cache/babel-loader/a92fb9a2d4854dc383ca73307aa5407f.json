{"ast":null,"code":"/**\r\n * Rectangular pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Rectangular pattern\r\n */\n\nvar RectPattern =\n/** @class */\nfunction (_super) {\n  __extends(RectPattern, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function RectPattern() {\n    var _this = _super.call(this) || this;\n\n    _this.rectHeight = 1;\n    _this.rectWidth = 1;\n    _this._rect = _this.paper.add(\"rect\");\n\n    _this.addElement(_this._rect);\n\n    return _this;\n  }\n  /**\r\n   * Draws the rectangular element.\r\n   */\n\n\n  RectPattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    this.properties[\"rotationX\"] = this.width / 2;\n    this.properties[\"rotationY\"] = this.height / 2;\n\n    if (this._rect) {\n      this._rect.attr({\n        \"width\": this.rectWidth,\n        \"height\": this.rectHeight,\n        \"x\": (this.width - this.rectWidth) / 2,\n        \"y\": (this.height - this.rectHeight) / 2\n      });\n    }\n  };\n\n  Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function get() {\n      return this.properties[\"rectWidth\"];\n    },\n\n    /**\r\n     * Rectangle width in pixels.\r\n     *\r\n     * @param value Width (px)\r\n     */\n    set: function set(value) {\n      this.properties[\"rectWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function get() {\n      return this.properties[\"rectHeight\"];\n    },\n\n    /**\r\n     * Rectangle height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function set(value) {\n      this.properties[\"rectHeight\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RectPattern;\n}(Pattern);\n\nexport { RectPattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;","map":{"version":3,"sources":["../../../../../../src/.internal/core/rendering/fills/RectPattern.ts"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAAS,OAAT,QAA2C,WAA3C;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AAiBC;AAGD;;;;;;;AAOA;;;;AAGA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;AAYhC;;;;;AAGA,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADR;;AAEC,IAAA,KAAI,CAAC,UAAL,GAAkB,CAAlB;AACA,IAAA,KAAI,CAAC,SAAL,GAAiB,CAAjB;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAI,CAAC,KAAL,CAAW,GAAX,CAAe,MAAf,CAAb;;AACA,IAAA,KAAI,CAAC,UAAL,CAAgB,KAAI,CAAC,KAArB;;;AACA;AAED;;;;;AAGU,EAAA,WAAA,CAAA,SAAA,CAAA,IAAA,GAAV,YAAA;AACC,IAAA,MAAA,CAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV;;AACA,SAAK,UAAL,CAAgB,WAAhB,IAA+B,KAAK,KAAL,GAAa,CAA5C;AACA,SAAK,UAAL,CAAgB,WAAhB,IAA+B,KAAK,MAAL,GAAc,CAA7C;;AACA,QAAI,KAAK,KAAT,EAAgB;AACf,WAAK,KAAL,CAAW,IAAX,CAAgB;AAAE,iBAAS,KAAK,SAAhB;AAA2B,kBAAU,KAAK,UAA1C;AAAsD,aAAI,CAAC,KAAK,KAAL,GAAa,KAAK,SAAnB,IAAgC,CAA1F;AAA6F,aAAI,CAAC,KAAK,MAAL,GAAc,KAAK,UAApB,IAAkC;AAAnI,OAAhB;AACA;AACD,GAPS;;AAcV,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,WAAX,EAAoB;AAKpB;;;SAGA,eAAA;AACC,aAAO,KAAK,UAAL,CAAgB,WAAhB,CAAP;AACA,KAVmB;;AALpB;;;;;SAKA,aAAqB,KAArB,EAAkC;AACjC,WAAK,UAAL,CAAgB,WAAhB,IAA+B,KAA/B;AACA,WAAK,IAAL;AACA,KAHmB;oBAAA;;AAAA,GAApB;AAiBA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,YAAX,EAAqB;AAKrB;;;SAGA,eAAA;AACC,aAAO,KAAK,UAAL,CAAgB,YAAhB,CAAP;AACA,KAVoB;;AALrB;;;;;SAKA,aAAsB,KAAtB,EAAmC;AAClC,WAAK,UAAL,CAAgB,YAAhB,IAAgC,KAAhC;AACA,WAAK,IAAL;AACA,KAHoB;oBAAA;;AAAA,GAArB;AAYD,SAAA,WAAA;AAAC,CArED,CAAiC,OAAjC,CAAA;;;AAuEA;;;;;;;AAMA,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,WAA5C","sourcesContent":["/**\r\n * Rectangular pattern module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern, PatternProperties } from \"./Pattern\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for rectangular pattern\r\n */\r\nexport interface RectPatternProperties extends PatternProperties {\r\n\trectWidth: number;\r\n\trectHeight: number;\r\n};\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Rectangular pattern\r\n */\r\nexport class RectPattern extends Pattern {\r\n\r\n\t/**\r\n\t * Reference to `<rect>` element used in pattern.\r\n\t */\r\n\tprotected _rect: $type.Optional<AMElement>;\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: RectPatternProperties;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.rectHeight = 1;\r\n\t\tthis.rectWidth = 1;\r\n\t\tthis._rect = this.paper.add(\"rect\");\r\n\t\tthis.addElement(this._rect);\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the rectangular element.\r\n\t */\r\n\tprotected draw(): void {\r\n\t\tsuper.draw();\r\n\t\tthis.properties[\"rotationX\"] = this.width / 2;\r\n\t\tthis.properties[\"rotationY\"] = this.height / 2;\t\t\r\n\t\tif (this._rect) {\r\n\t\t\tthis._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\":(this.width - this.rectWidth) / 2, \"y\":(this.height - this.rectHeight) / 2 });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle width in pixels.\r\n\t *\r\n\t * @param value Width (px)\r\n\t */\r\n\tpublic set rectWidth(value: number) {\r\n\t\tthis.properties[\"rectWidth\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get rectWidth(): number {\r\n\t\treturn this.properties[\"rectWidth\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Rectangle height in pixels.\r\n\t *\r\n\t * @param value Height (px)\r\n\t */\r\n\tpublic set rectHeight(value: number) {\r\n\t\tthis.properties[\"rectHeight\"] = value;\r\n\t\tthis.draw();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Height (px)\r\n\t */\r\n\tpublic get rectHeight(): number {\r\n\t\treturn this.properties[\"rectHeight\"];\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}