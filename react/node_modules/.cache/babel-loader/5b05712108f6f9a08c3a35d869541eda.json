{"ast":null,"code":"/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\n\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport * as $math from \"../utils/Math\";\nimport { registry } from \"../Registry\";\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\n\n/**\r\n * ============================================================================\r\n * LINEAR FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Easing function: \"linear\".\r\n */\n\nexport function linear(t) {\n  return +t;\n}\nregistry.registeredClasses[\"ease.linear\"] = linear;\n/**\r\n * Easing function: \"quadIn\".\r\n */\n\nexport function quadIn(t) {\n  return t * t;\n}\nregistry.registeredClasses[\"ease.quadIn\"] = quadIn;\n/**\r\n * Easing function: \"quadOut\".\r\n */\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\nregistry.registeredClasses[\"ease.quadOut\"] = quadOut;\n/**\r\n * Easing function: \"quadInOut\".\r\n */\n\nexport function quadInOut(t) {\n  t *= 2;\n  return (t <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\nregistry.registeredClasses[\"ease.quadInOut\"] = quadInOut;\n/**\r\n * Easing function: \"polyIn\".\r\n */\n\nexport function polyIn(t, e) {\n  return Math.pow(t, e);\n}\nregistry.registeredClasses[\"ease.polyIn\"] = polyIn;\n/**\r\n * Easing function: \"polyOut\".\r\n */\n\nexport function polyOut(t, e) {\n  return 1 - Math.pow(1 - t, e);\n}\nregistry.registeredClasses[\"ease.polyOut\"] = polyOut;\n/**\r\n * Easing function: \"polyInOut\".\r\n */\n\nexport function polyInOut(t, e) {\n  t *= 2;\n  return (t <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n}\nregistry.registeredClasses[\"ease.polyInOut\"] = polyInOut;\n/**\r\n * Easing function: \"polyIn3\".\r\n */\n\nexport function polyIn3(t) {\n  return polyIn(t, 3);\n}\nregistry.registeredClasses[\"ease.polyIn3\"] = polyIn3;\n/**\r\n * Easing function: \"polyOut3\".\r\n */\n\nexport function polyOut3(t) {\n  return polyOut(t, 3);\n}\nregistry.registeredClasses[\"ease.polyOut3\"] = polyOut3;\n/**\r\n * Easing function: \"polyInOut3\".\r\n */\n\nexport function polyInOut3(t) {\n  return polyInOut(t, 3);\n}\nregistry.registeredClasses[\"ease.polyInOut3\"] = polyInOut3;\n/**\r\n * ============================================================================\r\n * EXPONENTIAL FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Easing function: \"expIn\".\r\n */\n\nexport function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\nregistry.registeredClasses[\"ease.expIn\"] = expIn;\n/**\r\n * Easing function: \"expOut\".\r\n */\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\nregistry.registeredClasses[\"ease.expOut\"] = expOut;\n/**\r\n * Easing function: \"expInOut\".\r\n */\n\nexport function expInOut(t) {\n  t *= 2;\n  return (t <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\nregistry.registeredClasses[\"ease.expInOut\"] = expInOut;\n/**\r\n * ============================================================================\r\n * SINE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Easing function: \"sinIn\".\r\n */\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * $math.HALFPI);\n}\nregistry.registeredClasses[\"ease.sinIn\"] = sinIn;\n/**\r\n * Easing function: \"sinOut\".\r\n */\n\nexport function sinOut(t) {\n  return Math.sin(t * $math.HALFPI);\n}\nregistry.registeredClasses[\"ease.sinOut\"] = sinOut;\n/**\r\n * Easing function: \"sinInOut\".\r\n */\n\nexport function sinInOut(t) {\n  return (1 - Math.cos($math.PI * t)) / 2;\n}\nregistry.registeredClasses[\"ease.sinInOut\"] = sinInOut;\n/**\r\n * ============================================================================\r\n * CUBIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Easing function: \"cubicIn\".\r\n */\n\nexport function cubicIn(t) {\n  return t * t * t;\n}\nregistry.registeredClasses[\"ease.cubicIn\"] = cubicIn;\n/**\r\n * Easing function: \"cubicOut\".\r\n */\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\nregistry.registeredClasses[\"ease.cubicOut\"] = cubicOut;\n/**\r\n * Easing function: \"cubicInOut\".\r\n */\n\nexport function cubicInOut(t) {\n  t *= 2;\n  return (t <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\nregistry.registeredClasses[\"ease.cubicInOut\"] = cubicInOut;\n/**\r\n * ============================================================================\r\n * CIRCLE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Easing function: \"circleIn\".\r\n */\n\nexport function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\nregistry.registeredClasses[\"ease.circleIn\"] = circleIn;\n/**\r\n * Easing function: \"circleOut\".\r\n */\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\nregistry.registeredClasses[\"ease.circleOut\"] = circleOut;\n/**\r\n * Easing function: \"circleInOut\".\r\n */\n\nexport function circleInOut(t) {\n  t *= 2;\n  return (t <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\nregistry.registeredClasses[\"ease.circleInOut\"] = circleInOut;\n/**\r\n * ============================================================================\r\n * BOUNCE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n/**\r\n * Easing function: \"bounceIn\".\r\n */\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\nregistry.registeredClasses[\"ease.bounceIn\"] = bounceIn;\n/**\r\n * Easing function: \"bounceOut\".\r\n */\n\nexport function bounceOut(t) {\n  t = +t;\n  return t < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\nregistry.registeredClasses[\"ease.bounceOut\"] = bounceOut;\n/**\r\n * Easing function: \"bounceInOut\".\r\n */\n\nexport function bounceInOut(t) {\n  t *= 2;\n  return (t <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\nregistry.registeredClasses[\"ease.bounceInOut\"] = bounceInOut;\n/**\r\n * ============================================================================\r\n * ELASTIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3 / tau;\nvar s = Math.asin(1 / amplitude) * period;\n/**\r\n * Easing function: \"elasticIn\".\r\n *\r\n * @function elasticIn\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\n\nexport function elasticIn(t) {\n  return amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);\n}\nregistry.registeredClasses[\"ease.elasticIn\"] = elasticIn;\n/**\r\n * Easing function: \"elasticOut\".\r\n *\r\n * @function elasticOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\n\nexport function elasticOut(t) {\n  return 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);\n}\nregistry.registeredClasses[\"ease.elasticOut\"] = elasticOut;\n/**\r\n * Easing function: \"elasticInOut\".\r\n *\r\n * @function elasticInOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\n\nexport function elasticInOut(t) {\n  t = t * 2 - 1;\n  return (t < 0 ? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period) : 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;\n}\nregistry.registeredClasses[\"ease.elasticInOut\"] = elasticInOut;","map":{"version":3,"sources":["../../../../../src/.internal/core/utils/Ease.ts"],"names":[],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA,OAAO,KAAK,KAAZ,MAAuB,eAAvB;AACA,SAAS,QAAT,QAAyB,aAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;;;;;;AAOA;;;;AAGA,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA0B;AAC/B,SAAO,CAAC,CAAR;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,MAA5C;AAEA;;;;AAGA,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA0B;AAC/B,SAAO,CAAC,GAAG,CAAX;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,MAA5C;AAEA;;;;AAGA,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA2B;AAChC,SAAO,CAAC,IAAI,IAAI,CAAR,CAAR;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,cAA3B,IAA6C,OAA7C;AAEA;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA6B;AAClC,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,CAAC,GAAG,CAAb,GAAiB,EAAE,CAAF,IAAO,IAAI,CAAX,IAAgB,CAAlC,IAAuC,CAA9C;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,SAA/C;AAEA;;;;AAGA,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA4B,CAA5B,EAAqC;AAC1C,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAP;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,MAA5C;AAEA;;;;AAGA,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA6B,CAA7B,EAAsC;AAC3C,SAAO,IAAI,IAAI,CAAC,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,CAAX;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,cAA3B,IAA6C,OAA7C;AAEA;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA+B,CAA/B,EAAwC;AAC7C,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAT,GAA0B,IAAI,IAAI,CAAC,GAAL,CAAS,IAAI,CAAb,EAAgB,CAAhB,CAA/B,IAAqD,CAA5D;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,SAA/C;AAEA;;;;AAGA,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA2B;AAChC,SAAO,MAAM,CAAC,CAAD,EAAI,CAAJ,CAAb;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,cAA3B,IAA6C,OAA7C;AAEA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,SAAO,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAd;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAEA;;;;AAGA,OAAM,SAAU,UAAV,CAAqB,CAArB,EAA8B;AACnC,SAAO,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAhB;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,iBAA3B,IAAgD,UAAhD;AAGA;;;;;;;AAOA;;;;AAGA,OAAM,SAAU,KAAV,CAAgB,CAAhB,EAAyB;AAC9B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,CAAL,GAAS,EAArB,CAAP;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,YAA3B,IAA2C,KAA3C;AAEA;;;;AAGA,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA0B;AAC/B,SAAO,IAAI,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAM,CAAlB,CAAX;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,MAA5C;AAEA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,CAAL,GAAS,EAArB,CAAT,GAAoC,IAAI,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,KAAK,CAAtB,CAAzC,IAAqE,CAA5E;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAGA;;;;;;;AAOA;;;;AAGA,OAAM,SAAU,KAAV,CAAgB,CAAhB,EAAyB;AAC9B,SAAO,IAAI,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,KAAK,CAAC,MAAnB,CAAX;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,YAA3B,IAA2C,KAA3C;AAEA;;;;AAGA,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA0B;AAC/B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAC,GAAG,KAAK,CAAC,MAAnB,CAAP;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,aAA3B,IAA4C,MAA5C;AAEA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,SAAO,CAAC,IAAI,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,EAAN,GAAW,CAApB,CAAL,IAA+B,CAAtC;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAGA;;;;;;;AAOA;;;;AAGA,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA2B;AAChC,SAAO,CAAC,GAAG,CAAJ,GAAQ,CAAf;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,cAA3B,IAA6C,OAA7C;AAEA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,SAAO,EAAE,CAAF,GAAM,CAAN,GAAU,CAAV,GAAc,CAArB;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAEA;;;;AAGA,OAAM,SAAU,UAAV,CAAqB,CAArB,EAA8B;AACnC,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,CAAC,GAAG,CAAJ,GAAQ,CAAjB,GAAqB,CAAC,CAAC,IAAI,CAAN,IAAW,CAAX,GAAe,CAAf,GAAmB,CAAzC,IAA8C,CAArD;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,iBAA3B,IAAgD,UAAhD;AAGA;;;;;;;AAOA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,SAAO,IAAI,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAG,CAAlB,CAAX;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAEA;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA6B;AAClC,SAAO,IAAI,CAAC,IAAL,CAAU,IAAI,EAAE,CAAF,GAAM,CAApB,CAAP;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,SAA/C;AAEA;;;;AAGA,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAA+B;AACpC,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,IAAI,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAG,CAAlB,CAAb,GAAoC,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,CAAC,IAAI,CAAN,IAAW,CAAzB,IAA8B,CAAnE,IAAwE,CAA/E;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,kBAA3B,IAAiD,WAAjD;AAGA;;;;;;;AAMA,IAAI,EAAE,GAAG,IAAI,EAAb;AAAA,IACC,EAAE,GAAG,IAAI,EADV;AAAA,IAEC,EAAE,GAAG,IAAI,EAFV;AAAA,IAGC,EAAE,GAAG,IAAI,CAHV;AAAA,IAIC,EAAE,GAAG,IAAI,EAJV;AAAA,IAKC,EAAE,GAAG,KAAK,EALX;AAAA,IAMC,EAAE,GAAG,KAAK,EANX;AAAA,IAOC,EAAE,GAAG,KAAK,EAPX;AAAA,IAQC,EAAE,GAAG,KAAK,EARX;AAAA,IASC,EAAE,GAAG,IAAI,EAAJ,GAAS,EATf;AAWA;;;;AAGA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA4B;AACjC,SAAO,IAAI,SAAS,CAAC,IAAI,CAAL,CAApB;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,eAA3B,IAA8C,QAA9C;AAEA;;;;AAGA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA6B;AAClC,EAAA,CAAC,GAAG,CAAC,CAAL;AACA,SAAO,CAAC,GAAG,EAAJ,GAAS,EAAE,GAAG,CAAL,GAAS,CAAlB,GAAsB,CAAC,GAAG,EAAJ,GAAS,EAAE,IAAI,CAAC,IAAI,EAAT,CAAF,GAAiB,CAAjB,GAAqB,EAA9B,GAAmC,CAAC,GAAG,EAAJ,GAAS,EAAE,IAAI,CAAC,IAAI,EAAT,CAAF,GAAiB,CAAjB,GAAqB,EAA9B,GAAmC,EAAE,IAAI,CAAC,IAAI,EAAT,CAAF,GAAiB,CAAjB,GAAqB,EAAxH;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,SAA/C;AAEA;;;;AAGA,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAA+B;AACpC,EAAA,CAAC,IAAI,CAAL;AACA,SAAO,CAAC,CAAC,IAAI,CAAL,GAAS,IAAI,SAAS,CAAC,IAAI,CAAL,CAAtB,GAAgC,SAAS,CAAC,CAAC,GAAG,CAAL,CAAT,GAAmB,CAApD,IAAyD,CAAhE;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,kBAA3B,IAAiD,WAAjD;AAEA;;;;;;;AAMA,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,EAAnB;AACA,IAAI,SAAS,GAAG,CAAhB;AACA,IAAI,MAAM,GAAG,MAAM,GAAnB;AACA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,SAAd,IAA2B,MAAnC;AAEA;;;;;;;;AAOA,OAAM,SAAU,SAAV,CAAoB,CAApB,EAA6B;AAClC,SAAO,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,EAAE,CAAnB,CAAZ,GAAoC,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,GAAG,CAAL,IAAU,MAAnB,CAA3C;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,gBAA3B,IAA+C,SAA/C;AAEA;;;;;;;;AAOA,OAAM,SAAU,UAAV,CAAqB,CAArB,EAA8B;AACnC,SAAO,IAAI,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,IAAO,CAAC,GAAG,CAAC,CAAZ,CAAZ,CAAZ,GAA0C,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,GAAG,CAAL,IAAU,MAAnB,CAArD;AACA;AACD,QAAQ,CAAC,iBAAT,CAA2B,iBAA3B,IAAgD,UAAhD;AAEA;;;;;;;;AAOA,OAAM,SAAU,YAAV,CAAuB,CAAvB,EAAgC;AACrC,EAAA,CAAC,GAAG,CAAC,GAAG,CAAJ,GAAQ,CAAZ;AACA,SAAO,CAAC,CAAC,GAAG,CAAJ,GACL,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,KAAK,CAAjB,CAAZ,GAAkC,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,GAAG,CAAL,IAAU,MAAnB,CAD7B,GAEL,IAAI,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,EAAD,GAAM,CAAlB,CAAZ,GAAmC,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,GAAG,CAAL,IAAU,MAAnB,CAFnC,IAEiE,CAFxE;AAGA;AACD,QAAQ,CAAC,iBAAT,CAA2B,mBAA3B,IAAkD,YAAlD","sourcesContent":["/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"../utils/Math\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * LINEAR FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"linear\".\r\n */\r\nexport function linear(t: number): number {\r\n\treturn +t;\r\n}\r\nregistry.registeredClasses[\"ease.linear\"] = linear;\r\n\r\n/**\r\n * Easing function: \"quadIn\".\r\n */\r\nexport function quadIn(t: number): number {\r\n\treturn t * t;\r\n}\r\nregistry.registeredClasses[\"ease.quadIn\"] = quadIn;\r\n\r\n/**\r\n * Easing function: \"quadOut\".\r\n */\r\nexport function quadOut(t: number): number {\r\n\treturn t * (2 - t);\r\n}\r\nregistry.registeredClasses[\"ease.quadOut\"] = quadOut;\r\n\r\n/**\r\n * Easing function: \"quadInOut\".\r\n */\r\nexport function quadInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.quadInOut\"] = quadInOut;\r\n\r\n/**\r\n * Easing function: \"polyIn\".\r\n */\r\nexport function polyIn(t: number, e: number): number {\r\n\treturn Math.pow(t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn\"] = polyIn;\r\n\r\n/**\r\n * Easing function: \"polyOut\".\r\n */\r\nexport function polyOut(t: number, e: number): number {\r\n\treturn 1 - Math.pow(1 - t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut\"] = polyOut;\r\n\r\n/**\r\n * Easing function: \"polyInOut\".\r\n */\r\nexport function polyInOut(t: number, e: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut\"] = polyInOut;\r\n\r\n/**\r\n * Easing function: \"polyIn3\".\r\n */\r\nexport function polyIn3(t: number): number {\r\n\treturn polyIn(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn3\"] = polyIn3;\r\n\r\n/**\r\n * Easing function: \"polyOut3\".\r\n */\r\nexport function polyOut3(t: number): number {\r\n\treturn polyOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut3\"] = polyOut3;\r\n\r\n/**\r\n * Easing function: \"polyInOut3\".\r\n */\r\nexport function polyInOut3(t: number): number {\r\n\treturn polyInOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut3\"] = polyInOut3;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * EXPONENTIAL FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"expIn\".\r\n */\r\nexport function expIn(t: number): number {\r\n\treturn Math.pow(2, 10 * t - 10);\r\n}\r\nregistry.registeredClasses[\"ease.expIn\"] = expIn;\r\n\r\n/**\r\n * Easing function: \"expOut\".\r\n */\r\nexport function expOut(t: number): number {\r\n\treturn 1 - Math.pow(2, -10 * t);\r\n}\r\nregistry.registeredClasses[\"ease.expOut\"] = expOut;\r\n\r\n/**\r\n * Easing function: \"expInOut\".\r\n */\r\nexport function expInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.expInOut\"] = expInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * SINE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"sinIn\".\r\n */\r\nexport function sinIn(t: number): number {\r\n\treturn 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinIn\"] = sinIn;\r\n\r\n/**\r\n * Easing function: \"sinOut\".\r\n */\r\nexport function sinOut(t: number): number {\r\n\treturn Math.sin(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinOut\"] = sinOut;\r\n\r\n/**\r\n * Easing function: \"sinInOut\".\r\n */\r\nexport function sinInOut(t: number): number {\r\n\treturn (1 - Math.cos($math.PI * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.sinInOut\"] = sinInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CUBIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"cubicIn\".\r\n */\r\nexport function cubicIn(t: number): number {\r\n\treturn t * t * t;\r\n}\r\nregistry.registeredClasses[\"ease.cubicIn\"] = cubicIn;\r\n\r\n/**\r\n * Easing function: \"cubicOut\".\r\n */\r\nexport function cubicOut(t: number): number {\r\n\treturn --t * t * t + 1;\r\n}\r\nregistry.registeredClasses[\"ease.cubicOut\"] = cubicOut;\r\n\r\n/**\r\n * Easing function: \"cubicInOut\".\r\n */\r\nexport function cubicInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.cubicInOut\"] = cubicInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * CIRCLE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Easing function: \"circleIn\".\r\n */\r\nexport function circleIn(t: number): number {\r\n\treturn 1 - Math.sqrt(1 - t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleIn\"] = circleIn;\r\n\r\n/**\r\n * Easing function: \"circleOut\".\r\n */\r\nexport function circleOut(t: number): number {\r\n\treturn Math.sqrt(1 - --t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleOut\"] = circleOut;\r\n\r\n/**\r\n * Easing function: \"circleInOut\".\r\n */\r\nexport function circleInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.circleInOut\"] = circleInOut;\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * BOUNCE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet b1 = 4 / 11,\r\n\tb2 = 6 / 11,\r\n\tb3 = 8 / 11,\r\n\tb4 = 3 / 4,\r\n\tb5 = 9 / 11,\r\n\tb6 = 10 / 11,\r\n\tb7 = 15 / 16,\r\n\tb8 = 21 / 22,\r\n\tb9 = 63 / 64,\r\n\tb0 = 1 / b1 / b1;\r\n\r\n/**\r\n * Easing function: \"bounceIn\".\r\n */\r\nexport function bounceIn(t: number): number {\r\n\treturn 1 - bounceOut(1 - t);\r\n}\r\nregistry.registeredClasses[\"ease.bounceIn\"] = bounceIn;\r\n\r\n/**\r\n * Easing function: \"bounceOut\".\r\n */\r\nexport function bounceOut(t: number): number {\r\n\tt = +t;\r\n\treturn t < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\nregistry.registeredClasses[\"ease.bounceOut\"] = bounceOut;\r\n\r\n/**\r\n * Easing function: \"bounceInOut\".\r\n */\r\nexport function bounceInOut(t: number): number {\r\n\tt *= 2;\r\n\treturn (t <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.bounceInOut\"] = bounceInOut;\r\n\r\n/**\r\n * ============================================================================\r\n * ELASTIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nlet tau = 2 * Math.PI;\r\nlet amplitude = 1;\r\nlet period = 0.3 / tau;\r\nlet s = Math.asin(1 / amplitude) * period;\r\n\r\n/**\r\n * Easing function: \"elasticIn\".\r\n *\r\n * @function elasticIn\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticIn(t: number): number {\r\n\treturn amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticIn\"] = elasticIn;\r\n\r\n/**\r\n * Easing function: \"elasticOut\".\r\n *\r\n * @function elasticOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticOut(t: number): number {\r\n\treturn 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticOut\"] = elasticOut;\r\n\r\n/**\r\n * Easing function: \"elasticInOut\".\r\n *\r\n * @function elasticInOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticInOut(t: number): number {\r\n\tt = t * 2 - 1;\r\n\treturn (t < 0\r\n\t\t? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period)\r\n\t\t: 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.elasticInOut\"] = elasticInOut;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}