{"ast":null,"code":"var _jsxFileName = \"/Users/leehochan/Desktop/WORI42/src/Component/Example/Compose/Compose.js\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\"; // import { config } from \"../../../config\";\n\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBox\";\n\nrequire('dotenv').config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 9,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({\n      speed: 1.2\n    }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true\n  });\n  const mainSearchInput = useCallback(vp => {\n    setInfo({ ...info,\n      searchInfo: vp.target.value\n    });\n  }, [info]);\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: `${process.env.config.Google_Token}`\n    }).then(res => {\n      setInfo({ ...info,\n        isMain: false,\n        latitude: res.data.results[0].geometry.location.lat,\n        longitude: res.data.results[0].geometry.location.lng,\n        zoom: 11,\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionDuration: 1000\n      });\n    }).catch(res => {\n      console.log(res);\n    });\n  }, [info]);\n  useEffect(() => {\n    if (info.isMain) {\n      const interval = setInterval(() => {\n        setInfo({ ...info,\n          latitude: info.latitude + 0.01,\n          longitude: info.longitude + 0.01\n        });\n      }, 100);\n      return () => clearInterval(interval);\n    }\n\n    return;\n  }, [info]);\n  return /*#__PURE__*/React.createElement(MapGL, Object.assign({}, info, {\n    width: \"100vw\",\n    height: \"100vh\" // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n    // mapboxApiAccessToken={config.MAPBOX_THEME}\n    ,\n    onViewportChange: nextViewport => setInfo({ ...info,\n      ...nextViewport\n    }),\n    mapStyle: \"mapbox://styles/mapbox/dark-v9\",\n    mapboxApiAccessToken: process.env.config.MAPBOX_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(InputBox, {\n    info: info,\n    setInfo: setInfo,\n    mainSearchInput: mainSearchInput,\n    goToViewPort: goToViewPort,\n    isMain: info.isMain,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Compose;","map":{"version":3,"sources":["/Users/leehochan/Desktop/WORI42/src/Component/Example/Compose/Compose.js"],"names":["React","useState","useCallback","useEffect","MapGL","FlyToInterpolator","request","InputBox","require","config","Compose","info","setInfo","longitude","latitude","zoom","pitch","bearing","transitionInterpolator","speed","transitionDuration","searchInfo","isMain","mainSearchInput","vp","target","value","goToViewPort","address","key","process","env","Google_Token","then","res","data","results","geometry","location","lat","lng","catch","console","log","interval","setInterval","clearInterval","nextViewport","MAPBOX_TOKEN"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import { config } from \"../../../config\";\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBox\";\nrequire('dotenv').config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 9,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true,\n  });\n\n  const mainSearchInput = useCallback(\n    (vp) => {\n      setInfo({\n        ...info,\n        searchInfo: vp.target.value,\n      });\n    },\n    [info]\n  );\n\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: `${process.env.config.Google_Token}`,\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          zoom: 11,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  }, [info]);\n\n  useEffect(() => {\n    if (info.isMain) {\n      const interval = setInterval(() => {\n        setInfo({\n          ...info,\n          latitude: info.latitude + 0.01,\n          longitude: info.longitude + 0.01,\n        });\n      }, 100);\n      return () => clearInterval(interval);\n    }\n    return;\n  }, [info]);\n\n  return (\n    <MapGL\n      {...info}\n      width=\"100vw\"\n      height=\"100vh\"\n      // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n      // mapboxApiAccessToken={config.MAPBOX_THEME}\n      onViewportChange={(nextViewport) => setInfo({ ...info, ...nextViewport })}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.config.MAPBOX_TOKEN}\n    >\n      <InputBox\n        info={info}\n        setInfo={setInfo}\n        mainSearchInput={mainSearchInput}\n        goToViewPort={goToViewPort}\n        isMain={info.isMain}\n      />\n    </MapGL>\n  );\n}\n\nexport default Compose;\n"]},"metadata":{},"sourceType":"module"}