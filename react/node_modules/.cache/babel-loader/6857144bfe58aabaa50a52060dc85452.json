{"ast":null,"code":"import _toConsumableArray from\"/Users/leehochan/Desktop/real/WORI42/react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/leehochan/Desktop/real/WORI42/react/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/leehochan/Desktop/real/WORI42/react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect,useRef}from\"react\";import MapGL,{FlyToInterpolator}from\"react-map-gl\";import\"mapbox-gl/dist/mapbox-gl.css\";import request from\"../Axios/request\";import InputBox from\"./InputBoxGrid\";import Marker from\"./Marker/Marker\";import Sliderbar from\"./Slidebar/Sliderbar\";import Footer from\"./Footer/Footer\";import SideBar from\"./SideBar/SideBar\";import Pin from\"../Marker/Pin\";import\"./compose.scss\";// import Chart from \"../Chart/Chart\";\nimport dotenv from\"dotenv\";dotenv.config();function Compose(){var _useState=useState({longitude:127.024612,latitude:37.5326,zoom:5.5,pitch:0,bearing:0,transitionInterpolator:new FlyToInterpolator({speed:1.2}),transitionDuration:1000,searchInfo:\"\",isMain:true}),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userData=_useState4[0],setUserData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),convertedData=_useState6[0],setConvertedData=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),idx=_useState8[0],setIdx=_useState8[1];var map_ref=useRef();var mainSearchInput=useCallback(function(vp){setInfo(_objectSpread({},info,{searchInfo:vp.target.value}));});var getAddress=function getAddress(data){data.map(function(data){return request(\"get\",\"https://maps.googleapis.com/maps/api/geocode/json\",{latlng:data[0]+\",\"+data[1],key:process.env.REACT_APP_Google_Token}).then(function(res){var result={province:res.data.results[0].address_components[1].long_name,city:res.data.results[0].address_components[2].long_name,group:\"NEW\",infection_case:\"User_data\",confirmed:1,latitude:data[0],longitude:data[1],time:\"UTF로 해주세요\",name:\"hochan\"};setConvertedData([].concat(_toConsumableArray(convertedData),[result]));shoot();}).catch(function(res){console.log(res);});});};var shoot=function shoot(){return request(\"post\",\"https://hackertonopendata.herokuapp.com/covid19/data/user\",{user_data:convertedData}).then(function(res){setUserData(res.data);}).catch(function(err){console.log(err);});};var go=function go(infor){request(\"get\",\"https://maps.googleapis.com/maps/api/geocode/json\",{address:infor,key:process.env.REACT_APP_Google_Token}).then(function(res){setInfo(_objectSpread({},info,{isMain:false,latitude:res.data.results[0].geometry.location.lat,longitude:res.data.results[0].geometry.location.lng,searchInfo:infor,zoom:14,transitionInterpolator:new FlyToInterpolator(),transitionDuration:1000}));if(markerList.length<=6){setMarkerList(markerList.concat([[res.data.results[0].geometry.location.lat,res.data.results[0].geometry.location.lng,infor]]));// 현재 지도에서 보고 있는 좌표의 정 가운데 좌표를 넣어줘야 함\n}}).catch(function(res){console.log(res);});};var goToViewPort=useCallback(function(){request(\"get\",\"https://maps.googleapis.com/maps/api/geocode/json\",{address:info.searchInfo,key:process.env.REACT_APP_Google_Token}).then(function(res){setInfo(_objectSpread({},info,{isMain:false,latitude:res.data.results[0].geometry.location.lat,longitude:res.data.results[0].geometry.location.lng,zoom:14,transitionInterpolator:new FlyToInterpolator(),transitionDuration:1000}));}).catch(function(res){console.log(res);});},[info]);useEffect(function(){if(info.isMain&&info.longitude<=128){var interval=setInterval(function(){setInfo(_objectSpread({},info,{latitude:info.latitude+0.005,longitude:info.longitude+0.005}));},50);return function(){return clearInterval(interval);};}return;},[info]);useEffect(function(){request(\"get\",\"https://hackertonopendata.herokuapp.com/covid19/data/covid19\").then(function(res){setUserData(res.data);}).catch(function(err){console.log(err);});},[]);var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),markerList=_useState10[0],setMarkerList=_useState10[1];var func_create=function func_create(name){go(name);// if (markerList.length <= 6) {\n//   setMarkerList(markerList.concat([[info.latitude, info.longitude, name]])); // 현재 지도에서 보고 있는 좌표의 정 가운데 좌표를 넣어줘야 함\n// }\nsetIdx(idx+1);console.log(markerList);};var func_submit=function func_submit(){console.log(markerList);getAddress(markerList);console.log(convertedData);};var func_revise=function func_revise(idx,latitude,longitude){var revised=markerList.slice();revised[idx][0]=latitude;revised[idx][1]=longitude;setMarkerList(revised);};return/*#__PURE__*/React.createElement(MapGL,Object.assign({},info,{width:\"100vw\",height:\"100vh\"// mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n,mapboxApiAccessToken:process.env.REACT_APP_MAPBOX_THEME,onViewportChange:info.isMain?function(){\"\";}:function(nextViewport){return setInfo(_objectSpread({},info,{},nextViewport));}// mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n// mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n,mapStyle:\"mapbox://styles/holee/ckd0isb0511wr1iqvi1347ng8/draft\",ref:map_ref// mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n}),/*#__PURE__*/React.createElement(Marker,{userData:userData}),markerList.map(function(data,index){return/*#__PURE__*/React.createElement(Pin,{key:index,num:index,latitude:data[0],longitude:data[1],func_revise:func_revise});}),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"item\"},/*#__PURE__*/React.createElement(InputBox,{info:info,setInfo:setInfo,mainSearchInput:mainSearchInput,goToViewPort:goToViewPort,isMain:info.isMain})),info.isMain?function(){\"\";}:/*#__PURE__*/React.createElement(Sliderbar,null),info.isMain?function(){\"\";}:/*#__PURE__*/React.createElement(SideBar,{func_create:func_create,func_submit:func_submit}),/*#__PURE__*/React.createElement(Footer,null)));}export default Compose;","map":{"version":3,"sources":["/Users/leehochan/Desktop/real/WORI42/react/src/Component/Example/Compose/Compose.js"],"names":["React","useState","useCallback","useEffect","useRef","MapGL","FlyToInterpolator","request","InputBox","Marker","Sliderbar","Footer","SideBar","Pin","dotenv","config","Compose","longitude","latitude","zoom","pitch","bearing","transitionInterpolator","speed","transitionDuration","searchInfo","isMain","info","setInfo","userData","setUserData","convertedData","setConvertedData","idx","setIdx","map_ref","mainSearchInput","vp","target","value","getAddress","data","map","latlng","key","process","env","REACT_APP_Google_Token","then","res","result","province","results","address_components","long_name","city","group","infection_case","confirmed","time","name","shoot","catch","console","log","user_data","err","go","infor","address","geometry","location","lat","lng","markerList","length","setMarkerList","concat","goToViewPort","interval","setInterval","clearInterval","func_create","func_submit","func_revise","revised","slice","REACT_APP_MAPBOX_THEME","nextViewport","index"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBoxGrid\";\nimport Marker from \"./Marker/Marker\";\nimport Sliderbar from \"./Slidebar/Sliderbar\";\nimport Footer from \"./Footer/Footer\";\nimport SideBar from \"./SideBar/SideBar\";\nimport Pin from \"../Marker/Pin\";\nimport \"./compose.scss\";\n\n// import Chart from \"../Chart/Chart\";\nimport dotenv from \"dotenv\";\n\ndotenv.config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 5.5,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true,\n  });\n  const [userData, setUserData] = useState([]);\n  const [convertedData, setConvertedData] = useState([]);\n  const [idx, setIdx] = useState(0);\n  const map_ref = useRef();\n\n  const mainSearchInput = useCallback((vp) => {\n    setInfo({\n      ...info,\n      searchInfo: vp.target.value,\n    });\n  });\n\n  const getAddress = (data) => {\n    data.map((data) =>\n      request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n        latlng: data[0] + \",\" + data[1],\n        key: process.env.REACT_APP_Google_Token,\n      })\n        .then((res) => {\n          let result = {\n            province: res.data.results[0].address_components[1].long_name,\n            city: res.data.results[0].address_components[2].long_name,\n            group: \"NEW\",\n            infection_case: \"User_data\",\n            confirmed: 1,\n            latitude: data[0],\n            longitude: data[1],\n            time: \"UTF로 해주세요\",\n            name: \"hochan\",\n          };\n          setConvertedData([...convertedData, result]);\n          shoot();\n        })\n        .catch((res) => {\n          console.log(res);\n        })\n    );\n  };\n\n  const shoot = () =>\n    request(\"post\", `https://hackertonopendata.herokuapp.com/covid19/data/user`, {\n      user_data: convertedData,\n    })\n      .then((res) => {\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  const go = (infor) => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: infor,\n      key: process.env.REACT_APP_Google_Token,\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          searchInfo: infor,\n          zoom: 14,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n        if (markerList.length <= 6) {\n          setMarkerList(\n            markerList.concat([\n              [\n                res.data.results[0].geometry.location.lat,\n                res.data.results[0].geometry.location.lng,\n                infor,\n              ],\n            ])\n          ); // 현재 지도에서 보고 있는 좌표의 정 가운데 좌표를 넣어줘야 함\n        }\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  };\n\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: process.env.REACT_APP_Google_Token,\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          zoom: 14,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  }, [info]);\n\n  useEffect(() => {\n    if (info.isMain && info.longitude <= 128) {\n      const interval = setInterval(() => {\n        setInfo({\n          ...info,\n          latitude: info.latitude + 0.005,\n          longitude: info.longitude + 0.005,\n        });\n      }, 50);\n      return () => clearInterval(interval);\n    }\n    return;\n  }, [info]);\n\n  useEffect(() => {\n    request(\"get\", `https://hackertonopendata.herokuapp.com/covid19/data/covid19`)\n      .then((res) => {\n        setUserData(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const [markerList, setMarkerList] = useState([]);\n\n  const func_create = (name) => {\n    go(name);\n\n    // if (markerList.length <= 6) {\n    //   setMarkerList(markerList.concat([[info.latitude, info.longitude, name]])); // 현재 지도에서 보고 있는 좌표의 정 가운데 좌표를 넣어줘야 함\n    // }\n    setIdx(idx + 1);\n    console.log(markerList);\n  };\n\n  const func_submit = () => {\n    console.log(markerList);\n    getAddress(markerList);\n    console.log(convertedData);\n  };\n\n  const func_revise = (idx, latitude, longitude) => {\n    let revised = markerList.slice();\n    revised[idx][0] = latitude;\n    revised[idx][1] = longitude;\n    setMarkerList(revised);\n  };\n\n  return (\n    <MapGL\n      {...info}\n      width=\"100vw\"\n      height=\"100vh\"\n      // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_THEME}\n      onViewportChange={\n        info.isMain\n          ? () => {\n              \"\";\n            }\n          : (nextViewport) => setInfo({ ...info, ...nextViewport })\n      }\n      // mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n      // mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapStyle=\"mapbox://styles/holee/ckd0isb0511wr1iqvi1347ng8/draft\"\n      ref={map_ref}\n      // mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n    >\n      <Marker userData={userData} />\n\n      {markerList.map((data, index) => (\n        <Pin\n          key={index}\n          num={index}\n          latitude={data[0]}\n          longitude={data[1]}\n          func_revise={func_revise}\n        />\n      ))}\n\n      <div className=\"container\">\n        <div className=\"item\">\n          <InputBox\n            info={info}\n            setInfo={setInfo}\n            mainSearchInput={mainSearchInput}\n            goToViewPort={goToViewPort}\n            isMain={info.isMain}\n          />\n        </div>\n        {info.isMain ? (\n          () => {\n            \"\";\n          }\n        ) : (\n          <Sliderbar />\n        )}\n        {info.isMain ? (\n          () => {\n            \"\";\n          }\n        ) : (\n          <SideBar func_create={func_create} func_submit={func_submit} />\n        )}\n        <Footer />\n        {/* <Chart /> */}\n      </div>\n    </MapGL>\n  );\n}\n\nexport default Compose;\n"]},"metadata":{},"sourceType":"module"}