{"version":3,"sources":["../../../../src/lib/encoders/encode-image.js"],"names":["assert","global","_encodeImageNode","encodeImage","image","type","HTMLCanvasElement","canvas","toDataURL","Image","document","createElement","width","height","getContext","drawImage","data","replace","Promise","resolve"],"mappings":"AAGA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAAQC,MAAR,QAAqB,kBAArB;IAGOC,gB,GAAoBD,M,CAApBC,gB;AAEP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,IAA5B,EAAkC;AACvC,MAAIH,gBAAJ,EAAsB;AAEpB,WAAOA,gBAAgB,CAACE,KAAD,EAAQC,IAAR,CAAvB;AACD;;AAED,MAAID,KAAK,YAAYE,iBAArB,EAAwC;AACtC,QAAMC,OAAM,GAAGH,KAAf;AACA,WAAOG,OAAM,CAACC,SAAP,CAAiBH,IAAjB,CAAP;AACD;;AAEDL,EAAAA,MAAM,CAACI,KAAK,YAAYK,KAAlB,EAAyB,sCAAzB,CAAN;AACA,MAAMF,MAAM,GAAGG,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAJ,EAAAA,MAAM,CAACK,KAAP,GAAeR,KAAK,CAACQ,KAArB;AACAL,EAAAA,MAAM,CAACM,MAAP,GAAgBT,KAAK,CAACS,MAAtB;AACAN,EAAAA,MAAM,CAACO,UAAP,CAAkB,IAAlB,EAAwBC,SAAxB,CAAkCX,KAAlC,EAAyC,CAAzC,EAA4C,CAA5C;AAGA,MAAMY,IAAI,GAAGT,MAAM,CAACC,SAAP,CAAiBH,IAAI,IAAI,KAAzB,EAAgCY,OAAhC,CAAwC,gCAAxC,EAA0E,EAA1E,CAAb;AACA,SAAOC,OAAO,CAACC,OAAR,CAAgBH,IAAhB,CAAP;AACD","sourcesContent":["// Image loading/saving for browser\n/* global document, HTMLCanvasElement, Image */\n\nimport assert from '../utils/assert';\nimport {global} from '../utils/globals';\n\n// @ts-ignore TS2339: Property does not exist on type\nconst {_encodeImageNode} = global;\n\nexport function encodeImage(image, type) {\n  if (_encodeImageNode) {\n    // @ts-ignore TS2339: Property does not exist on type\n    return _encodeImageNode(image, type);\n  }\n\n  if (image instanceof HTMLCanvasElement) {\n    const canvas = image;\n    return canvas.toDataURL(type);\n  }\n\n  assert(image instanceof Image, 'getImageData accepts image or canvas');\n  const canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  canvas.getContext('2d').drawImage(image, 0, 0);\n\n  // Get raw image data\n  const data = canvas.toDataURL(type || 'png').replace(/^data:image\\/(png|jpg);base64,/, '');\n  return Promise.resolve(data);\n}\n"],"file":"encode-image.js"}