{"version":3,"sources":["../../src/gltf-loader.js"],"names":["parseGLTF","VERSION","GLTFLoader","id","name","version","extensions","mimeTypes","text","binary","test","parse","options","gltf","loadBuffers","loadImages","decompressMeshes","postProcess","uri","log","console","deprecatedOptions","fetchImages","createImages","decompress","arrayBuffer","context","addDeprecatedGLTFOptions","byteOffset","fetchBuffers","fetchLinkedResources"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,kBAAxB;AAKA,MAAMC,OAAO,GAAG,mBAAuB,WAAvB,aAAmD,QAAnE;AAGA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,MADa;AAEjBC,EAAAA,IAAI,EAAE,MAFW;AAGjBC,EAAAA,OAAO,EAAEJ,OAHQ;AAIjBK,EAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,KAAT,CAJK;AAKjBC,EAAAA,SAAS,EAAE,CAAC,iBAAD,EAAoB,mBAApB,CALM;AAOjBC,EAAAA,IAAI,EAAE,IAPW;AAQjBC,EAAAA,MAAM,EAAE,IARS;AASjBC,EAAAA,IAAI,EAAE,MATW;AAUjBC,EAAAA,KAViB;AAYjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AACJC,MAAAA,WAAW,EAAE,IADT;AAEJC,MAAAA,UAAU,EAAE,IAFR;AAGJC,MAAAA,gBAAgB,EAAE,IAHd;AAIJC,MAAAA,WAAW,EAAE;AAJT,KADC;AASPC,IAAAA,GAAG,EAAE,EATE;AAUPC,IAAAA,GAAG,EAAEC;AAVE,GAZQ;AAwBjBC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,WAAW,EAAE,iBADI;AAEjBC,IAAAA,YAAY,EAAE,iBAFG;AAGjBC,IAAAA,UAAU,EAAE,uBAHK;AAIjBP,IAAAA,WAAW,EAAE,kBAJI;AAKjBJ,IAAAA,IAAI,EAAE;AACJW,MAAAA,UAAU,EAAE;AADR;AALW;AAxBF,CAAnB;AAmCA,eAAetB,UAAf;AAEA,OAAO,eAAeS,KAAf,CAAqBc,WAArB,EAAkCb,OAAO,GAAG,EAA5C,EAAgDc,OAAhD,EAAyD;AAE9Dd,EAAAA,OAAO,mCAAOV,UAAU,CAACU,OAAlB,GAA8BA,OAA9B,CAAP;AACAA,EAAAA,OAAO,CAACC,IAAR,mCAAmBX,UAAU,CAACU,OAAX,CAAmBC,IAAtC,GAA+CD,OAAO,CAACC,IAAvD;AACAc,EAAAA,wBAAwB,CAACf,OAAD,CAAxB;AAEA,QAAM;AAACgB,IAAAA,UAAU,GAAG;AAAd,MAAmBhB,OAAzB;AACA,QAAMC,IAAI,GAAG,EAAb;AACA,SAAO,MAAMb,SAAS,CAACa,IAAD,EAAOY,WAAP,EAAoBG,UAApB,EAAgChB,OAAhC,EAAyCc,OAAzC,CAAtB;AACD;;AAID,SAASC,wBAAT,CAAkCf,OAAlC,EAA2C;AACzC,MAAI,iBAAiBA,OAArB,EAA8B;AAC5BA,IAAAA,OAAO,CAACC,IAAR,CAAaE,UAAb,GAA0BH,OAAO,CAACU,WAAlC;AACD;;AACD,MAAI,kBAAkBV,OAAtB,EAA+B;AAC7BA,IAAAA,OAAO,CAACC,IAAR,CAAaE,UAAb,GAA0BH,OAAO,CAACW,YAAlC;AACD;;AACD,MAAI,0BAA0BX,OAA9B,EAAuC;AACrCA,IAAAA,OAAO,CAACC,IAAR,CAAagB,YAAb,GAA4BjB,OAAO,CAACkB,oBAApC;AACD;;AACD,MAAI,gBAAgBlB,OAApB,EAA6B;AAC3BA,IAAAA,OAAO,CAACC,IAAR,CAAaG,gBAAb,GAAgCJ,OAAO,CAACY,UAAxC;AACD;;AACD,MAAI,gBAAgBZ,OAAO,CAACC,IAA5B,EAAkC;AAChCD,IAAAA,OAAO,CAACC,IAAR,CAAaG,gBAAb,GAAgCJ,OAAO,CAACC,IAAR,CAAaW,UAA7C;AACD;;AACD,MAAI,iBAAiBZ,OAArB,EAA8B;AAC5BA,IAAAA,OAAO,CAACC,IAAR,CAAaI,WAAb,GAA2BL,OAAO,CAACK,WAAnC;AACD;AACF","sourcesContent":["import {parseGLTF} from './lib/parse-gltf';\n/** @typedef {import('@loaders.gl/loader-utils').LoaderObject} LoaderObject */\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/** @type {LoaderObject} */\nconst GLTFLoader = {\n  id: 'gltf',\n  name: 'glTF',\n  version: VERSION,\n  extensions: ['gltf', 'glb'],\n  mimeTypes: ['model/gltf+json', 'model/gltf-binary'],\n\n  text: true,\n  binary: true,\n  test: 'glTF',\n  parse,\n\n  options: {\n    gltf: {\n      loadBuffers: true, // Fetch any linked .BIN buffers, decode base64\n      loadImages: true, // Create image objects\n      decompressMeshes: true, // Decompress Draco encoded meshes\n      postProcess: true // Postprocess glTF and return json structure directly\n    },\n\n    // common?\n    uri: '', // base URI\n    log: console // eslint-disable-line\n  },\n  deprecatedOptions: {\n    fetchImages: 'gltf.loadImages',\n    createImages: 'gltf.loadImages',\n    decompress: 'gltf.decompressMeshes',\n    postProcess: 'gltf.postProcess',\n    gltf: {\n      decompress: 'gltf.decompressMeshes'\n    }\n  }\n};\n\nexport default GLTFLoader;\n\nexport async function parse(arrayBuffer, options = {}, context) {\n  // Apps can call the parse method directly, we so apply default options here\n  options = {...GLTFLoader.options, ...options};\n  options.gltf = {...GLTFLoader.options.gltf, ...options.gltf};\n  addDeprecatedGLTFOptions(options);\n\n  const {byteOffset = 0} = options;\n  const gltf = {};\n  return await parseGLTF(gltf, arrayBuffer, byteOffset, options, context);\n}\n\n// DEPRECATED\n\nfunction addDeprecatedGLTFOptions(options) {\n  if ('fetchImages' in options) {\n    options.gltf.loadImages = options.fetchImages;\n  }\n  if ('createImages' in options) {\n    options.gltf.loadImages = options.createImages;\n  }\n  if ('fetchLinkedResources' in options) {\n    options.gltf.fetchBuffers = options.fetchLinkedResources;\n  }\n  if ('decompress' in options) {\n    options.gltf.decompressMeshes = options.decompress;\n  }\n  if ('decompress' in options.gltf) {\n    options.gltf.decompressMeshes = options.gltf.decompress;\n  }\n  if ('postProcess' in options) {\n    options.gltf.postProcess = options.postProcess;\n  }\n}\n"],"file":"gltf-loader.js"}