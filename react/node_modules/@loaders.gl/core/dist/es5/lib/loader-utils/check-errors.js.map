{"version":3,"sources":["../../../../src/lib/loader-utils/check-errors.js"],"names":["checkFetchResponseStatus","response","ok","errorMessage","status","statusText","text","slice","Error","checkFetchResponseStatusSync"],"mappings":";;;;;;;;;;;;;;SAAsBA,wB;;;;;8FAAf,iBAAwCC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACAA,QAAQ,CAACC,EADT;AAAA;AAAA;AAAA;;AAECC,YAAAA,YAFD,0BAEgCF,QAAQ,CAACG,MAFzC,cAEmDH,QAAQ,CAACI,UAF5D;AAAA;AAAA;AAAA,mBAIkBJ,QAAQ,CAACK,IAAT,GAAgBC,KAAhB,CAAsB,EAAtB,CAJlB;;AAAA;AAIKD,YAAAA,IAJL;AAKDH,YAAAA,YAAY,IAAIG,IAAhB;AALC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBASG,IAAIE,KAAJ,CAAUL,YAAV,CATH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,SAASM,4BAAT,CAAsCR,QAAtC,EAAgD;AACrD,MAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,UAAM,IAAIM,KAAJ,wBAA0BP,QAAQ,CAACG,MAAnC,EAAN;AACD;AACF","sourcesContent":["export async function checkFetchResponseStatus(response) {\n  if (!response.ok) {\n    let errorMessage = `fetch failed ${response.status} ${response.statusText}`;\n    try {\n      const text = await response.text().slice(10);\n      errorMessage += text;\n    } catch (error) {\n      // ignore error\n    }\n    throw new Error(errorMessage);\n  }\n}\n\nexport function checkFetchResponseStatusSync(response) {\n  if (!response.ok) {\n    throw new Error(`fetch failed ${response.status}`);\n  }\n}\n"],"file":"check-errors.js"}