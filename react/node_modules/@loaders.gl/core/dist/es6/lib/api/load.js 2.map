{"version":3,"sources":["../../../../src/lib/api/load.js"],"names":["isBlob","fetchFile","isLoaderObject","parse","load","url","loaders","options","Array","isArray","data"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,gCAArB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,cAAR,QAA6B,kCAA7B;AAEA,SAAQC,KAAR,QAAoB,SAApB;AAIA,OAAO,eAAeC,IAAf,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AAEhD,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAD,IAA2B,CAACJ,cAAc,CAACI,OAAD,CAA9C,EAAyD;AACvDC,IAAAA,OAAO,GAAGD,OAAV;AACAA,IAAAA,OAAO,GAAG,IAAV;AACD;;AAGD,MAAII,IAAI,GAAGL,GAAX;;AAGA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3BK,IAAAA,IAAI,GAAG,MAAMT,SAAS,CAACI,GAAD,EAAME,OAAN,CAAtB;AACD,GAFD,MAEO;AACLF,IAAAA,GAAG,GAAG,IAAN;AACD;;AAGD,MAAIL,MAAM,CAACK,GAAD,CAAV,EAAiB;AAEfK,IAAAA,IAAI,GAAG,MAAMT,SAAS,CAACI,GAAD,EAAME,OAAN,CAAtB;AACAF,IAAAA,GAAG,GAAG,IAAN;AACD;;AAGD,SAAO,MAAMF,KAAK,CAACO,IAAD,EAAOJ,OAAP,EAAgBC,OAAhB,EAAyBF,GAAzB,CAAlB;AACD","sourcesContent":["import {isBlob} from '../../javascript-utils/is-type';\nimport {fetchFile} from '../fetch/fetch-file';\nimport {isLoaderObject} from '../loader-utils/normalize-loader';\n\nimport {parse} from './parse';\n\n// Note: Load does duplicate a lot of parse.\n// it can also call fetchFile on string urls, which `parse` won't do.\nexport async function load(url, loaders, options) {\n  // Signature: load(url, options)\n  if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n    options = loaders;\n    loaders = null;\n  }\n\n  // at this point, `url` could be already loaded binary data\n  let data = url;\n\n  // url is a string, fetch the url\n  if (typeof url === 'string') {\n    data = await fetchFile(url, options);\n  } else {\n    url = null;\n  }\n\n  // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n  if (isBlob(url)) {\n    // The fetch response object will contain blob.name\n    data = await fetchFile(url, options);\n    url = null;\n  }\n\n  // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n  return await parse(data, loaders, options, url);\n}\n"],"file":"load.js"}