{"version":3,"sources":["../../../../src/lib/fetch/fetch-file.js"],"names":["resolvePath","isBlob","fetchFileReadable","getErrorMessageFromResponse","fetchFile","url","options","response","fetch","ok","throws","Error"],"mappings":"AACA,SAAQA,WAAR,QAA0B,0BAA1B;AACA,SAAQC,MAAR,QAAqB,gCAArB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAAQC,2BAAR,QAA0C,uBAA1C;AAOA,OAAO,eAAeC,SAAf,CAAyBC,GAAzB,EAA8BC,OAAO,GAAG,EAAxC,EAA4C;AACjD,MAAIL,MAAM,CAACI,GAAD,CAAV,EAAiB;AACf,WAAOH,iBAAiB,CAACG,GAAD,EAAMC,OAAN,CAAxB;AACD;;AACDD,EAAAA,GAAG,GAAGL,WAAW,CAACK,GAAD,CAAjB;AAEA,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;;AACA,MAAI,CAACC,QAAQ,CAACE,EAAV,IAAgBH,OAAO,CAACI,MAA5B,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CAAU,MAAMR,2BAA2B,CAACI,QAAD,CAA3C,CAAN;AACD;;AACD,SAAOA,QAAP;AACD","sourcesContent":["/* global fetch */\nimport {resolvePath} from '@loaders.gl/loader-utils';\nimport {isBlob} from '../../javascript-utils/is-type';\nimport fetchFileReadable from './fetch-file.browser';\nimport {getErrorMessageFromResponse} from './fetch-error-message';\n\n// As fetch but respects pathPrefix and file aliases\n// Reads file data from:\n// * data urls\n// * http/http urls\n// * File/Blob objects\nexport async function fetchFile(url, options = {}) {\n  if (isBlob(url)) {\n    return fetchFileReadable(url, options);\n  }\n  url = resolvePath(url);\n  // TODO - SUPPORT reading from `File` objects\n  const response = await fetch(url, options);\n  if (!response.ok && options.throws) {\n    throw new Error(await getErrorMessageFromResponse(response));\n  }\n  return response;\n}\n"],"file":"fetch-file.js"}