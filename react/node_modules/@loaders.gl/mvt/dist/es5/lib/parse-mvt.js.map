{"version":3,"sources":["../../../src/lib/parse-mvt.js"],"names":["parseMVT","input","options","byteLength","tile","VectorTile","Protobuf","loaderOptions","mvt","features","selectedLayers","Array","isArray","layers","Object","keys","forEach","layerName","vectorTileLayer","featureOptions","i","length","vectorTileFeature","feature","decodedFeature","getDecodedFeature","push","wgs84Coordinates","coordinates","hasTileIndex","tileIndex","x","y","z","Error","toGeoJSON","transformToLocalCoordinates","layerProperty","properties"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAQe,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;AAC/C,MAAID,KAAK,CAACE,UAAN,KAAqB,CAAzB,EAA4B;AAC1B,WAAO,EAAP;AACD;;AAED,MAAMC,IAAI,GAAG,IAAIC,sBAAJ,CAAe,IAAIC,eAAJ,CAAaL,KAAb,CAAf,CAAb;AACA,MAAMM,aAAa,GAAGL,OAAO,CAACM,GAA9B;AACA,MAAMC,QAAQ,GAAG,EAAjB;AAEA,MAAMC,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAcL,aAAa,CAACM,MAA5B,IACnBN,aAAa,CAACM,MADK,GAEnBC,MAAM,CAACC,IAAP,CAAYX,IAAI,CAACS,MAAjB,CAFJ;AAIAH,EAAAA,cAAc,CAACM,OAAf,CAAuB,UAAAC,SAAS,EAAI;AAClC,QAAMC,eAAe,GAAGd,IAAI,CAACS,MAAL,CAAYI,SAAZ,CAAxB;;AACA,QAAME,cAAc,mCAAOZ,aAAP;AAAsBU,MAAAA,SAAS,EAATA;AAAtB,MAApB;;AAEA,QAAI,CAACC,eAAL,EAAsB;AACpB;AACD;;AAED,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,UAAME,iBAAiB,GAAGJ,eAAe,CAACK,OAAhB,CAAwBH,CAAxB,CAA1B;AAEA,UAAMI,cAAc,GAAGC,iBAAiB,CAACH,iBAAD,EAAoBH,cAApB,CAAxC;AACAV,MAAAA,QAAQ,CAACiB,IAAT,CAAcF,cAAd;AACD;AACF,GAdD;AAgBA,SAAOf,QAAP;AACD;;AAED,SAASgB,iBAAT,CAA2BF,OAA3B,EAAkD;AAAA,MAAdrB,OAAc,uEAAJ,EAAI;AAChD,MAAMyB,gBAAgB,GAAGzB,OAAO,CAAC0B,WAAR,KAAwB,OAAjD;AACA,MAAMC,YAAY,GAChB3B,OAAO,CAAC4B,SAAR,IAAqB5B,OAAO,CAAC4B,SAAR,CAAkBC,CAAvC,IAA4C7B,OAAO,CAAC4B,SAAR,CAAkBE,CAA9D,IAAmE9B,OAAO,CAAC4B,SAAR,CAAkBG,CADvF;;AAGA,MAAIN,gBAAgB,IAAI,CAACE,YAAzB,EAAuC;AACrC,UAAM,IAAIK,KAAJ,CAAU,6EAAV,CAAN;AACD;;AAED,MAAMV,cAAc,GAClBG,gBAAgB,IAAIE,YAApB,GACIN,OAAO,CAACY,SAAR,CAAkBjC,OAAO,CAAC4B,SAAR,CAAkBC,CAApC,EAAuC7B,OAAO,CAAC4B,SAAR,CAAkBE,CAAzD,EAA4D9B,OAAO,CAAC4B,SAAR,CAAkBG,CAA9E,CADJ,GAEI,iDAAqBV,OAArB,EAA8Ba,kDAA9B,CAHN;;AAMA,MAAIlC,OAAO,CAACmC,aAAZ,EAA2B;AACzBb,IAAAA,cAAc,CAACc,UAAf,CAA0BpC,OAAO,CAACmC,aAAlC,IAAmDnC,OAAO,CAACe,SAA3D;AACD;;AAED,SAAOO,cAAP;AACD","sourcesContent":["import {VectorTile} from '@mapbox/vector-tile';\nimport Protobuf from 'pbf';\nimport {transformCoordinates, transformToLocalCoordinates} from './transform-to-local-range';\n\n/*\n  * Parse MVT arrayBuffer and return GeoJSON.\n  *\n  * @param {arrayBuffer} _ A MVT arrayBuffer\n  * @return {?Object} A GeoJSON geometry object\n  */\nexport default function parseMVT(input, options) {\n  if (input.byteLength === 0) {\n    return [];\n  }\n\n  const tile = new VectorTile(new Protobuf(input));\n  const loaderOptions = options.mvt;\n  const features = [];\n\n  const selectedLayers = Array.isArray(loaderOptions.layers)\n    ? loaderOptions.layers\n    : Object.keys(tile.layers);\n\n  selectedLayers.forEach(layerName => {\n    const vectorTileLayer = tile.layers[layerName];\n    const featureOptions = {...loaderOptions, layerName};\n\n    if (!vectorTileLayer) {\n      return;\n    }\n\n    for (let i = 0; i < vectorTileLayer.length; i++) {\n      const vectorTileFeature = vectorTileLayer.feature(i);\n\n      const decodedFeature = getDecodedFeature(vectorTileFeature, featureOptions);\n      features.push(decodedFeature);\n    }\n  });\n\n  return features;\n}\n\nfunction getDecodedFeature(feature, options = {}) {\n  const wgs84Coordinates = options.coordinates === 'wgs84';\n  const hasTileIndex =\n    options.tileIndex && options.tileIndex.x && options.tileIndex.y && options.tileIndex.z;\n\n  if (wgs84Coordinates && !hasTileIndex) {\n    throw new Error('MVT Loader: WGS84 coordinates need tileIndex property. Check documentation.');\n  }\n\n  const decodedFeature =\n    wgs84Coordinates && hasTileIndex\n      ? feature.toGeoJSON(options.tileIndex.x, options.tileIndex.y, options.tileIndex.z)\n      : transformCoordinates(feature, transformToLocalCoordinates);\n\n  // Add layer name to GeoJSON properties\n  if (options.layerProperty) {\n    decodedFeature.properties[options.layerProperty] = options.layerName;\n  }\n\n  return decodedFeature;\n}\n"],"file":"parse-mvt.js"}