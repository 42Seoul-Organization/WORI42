{"version":3,"sources":["../../../../src/lib/worker-utils/get-transfer-list.js"],"names":["getTransferList","object","recursive","transfers","transfersSet","Set","isTransferable","add","buffer","key","undefined","Array","from","ArrayBuffer","MessagePort","ImageBitmap","OffscreenCanvas"],"mappings":";;;;;;;;;;;AAOO,SAASA,eAAT,CAAyBC,MAAzB,EAA8D;AAAA,MAA7BC,SAA6B,uEAAjB,IAAiB;AAAA,MAAXC,SAAW;AAEnE,MAAMC,YAAY,GAAGD,SAAS,IAAI,IAAIE,GAAJ,EAAlC;;AAEA,MAAI,CAACJ,MAAL,EAAa,CAEZ,CAFD,MAEO,IAAIK,cAAc,CAACL,MAAD,CAAlB,EAA4B;AACjCG,IAAAA,YAAY,CAACG,GAAb,CAAiBN,MAAjB;AACD,GAFM,MAEA,IAAIK,cAAc,CAACL,MAAM,CAACO,MAAR,CAAlB,EAAmC;AAExCJ,IAAAA,YAAY,CAACG,GAAb,CAAiBN,MAAM,CAACO,MAAxB;AACD,GAHM,MAGA,IAAIN,SAAS,IAAI,yBAAOD,MAAP,MAAkB,QAAnC,EAA6C;AAClD,SAAK,IAAMQ,GAAX,IAAkBR,MAAlB,EAA0B;AAExBD,MAAAA,eAAe,CAACC,MAAM,CAACQ,GAAD,CAAP,EAAcP,SAAd,EAAyBE,YAAzB,CAAf;AACD;AACF;;AAID,SAAOD,SAAS,KAAKO,SAAd,GAA0BC,KAAK,CAACC,IAAN,CAAWR,YAAX,CAA1B,GAAqD,IAA5D;AACD;;AAGD,SAASE,cAAT,CAAwBL,MAAxB,EAAgC;AAC9B,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,KAAP;AACD;;AACD,MAAIA,MAAM,YAAYY,WAAtB,EAAmC;AACjC,WAAO,IAAP;AACD;;AACD,MAAI,OAAOC,WAAP,KAAuB,WAAvB,IAAsCb,MAAM,YAAYa,WAA5D,EAAyE;AACvE,WAAO,IAAP;AACD;;AACD,MAAI,OAAOC,WAAP,KAAuB,WAAvB,IAAsCd,MAAM,YAAYc,WAA5D,EAAyE;AACvE,WAAO,IAAP;AACD;;AACD,MAAI,OAAOC,eAAP,KAA2B,WAA3B,IAA0Cf,MAAM,YAAYe,eAAhE,EAAiF;AAC/E,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD","sourcesContent":["// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n\n/* global MessagePort, ImageBitmap, OffscreenCanvas */\n\n// Returns an array of Transferrable objects that can be used with postMessage\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function getTransferList(object, recursive = true, transfers) {\n  // Make sure that items in the transfer list is unique\n  const transfersSet = transfers || new Set();\n\n  if (!object) {\n    // ignore\n  } else if (isTransferable(object)) {\n    transfersSet.add(object);\n  } else if (isTransferable(object.buffer)) {\n    // Typed array\n    transfersSet.add(object.buffer);\n  } else if (recursive && typeof object === 'object') {\n    for (const key in object) {\n      // Avoid perf hit - only go one level deep\n      getTransferList(object[key], recursive, transfersSet);\n    }\n  }\n\n  // If transfers is defined, is internal recursive call\n  // Otherwise it's called by the user\n  return transfers === undefined ? Array.from(transfersSet) : null;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n  if (!object) {\n    return false;\n  }\n  if (object instanceof ArrayBuffer) {\n    return true;\n  }\n  if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n    return true;\n  }\n  if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n    return true;\n  }\n  if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n    return true;\n  }\n  return false;\n}\n"],"file":"get-transfer-list.js"}