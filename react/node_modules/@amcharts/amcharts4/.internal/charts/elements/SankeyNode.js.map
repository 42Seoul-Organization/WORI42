{"version":3,"file":"SankeyNode.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/elements/SankeyNode.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * SankeyNode module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { FlowDiagramNode, IFlowDiagramNodeAdapters, IFlowDiagramNodeEvents, IFlowDiagramNodeProperties } from \"./FlowDiagramNode\";\r\nimport { SankeyDiagram, SankeyDiagramDataItem } from \"../types/SankeyDiagram\";\r\nimport { LabelBullet } from \"./LabelBullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeProperties extends IFlowDiagramNodeProperties {\r\n\r\n\t/**\r\n\t * A level node is at. (0 - ...)\r\n\t */\r\n\tlevel?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[SankeyNode]].\r\n */\r\nexport interface ISankeyNodeEvents extends IFlowDiagramNodeEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SankeyNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISankeyNodeAdapters extends IFlowDiagramNodeAdapters, ISankeyNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a node in a Sankey Diagram.\r\n *\r\n * A Sankey node is a block with a value, which represents its size on the\r\n * diagram.\r\n *\r\n * Nodes are connected via [[SankeyLink]] elements.\r\n *\r\n * @see {@link ISankeyNodeEvents} for a list of available events\r\n * @see {@link ISankeyNodeAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SankeyNode extends FlowDiagramNode {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISankeyNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISankeyNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISankeyNodeEvents;\r\n\r\n\r\n\t/**\r\n\t * [nextInCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextInCoord: number = 0;\r\n\r\n\t/**\r\n\t * [nextOutCoord description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic nextOutCoord: number = 0;\r\n\r\n\t/**\r\n\t * A chart instance this node is added to.\r\n\t */\r\n\tpublic chart: SankeyDiagram;\r\n\r\n\r\n\t/**\r\n\t * Defines the type of the [[SankeyDiagramDataItem]] used in the class.\r\n\t */\r\n\tpublic _dataItem: SankeyDiagramDataItem;\r\n\r\n\t/**\r\n\t * A label element which shows node's value.\r\n\t */\r\n\tpublic valueLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * A label element which shows node's name.\r\n\t */\r\n\tpublic nameLabel: LabelBullet;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SankeyNode\";\r\n\r\n\t\tthis.width = 10;\r\n\t\tthis.height = 10;\r\n\r\n\t\tlet nameLabel = this.createChild(LabelBullet);\r\n\t\tnameLabel.shouldClone = false;\r\n\t\t//@should we auto update these locations if position is changed?\r\n\t\tnameLabel.locationX = 1;\r\n\t\tnameLabel.locationY = 0.5;\r\n\t\tnameLabel.label.text = \"{name}\";\r\n\r\n\t\t//nameLabel.label.textElement.hideOversized = false;\r\n\t\tnameLabel.width = 150;\r\n\t\tnameLabel.height = 150;\r\n\t\tnameLabel.label.horizontalCenter = \"left\";\r\n\t\tnameLabel.label.padding(0, 5, 0, 5);\r\n\t\tthis.nameLabel = nameLabel;\r\n\r\n\t\tlet valueLabel = this.createChild(LabelBullet);\r\n\t\tvalueLabel.shouldClone = false;\r\n\t\tvalueLabel.label.hideOversized = false;\r\n\t\tvalueLabel.locationX = 0.5;\r\n\t\tvalueLabel.locationY = 0.5;\r\n\t\tvalueLabel.width = 150;\r\n\t\tvalueLabel.height = 150;\r\n\t\t//valueLabel.label.text = \"{value}\";\r\n\t\tvalueLabel.label.horizontalCenter = \"middle\";\r\n\t\tthis.valueLabel = valueLabel;\r\n\r\n\t\tlet hiddenState = this.hiddenState;\r\n\t\thiddenState.properties.fill = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n\t\thiddenState.properties.opacity = 0.5;\r\n\t\thiddenState.properties.visible = true;\r\n\r\n\t\tthis.background.hiddenState.copyFrom(hiddenState);\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Invalidates all links, attached to this node.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidateLinks(): void {\r\n\t\tsuper.invalidateLinks();\r\n\t\tthis.nextInCoord = 0;\r\n\t\tthis.nextOutCoord = 0;\r\n\t\tlet chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tlet orientation = chart.orientation;\r\n\t\t\tif (this._incomingSorted) {\r\n\t\t\t\t$iter.each(this._incomingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tx = this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.nextInCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ty = this.pixelY + this.dy;\r\n\t\t\t\t\t\t\tx = this.nextInCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.endX = x;\r\n\t\t\t\t\t\tlink.endY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.fromNode) {\r\n\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = this.pixelX + this.dx - link.maxWidth;\r\n\t\t\t\t\t\t\t\tlink.startY = link.endY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.startX = link.endX;\r\n\t\t\t\t\t\t\t\tlink.startY = this.pixelY + this.dy - link.maxHeight;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// TODO is this needed ?\r\n\t\t\t\t\t\t\t$utils.used(link.gradient);\r\n\r\n\t\t\t\t\t\t\tlink.fill = dataItem.toNode.color;\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(0);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextInCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this._outgoingSorted) {\r\n\t\t\t\t$iter.each(this._outgoingSorted, (dataItem) => {\r\n\t\t\t\t\tlet link = dataItem.link;\r\n\t\t\t\t\tlink.parent = this.chart.linksContainer;\r\n\t\t\t\t\tlet value = dataItem.getWorkingValue(\"value\");\r\n\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\tlet x: number;\r\n\t\t\t\t\t\tlet y: number;\r\n\t\t\t\t\t\tlet angle: number;\r\n\r\n\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\tangle = 0;\r\n\t\t\t\t\t\t\tx = this.pixelX + this.pixelWidth + this.dx - 1;\r\n\t\t\t\t\t\t\ty = this.nextOutCoord + this.pixelY + this.dy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tangle = 90;\r\n\t\t\t\t\t\t\tx = this.nextOutCoord + this.pixelX + this.dx;\r\n\t\t\t\t\t\t\ty = this.pixelY + this.pixelHeight + this.dy - 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlink.startX = x;\r\n\t\t\t\t\t\tlink.startY = y;\r\n\t\t\t\t\t\tlink.startAngle = angle;\r\n\t\t\t\t\t\tlink.endAngle = angle;\r\n\t\t\t\t\t\tlink.gradient.rotation = angle;\r\n\r\n\t\t\t\t\t\tlink.linkWidth = value * this.chart.valueHeight;\r\n\r\n\t\t\t\t\t\tif (!dataItem.toNode) {\r\n\t\t\t\t\t\t\tif (orientation == \"horizontal\") {\r\n\t\t\t\t\t\t\t\tlink.maxWidth = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = this.pixelX + link.maxWidth + this.dx;\r\n\t\t\t\t\t\t\t\tlink.endY = link.startY;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tlink.maxHeight = 200;\r\n\t\t\t\t\t\t\t\tlink.endX = link.startX;\r\n\t\t\t\t\t\t\t\tlink.endY = this.pixelY + link.maxHeight + this.dy;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlink.opacity = this.opacity;\r\n\r\n\t\t\t\t\t\t\tlet stop = link.gradient.stops.getIndex(1);\r\n\t\t\t\t\t\t\tif (stop) {\r\n\t\t\t\t\t\t\t\tif (link.colorMode == \"gradient\") {\r\n\t\t\t\t\t\t\t\t\tstop.color = this.color;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tstop.opacity = 0;\r\n\t\t\t\t\t\t\t\tlink.fill = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.stroke = link.gradient;\r\n\t\t\t\t\t\t\t\tlink.gradient.validate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//link.validate();\r\n\t\t\t\t\t\tthis.nextOutCoord += link.linkWidth;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.positionBullet(this.nameLabel);\r\n\t\tthis.positionBullet(this.valueLabel);\r\n\t}\r\n\r\n\t/**\r\n\t * Positions the bullet so it is centered within the node element.\r\n\t *\r\n\t * @param bullet  Target bullet\r\n\t */\r\n\tprotected positionBullet(bullet: LabelBullet) {\r\n\t\tif (bullet) {\r\n\t\t\tbullet.x = this.measuredWidth * bullet.locationX;\r\n\t\t\tbullet.y = this.measuredHeight * bullet.locationY;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A level node is displayed at. (0 - ...)\r\n\t *\r\n\t * Levels are measured from left to right.\r\n\t *\r\n\t * The nodes in the left-most column will have `level = 0`.\r\n\t *\r\n\t * Nodes in second column - `level = 1`, etc.\r\n\t *\r\n\t * @param value  Level\r\n\t */\r\n\tpublic set level(value: number) {\r\n\t\tthis.setPropertyValue(\"level\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\treturn this.getPropertyValue(\"level\");\r\n\t}\r\n\r\n\t/**\r\n\t * Copies properties and labels from another [[SankeyNode]].\r\n\t *\r\n\t * @param source  Source node\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.nameLabel.copyFrom(source.nameLabel);\r\n\t\tthis.valueLabel.copyFrom(source.valueLabel);\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SankeyNode\"] = SankeyNode;\r\n"]}