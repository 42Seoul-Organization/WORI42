{"version":3,"file":"CurveStepLineSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/timeline/CurveStepLineSeries.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,eAAe,EAAE,uBAAuB,EAA4G,MAAM,mBAAmB,CAAC;AAKvL,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,iDAAiD;AACjD,OAAO,KAAK,KAAK,MAAM,uBAAuB,CAAC;AAG/C;;;;;GAKG;AAEH;;;;GAIG;AACH;IAAiD,+CAAuB;IAOvE;;OAEG;IACH;QAAA,YACC,iBAAO,SAGP;QAFA,KAAI,CAAC,SAAS,GAAG,6BAA6B,CAAC;QAC/C,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAEF,kCAAC;AAAD,CAAC,AAhBD,CAAiD,uBAAuB,GAgBvE;;AAiDD;;;;;GAKG;AAEH;;;;;;;GAOG;AACH;IAAyC,uCAAe;IAuCvD;;OAEG;IACH;QAAA,YACC,iBAAO,SAOP;QANA,KAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC;QAEvC,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAED;;;;;OAKG;IACO,4CAAc,GAAxB;QACC,OAAO,IAAI,2BAA2B,EAAE,CAAC;IAC1C,CAAC;IAED;;;;;;;;;;OAUG;IACO,uCAAS,GAAnB,UAAoB,MAAgB,EAAE,QAA2B,EAAE,MAAc,EAAE,MAAc,EAAE,SAAmB;QAErH,IAAI,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACnC,IAAI,SAAS,EAAE;YACd,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;YACjC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;SACjC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,IAAI,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAE9C,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;QACpD,IAAI,MAAM,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC;QAEpD,IAAI,SAAS,GAAuB,KAAK,CAAC,QAAQ,CAAC;QAEnD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;YAChC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;YAE/G,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,aAAa,CAAC,GAAG,KAAK,CAAC;YAEzD,yCAAyC;YACzC,qEAAqE;YACrE,IAAI,IAAI,CAAC,KAAK,YAAY,QAAQ,EAAE;gBACnC,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;gBAC3B,IAAI,SAAS,EAAE;oBACd,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBACtD,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;oBAE3C,IAAI,YAAY,EAAE;wBACjB,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;wBAC5C,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;wBAC1C,IAAI,QAAQ,GAAG,WAAW,GAAG,YAAY,EAAE;4BAC1C,WAAW,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;yBAC3D;qBACD;iBACD;qBACI;oBACJ,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBACtD,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;oBAE3C,IAAI,YAAY,EAAE;wBACjB,IAAI,QAAQ,GAAG,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;wBAC5C,IAAI,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,CAAA;wBAC1C,IAAI,QAAQ,GAAG,WAAW,GAAG,YAAY,EAAE;4BAC1C,WAAW,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,GAAG,YAAY,GAAG,CAAC,CAAC;yBAC3D;qBACD;iBACD;aACD;YAED,IAAI,SAAS,EAAE;gBACd,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;oBAC3D,IAAI,CAAC,GAAG,WAAW,EAAE;wBACpB,CAAC,GAAG,WAAW,CAAC;qBAChB;oBACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACpF;gBACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC9F;iBACI;gBACJ,KAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;oBAC3D,IAAI,CAAC,GAAG,WAAW,EAAE;wBACpB,CAAC,GAAG,WAAW,CAAC;qBAChB;oBACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACpF;gBAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC9F;SACD;aACI;YACJ,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACnG,IAAI,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEtF,IAAI,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;gBACrC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;gBACrI,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,GAAG,gBAAgB,CAAC,GAAG,KAAK,CAAC,CAAC;gBAE5D,IAAI,SAAS,GAAG,gBAAgB,EAAE;oBACjC,KAAK,IAAI,CAAC,GAAG,gBAAgB,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;wBAC5D,IAAI,CAAC,GAAG,SAAS,EAAE;4BAClB,CAAC,GAAG,SAAS,CAAC;yBACd;wBACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC1D;iBACD;qBACI,IAAI,SAAS,GAAG,gBAAgB,EAAE;oBACtC,KAAK,IAAI,CAAC,GAAG,gBAAgB,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE;wBAC5D,IAAI,CAAC,GAAG,SAAS,EAAE;4BAClB,CAAC,GAAG,SAAS,CAAC;yBACd;wBACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC1D;iBACD;aACD;YAED,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC;YACpG,IAAI,UAAU,EAAE;gBACf,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACxB;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC;YAChG,IAAI,QAAQ,EAAE;gBACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtB;YAED,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;SACnC;IACF,CAAC;IAYD,sBAAW,8CAAa;QAIxB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QAC/C,CAAC;QAnBD,+CAA+C;QAC/C,sCAAsC;QACtC,IAAI;QAEJ;;;;;WAKG;aACH,UAAyB,KAAa;YACrC,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC;;;OAAA;IAeD,sBAAW,4CAAW;QAItB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC;QAfD;;;;;WAKG;aACH,UAAuB,KAAa;YACnC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAQF,0BAAC;AAAD,CAAC,AA/ND,CAAyC,eAAe,GA+NvD;;AAED;;;;;GAKG;AACH,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,GAAG,mBAAmB,CAAC;AACxE,QAAQ,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,GAAG,2BAA2B,CAAC","sourcesContent":["/**\r\n * Curve step line series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { CurveLineSeries, CurveLineSeriesDataItem, ICurveLineSeriesAdapters, ICurveLineSeriesDataFields, ICurveLineSeriesEvents, ICurveLineSeriesProperties } from \"./CurveLineSeries\";\r\nimport { AxisRendererCurveX } from \"./AxisRendererCurveX\";\r\nimport { StepLineSeriesSegment } from \"../../charts/series/StepLineSeriesSegment\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { CurveChart } from \"./CurveChart\";\r\nimport { DateAxis } from \"../../charts/axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n//import * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CurveStepLineSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CurveStepLineSeriesDataItem extends CurveLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: CurveStepLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurveStepLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CurveStepLineSeries]].\r\n */\r\nexport interface ICurveStepLineSeriesDataFields extends ICurveLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[CurveStepLineSeries]].\r\n */\r\nexport interface ICurveStepLineSeriesProperties extends ICurveLineSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative location in cell where step should start.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Relative location in cell where step should end.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tendLocation?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[CurveStepLineSeries]].\r\n */\r\nexport interface ICurveStepLineSeriesEvents extends ICurveLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CurveStepLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICurveStepLineSeriesAdapters extends ICurveLineSeriesAdapters, ICurveStepLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a radar graph.\r\n *\r\n * @see {@link ICurveStepLineSeriesEvents} for a list of available Events\r\n * @see {@link ICurveStepLineSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class CurveStepLineSeries extends CurveLineSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ICurveStepLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICurveStepLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICurveStepLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICurveStepLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: CurveStepLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: CurveChart;\r\n\r\n\t/**\r\n\t * Defines type for segment.\r\n\t */\r\n\tpublic _segment: StepLineSeriesSegment;\r\n\r\n\tprotected _previousPosition: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CurveStepLineSeries\";\r\n\r\n\t\tthis.startLocation = 0;\r\n\t\tthis.endLocation = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CurveStepLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * [addPoints description]\r\n\t *\r\n\t * @ignore\r\n\t * @todo Description\r\n\t * @param points    [description]\r\n\t * @param dataItem  [description]\r\n\t * @param xField    [description]\r\n\t * @param yField    [description]\r\n\t * @param backwards [description]\r\n\t */\r\n\tprotected addPoints(points: IPoint[], dataItem: this[\"_dataItem\"], xField: string, yField: string, backwards?: boolean): void {\r\n\r\n\t\tlet startLocation = this.startLocation;\r\n\t\tlet endLocation = this.endLocation;\r\n\t\tif (backwards) {\r\n\t\t\tstartLocation = this.endLocation;\r\n\t\t\tendLocation = this.startLocation;\r\n\t\t}\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\r\n\t\tlet previousPosition = this._previousPosition;\r\n\r\n\t\tlet rangeX = { start: xAxis.start, end: xAxis.end };\r\n\t\tlet rangeY = { start: yAxis.start, end: yAxis.end };\r\n\r\n\t\tlet xRenderer = <AxisRendererCurveX>xAxis.renderer;\r\n\r\n\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\tlet count = Math.ceil(this.xAxis.axisLength / xRenderer.precisionStep / (this.endIndex - this.startIndex)) + 2;\r\n\r\n\t\t\tlet step = Math.abs(endLocation - startLocation) / count;\r\n\r\n\t\t\t// this solves issues with missing values\r\n\t\t\t// this is not done for when y is date axis due to unlikely situation\r\n\t\t\tif (this.xAxis instanceof DateAxis) {\r\n\t\t\t\tlet index = dataItem.index;\r\n\t\t\t\tif (backwards) {\r\n\t\t\t\t\tlet nextDataItem = this.dataItems.getIndex(index - 1);\r\n\t\t\t\t\tlet baseDuration = this.xAxis.baseDuration;\r\n\r\n\t\t\t\t\tif (nextDataItem) {\r\n\t\t\t\t\t\tlet nextTime = nextDataItem.dateX.getTime();\r\n\t\t\t\t\t\tlet currentTime = dataItem.dateX.getTime()\r\n\t\t\t\t\t\tif (nextTime < currentTime - baseDuration) {\r\n\t\t\t\t\t\t\tendLocation -= (currentTime - nextTime) / baseDuration - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextDataItem = this.dataItems.getIndex(index + 1);\r\n\t\t\t\t\tlet baseDuration = this.xAxis.baseDuration;\r\n\r\n\t\t\t\t\tif (nextDataItem) {\r\n\t\t\t\t\t\tlet nextTime = nextDataItem.dateX.getTime();\r\n\t\t\t\t\t\tlet currentTime = dataItem.dateX.getTime()\r\n\t\t\t\t\t\tif (nextTime > currentTime + baseDuration) {\r\n\t\t\t\t\t\t\tendLocation += (nextTime - currentTime) / baseDuration - 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (backwards) {\r\n\t\t\t\tfor (let i = startLocation; i >= endLocation; i = i - step) {\r\n\t\t\t\t\tif (i < endLocation) {\r\n\t\t\t\t\t\ti = endLocation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints.push(this.getPoint(dataItem, xField, yField, i, dataItem.locations[yField]));\r\n\t\t\t\t}\r\n\t\t\t\tpoints.push(this.getPoint(dataItem, xField, yField, endLocation, dataItem.locations[yField]));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tfor (let i = startLocation; i <= endLocation; i = i + step) {\r\n\t\t\t\t\tif (i > endLocation) {\r\n\t\t\t\t\t\ti = endLocation;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpoints.push(this.getPoint(dataItem, xField, yField, i, dataItem.locations[yField]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpoints.push(this.getPoint(dataItem, xField, yField, endLocation, dataItem.locations[yField]));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet positionX = xAxis.getPositionX(dataItem, xField, dataItem.locations[xField], \"valueX\", rangeX);\r\n\t\t\tlet positionY = yAxis.getPositionY(dataItem, yField, startLocation, \"valueY\", rangeY);\r\n\r\n\t\t\tif ($type.isNumber(previousPosition)) {\r\n\t\t\t\tlet count = Math.ceil((xAxis.axisLength / xRenderer.precisionStep) * (positionX - previousPosition) / (xAxis.end - xAxis.start)) + 2;\r\n\t\t\t\tlet step = Math.abs((positionX - previousPosition) / count);\r\n\r\n\t\t\t\tif (positionX > previousPosition) {\r\n\t\t\t\t\tfor (let i = previousPosition; i <= positionX; i = i + step) {\r\n\t\t\t\t\t\tif (i > positionX) {\r\n\t\t\t\t\t\t\ti = positionX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpoints.push(xAxis.renderer.positionToPoint(i, positionY));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (positionX < previousPosition) {\r\n\t\t\t\t\tfor (let i = previousPosition; i >= positionX; i = i - step) {\r\n\t\t\t\t\t\tif (i < positionX) {\r\n\t\t\t\t\t\t\ti = positionX;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpoints.push(xAxis.renderer.positionToPoint(i, positionY));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet startPoint = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], startLocation);\r\n\t\t\tif (startPoint) {\r\n\t\t\t\tpoints.push(startPoint);\r\n\t\t\t}\r\n\t\t\tlet endPoint = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], endLocation);\r\n\t\t\tif (endPoint) {\r\n\t\t\t\tpoints.push(endPoint);\r\n\t\t\t}\r\n\r\n\t\t\tthis._previousPosition = positionX;\r\n\t\t}\r\n\t}\r\n\r\n\t//protected createSegment(): this[\"_segment\"] {\r\n\t//\treturn new StepLineSeriesSegment();\r\n\t//}\t\r\n\r\n\t/**\r\n\t * Relative location in cell where step should start.\r\n\t *\r\n\t * @default 0\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"startLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location in cell where step should end.\r\n\t *\r\n\t * @default 1\r\n\t * @param value Location (0-1)\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tthis.setPropertyValue(\"endLocation\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CurveStepLineSeries\"] = CurveStepLineSeries;\r\nregistry.registeredClasses[\"CurveStepLineSeriesDataItem\"] = CurveStepLineSeriesDataItem;\r\n"]}