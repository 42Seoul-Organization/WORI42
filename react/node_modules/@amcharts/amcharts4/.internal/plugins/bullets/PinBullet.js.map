{"version":3,"file":"PinBullet.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/bullets/PinBullet.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"../../charts/elements/Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { PointedCircle } from \"./PointedCircle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Image } from \"../../core/elements/Image\";\r\nimport { Label } from \"../../core/elements/Label\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[PinBullet]].\r\n */\r\nexport interface IPinBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[PinBullet]].\r\n */\r\nexport interface IPinBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters.\r\n * \r\n * Includes both the [[Adapter]] definitions and properties\r\n * \r\n * @see {@link Adapter}\r\n */\r\nexport interface IPinBulletAdapters extends IBulletAdapters, IPinBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a pin-shaped bullet with an optional text label and/or image inside\r\n * it.\r\n *\r\n * The background/body of the flag is a [[PointedCircle]] element. Most of\r\n * its the visual appearance is configured via `background` property.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * Example:\r\n * \r\n * ```TypeScript\r\n * let series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * let pinBullet = series.bullets.push(new am4plugins_bullets.PinBullet());\r\n * pinBullet.poleHeight = 15;\r\n * pinBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JavaScript\r\n * var series = chart.series.push(new am4charts.LineSeries());\r\n * // ...\r\n * var pinBullet = series.bullets.push(new am4plugins_bullets.PinBullet());\r\n * pinBullet.poleHeight = 15;\r\n * pinBullet.label.text = \"{valueY}\";\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     // ...\r\n *     \"bullets\": [{\r\n *       \"type\": \"PinBullet\",\r\n *       \"poleHeight\": 15,\r\n *       \"label\": {\r\n *         \"text\": \"{valueY}\"\r\n *       }\r\n *     }]\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.5.7\r\n * @see {@link https://www.amcharts.com/docs/v4/tutorials/plugin-bullets/} for usage instructions.\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n */\r\nexport class PinBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IPinBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPinBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPinBulletEvents;\r\n\r\n\t/**\r\n\t * A [[Circle]] element of the pin. It is used for the \"inside\" of the pin.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * A type for the background element.\r\n\t */\r\n\tpublic _background: PointedCircle;\r\n\r\n\t/**\r\n\t * Image element.\r\n\t */\r\n\tprotected _image: Image;\r\n\r\n\t/**\r\n\t * Label element.\r\n\t */\r\n\tprotected _label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"PinBullet\";\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.isMeasured = false;\r\n\t\tcircle.fill = interfaceColors.getFor(\"background\");\r\n\t\tcircle.radius = percent(85);\r\n\r\n\t\tthis.circle = circle;\r\n\t\tlet background = this.background;\r\n\t\tbackground.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tbackground.fillOpacity = 1;\r\n\t\tbackground.pointerBaseWidth = 20;\r\n\t\tbackground.pointerLength = 20;\r\n\t\tbackground.radius = 25;\r\n\t\tbackground.events.on(\"propertychanged\", this.invalidate, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet background = this.background;\r\n\r\n\t\tlet px = background.pointerX;\r\n\t\tlet py = background.pointerY;\r\n\t\tlet pl = background.pointerLength;\r\n\t\tlet pw = background.pointerBaseWidth;\r\n\t\tlet pa = background.pointerAngle + 180;\r\n\t\tlet r = background.radius;\r\n\r\n\t\tif (pw > 2 * r) {\r\n\t\t\tpw = 2 * r;\r\n\t\t}\r\n\r\n\t\tlet da = $math.DEGREES * Math.atan(pw / 2 / pl);\r\n\r\n\t\tif (da <= 0.001) {\r\n\t\t\tda = 0.001;\r\n\t\t}\r\n\r\n\t\tlet a1 = pa - da;\r\n\t\tlet a2 = pa + da;\r\n\r\n\t\tlet p1 = { x: px + pl * $math.cos(a1), y: py + pl * $math.sin(a1) };\r\n\t\tlet p2 = { x: px + pl * $math.cos(a2), y: py + pl * $math.sin(a2) };\r\n\r\n\t\tlet x1 = p1.x;\r\n\t\tlet x2 = p2.x;\r\n\r\n\t\tlet y1 = p1.y;\r\n\t\tlet y2 = p2.y;\r\n\r\n\t\tlet radsq = r * r;\r\n\t\tlet q = Math.sqrt(((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1)));\r\n\r\n\t\tlet x3 = (x1 + x2) / 2;\r\n\t\tlet cx = x3 - Math.sqrt(radsq - ((q / 2) * (q / 2))) * ((y1 - y2) / q);\r\n\r\n\t\tlet y3 = (y1 + y2) / 2;\r\n\t\tlet cy = y3 - Math.sqrt(radsq - ((q / 2) * (q / 2))) * ((x2 - x1) / q);\r\n\r\n\t\tif(this.circle){\r\n\t\t\tlet circleRadius = this.circle.radius;\r\n\r\n\t\t\tif (circleRadius instanceof Percent) {\r\n\t\t\t\tthis.circle.width = r * 2;\r\n\t\t\t\tthis.circle.height = r * 2;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet image = this.image;\r\n\t\tif (image) {\r\n\t\t\timage.x = cx;\r\n\t\t\timage.y = cy;\r\n\t\t\timage.width = r * 2;\r\n\t\t\timage.height = r * 2;\r\n\t\t\timage.element.attr({preserveAspectRatio:\"xMidYMid slice\"})\r\n\t\t\tif(this.circle){\r\n\t\t\t\tthis.circle.scale = 1 / image.scale;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(this.circle){\r\n\t\t\t\tthis.circle.x = cx;\r\n\t\t\t\tthis.circle.y = cy;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet label = this.label;\r\n\t\tif (label) {\r\n\t\t\tlabel.x = cx;\r\n\t\t\tlabel.y = cy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * An element of type [[Image]] to show inside pin's circle.\r\n\t * \r\n\t * @param  image  Image\r\n\t */\r\n\tpublic set image(image: Image) {\r\n\t\tif (image) {\r\n\t\t\tthis._image = image;\r\n\t\t\tthis._disposers.push(image);\r\n\t\t\timage.shouldClone = false;\r\n\t\t\timage.parent = this;\r\n\t\t\timage.horizontalCenter = \"middle\";\r\n\t\t\timage.verticalCenter = \"middle\";\r\n\r\n\t\t\tif (this.circle) {\r\n\t\t\t\timage.mask = this.circle;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image\r\n\t */\r\n\tpublic get image(): Image {\r\n\t\treturn this._image;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Label]] element for displaying within flag.\r\n\t *\r\n\t * Use it's `text` property to set actual text, e.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * pinBullet.text = \"Hello\";\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * pinBullet.text = \"Hello\";\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     // ...\r\n\t *     \"bullets\": [{\r\n\t *       \"type\": \"PinBullet\",\r\n\t *       \"label\": {\r\n\t *         \"text\": \"Hello\"\r\n\t *       }\r\n\t *     }]\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t * @param  label  Label\r\n\t */\r\n\tpublic set label(label: Label) {\r\n\t\tif (label) {\r\n\t\t\tthis._label = label;\r\n\t\t\tthis._disposers.push(label);\r\n\t\t\tlabel.shouldClone = false;\r\n\t\t\tlabel.parent = this;\r\n\t\t\tlabel.horizontalCenter = \"middle\";\r\n\t\t\tlabel.verticalCenter = \"middle\";\r\n\t\t\tlabel.textAlign = \"middle\";\r\n\t\t\tlabel.dy = 2;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Label\r\n\t */\r\n\tpublic get label(): Label {\r\n\t\treturn this._label;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[PinBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (source.image) {\r\n\t\t\tif (!this._image) {\r\n\t\t\t\tthis.image = source.image.clone();\r\n\t\t\t}\r\n\t\t\tthis._image.copyFrom(source.image);\r\n\t\t}\r\n\t\tif(this.circle && source.circle){\r\n\t\t\tthis.circle.copyFrom(source.circle);\r\n\t\t}\r\n\r\n\t\tif (source.label) {\r\n\t\t\tif (!this._label) {\r\n\t\t\t\tthis.label = source.label.clone();\r\n\t\t\t}\r\n\t\t\tthis._label.copyFrom(source.label);\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a background element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new PointedCircle();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PinBullet\"] = PinBullet;\r\n"]}