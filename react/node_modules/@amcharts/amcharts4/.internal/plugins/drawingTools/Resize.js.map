{"version":3,"file":"Resize.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/drawingTools/Resize.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Functionality for drawing paths.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, AMEvent, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { Optional } from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Resize]].\r\n */\r\nexport interface IResizeProperties extends IContainerProperties {\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Resize]].\r\n */\r\nexport interface IResizeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Resize]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IResizeAdapters extends IContainerAdapters, IResizeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Resize class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IResizeEvents} for a list of available events\r\n * @see {@link IResizeAdapters} for a list of available Adapters\r\n */\r\nexport class Resize extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IResizeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IResizeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IResizeEvents;\r\n\r\n\r\n\tpublic isResizing: boolean = false;\r\n\r\n\tpublic _sprite: Sprite;\r\n\r\n\tprotected _changeDisposer: IDisposer;\r\n\r\n\tpublic tlGrip: Rectangle;\r\n\tpublic trGrip: Rectangle;\r\n\tpublic blGrip: Rectangle;\r\n\tpublic brGrip: Rectangle;\r\n\r\n\tpublic constrainProportions: boolean = false;\r\n\r\n\tpublic rectangle: Rectangle;\r\n\r\n\tprotected _startWidth:number;\r\n\tprotected _startHeight:number;\r\n\r\n\tprotected _startX:number;\r\n\tprotected _startY:number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Resize\";\r\n\r\n\t\tthis.isMeasured = false;\r\n\r\n\t\t// TODO is this needed ?\r\n\t\tgetInteraction();\r\n\r\n\t\tlet color = new InterfaceColorSet().getFor(\"alternativeBackground\");\r\n\r\n\t\tlet rectangle = this.createChild(Rectangle);\r\n\r\n\t\trectangle.strokeOpacity = 1;\r\n\t\trectangle.strokeWidth = 1;\r\n\t\trectangle.strokeDasharray = \"2,2\";\r\n\t\trectangle.fillOpacity = 0;\r\n\t\trectangle.stroke = color;\r\n\t\tthis.rectangle = rectangle;\r\n\r\n\t\tlet tlGrip = this.createChild(Rectangle);\r\n\t\ttlGrip.width = 10;\r\n\t\ttlGrip.height = 10;\r\n\t\ttlGrip.fill = color;\r\n\t\ttlGrip.verticalCenter = \"middle\";\r\n\t\ttlGrip.horizontalCenter = \"middle\";\r\n\t\ttlGrip.draggable = true;\r\n\t\tthis.tlGrip = tlGrip;\r\n\r\n\t\ttlGrip.events.on(\"drag\", this.handleGrips, this, true);\r\n\t\ttlGrip.events.on(\"dragstart\", this.handleStartResize, this, true);\r\n\r\n\t\tthis.trGrip = tlGrip.clone();\r\n\t\tthis.trGrip.parent = this;\r\n\r\n\t\tthis.brGrip = tlGrip.clone();\r\n\t\tthis.brGrip.parent = this;\r\n\r\n\t\tthis.blGrip = tlGrip.clone();\r\n\t\tthis.blGrip.parent = this;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic set sprite(sprite: Optional<Sprite>) {\r\n\t\tthis._sprite = sprite;\r\n\t\tif (sprite) {\r\n\t\t\tthis.toFront();\r\n\t\t\tthis.visible = true;\r\n\t\t\tthis.updatePosition();\r\n\t\t\tthis._changeDisposer = sprite.events.on(\"transformed\", this.updatePosition, this, false);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.visible = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get sprite(): Optional<Sprite> {\r\n\t\treturn this._sprite;\r\n\t}\r\n\r\n\tpublic updatePosition() {\r\n\t\tlet sprite = this._sprite;\r\n\t\tif (sprite) {\r\n\r\n\t\t\tlet w = sprite.measuredWidth;\r\n\t\t\tlet h = sprite.measuredHeight;\r\n\r\n\t\t\tthis.rectangle.width = w;\r\n\t\t\tthis.rectangle.height = h;\r\n\t\t\tthis.rectangle.x = 0;\r\n\t\t\tthis.rectangle.y = 0;\r\n\r\n\t\t\tlet point = $utils.spritePointToSprite({ x: sprite.pixelX + sprite.maxLeft, y: sprite.pixelY + sprite.maxTop }, sprite.parent, this.parent);\r\n\t\t\tthis.x = point.x;\r\n\t\t\tthis.y = point.y;\r\n\r\n\t\t\tthis.tlGrip.x = 0;\r\n\t\t\tthis.tlGrip.y = 0;\r\n\r\n\t\t\tthis.trGrip.x = w;\r\n\t\t\tthis.trGrip.y = 0;\r\n\r\n\t\t\tthis.brGrip.x = w;\r\n\t\t\tthis.brGrip.y = h;\r\n\r\n\t\t\tthis.blGrip.x = 0;\r\n\t\t\tthis.blGrip.y = h;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected handleStartResize(){\r\n\t\tthis._startWidth = this.sprite.measuredWidth;\r\n\t\tthis._startHeight = this.sprite.measuredHeight;\r\n\t\tthis._startX = this.sprite.pixelX;\r\n\t\tthis._startY = this.sprite.pixelY;\r\n\t}\r\n\r\n\tprotected handleGrips(event: AMEvent<Sprite, ISpriteEvents>[\"drag\"]) {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Resize\"] = Resize;\r\n"]}