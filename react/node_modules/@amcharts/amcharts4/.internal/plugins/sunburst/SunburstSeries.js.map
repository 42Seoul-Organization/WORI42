{"version":3,"file":"SunburstSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/sunburst/SunburstSeries.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { PieSeries, PieSeriesDataItem, IPieSeriesDataFields, IPieSeriesProperties, IPieSeriesAdapters, IPieSeriesEvents } from \"../../charts/series/PieSeries\";\r\nimport { Sunburst, SunburstDataItem } from \"./Sunburst\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[SunburstSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.1.6\r\n */\r\nexport class SunburstSeriesDataItem extends PieSeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: SunburstSeries;\r\n\r\n\t/**\r\n\t * A reference to a component of a data item.\r\n\t */\r\n\tpublic component: SunburstSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SunburstSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * A corresponding data item from the Sunburst.\r\n\t *\r\n\t * @readonly\r\n\t * @return Data item\r\n\t */\r\n\tpublic get sunburstDataItem(): SunburstDataItem {\r\n\t\treturn <SunburstDataItem>this._dataContext;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hide the data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param toValue   Target value for animation\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet sunburstDataItem = this.sunburstDataItem;\r\n\t\tif (sunburstDataItem && sunburstDataItem.series) {\r\n\t\t\tsunburstDataItem.series.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.hide(duration, delay, toValue, fields);\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn super.hide(duration, delay, toValue, fields);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Show hidden data item (and corresponding visual elements).\r\n\t *\r\n\t * @param duration  Duration (ms)\r\n\t * @param delay     Delay hiding (ms)\r\n\t * @param fields    Fields to animate while hiding\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tlet sunburstDataItem = this.sunburstDataItem;\r\n\r\n\t\tif (sunburstDataItem && sunburstDataItem.series) {\r\n\t\t\tsunburstDataItem.series.dataItems.each((dataItem) => {\r\n\t\t\t\tdataItem.show(duration, delay, fields);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn super.show(duration, delay, fields);\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = 0;\r\n\t\tlet sbDataItem = this.sunburstDataItem;\r\n\t\tif (sbDataItem) {\r\n\t\t\tif (!sbDataItem.series) {\r\n\t\t\t\tvalue = this.values[\"value\"].value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsbDataItem.series.dataItems.each((dataItem) => {\r\n\t\t\t\t\tlet childValue = dataItem.value;\r\n\t\t\t\t\tif ($type.isNumber(childValue)) {\r\n\t\t\t\t\t\tvalue += childValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @todo description\r\n\t * @ignore\r\n\t * @return Value\r\n\t */\r\n\tpublic getActualWorkingValue(name: string): $type.Optional<number> {\r\n\t\tlet value = 0;\r\n\t\tlet sbDataItem = this.sunburstDataItem;\r\n\r\n\t\tif (!sbDataItem.series) {\r\n\t\t\tvalue = this.values[name].workingValue;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsbDataItem.series.dataItems.each((dataItem) => {\r\n\t\t\t\tlet childValue = dataItem.getWorkingValue(name);\r\n\t\t\t\tif ($type.isNumber(childValue)) {\r\n\t\t\t\t\tvalue += childValue;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[SunburstSeries]].\r\n *\r\n * @since 4.1.6\r\n */\r\nexport interface ISunburstSeriesDataFields extends IPieSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[SunburstSeries]].\r\n *\r\n * @since 4.1.6\r\n */\r\nexport interface ISunburstSeriesProperties extends IPieSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[SunburstSeries]].\r\n *\r\n * @since 4.1.6\r\n */\r\nexport interface ISunburstSeriesEvents extends IPieSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SunburstSeries]].\r\n *\r\n * @see {@link Adapter}\r\n * @since 4.1.6\r\n */\r\nexport interface ISunburstSeriesAdapters extends IPieSeriesAdapters, ISunburstSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a [[Sunburst]] chart.\r\n *\r\n * @see {@link ISunburstSeriesEvents} for a list of available Events\r\n * @see {@link ISunburstSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sunburst/} For more information\r\n * @todo Example\r\n * @since 4.1.6\r\n * @important\r\n */\r\nexport class SunburstSeries extends PieSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: ISunburstSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISunburstSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISunburstSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISunburstSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: SunburstSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: Sunburst;\r\n\r\n\t/**\r\n\t * The level in hierarchy hierarchy series is at.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic level: number;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: SunburstDataItem;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SunburstSeries\";\r\n\r\n\t\tthis.dataFields.category = \"name\";\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"background\");\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.alignLabels = false;\r\n\t\tthis.ticks.template.disabled = true;\t\t\r\n\r\n\t\tthis.slices.template.hiddenState.properties.visible = true;\r\n\r\n\t\tlet labelTemplate = this.labels.template;\r\n\t\tlabelTemplate.relativeRotation = 90;\r\n\t\tlabelTemplate.radius = 10;\r\n\t\tlabelTemplate.inside = true;\r\n\t\tlabelTemplate.strokeOpacity = 0;\r\n\t\tlabelTemplate.fillOpacity = 1;\r\n\t\tlabelTemplate.fill = interfaceColors.getFor(\"background\");\r\n\t\tlabelTemplate.padding(0, 0, 0, 0);\r\n\t\tlabelTemplate.interactionsEnabled = false;\r\n\r\n\t\tlet sliceTemplate = this.slices.template;\r\n\t\tsliceTemplate.stroke = interfaceColors.getFor(\"background\");\r\n\t\tlet activeState = sliceTemplate.states.getKey(\"active\");\r\n\t\tif (activeState) {\r\n\t\t\tactiveState.properties.shiftRadius = 0;\r\n\t\t}\r\n\r\n\t\tthis.events.on(\"inited\", ()=>{\r\n\t\t\tthis.dataItems.each((dataItem)=>{\r\n\t\t\t\tif(dataItem.hidden){\r\n\t\t\t\t\tdataItem.hide(0);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}, undefined, false)\t\t\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new SunburstSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Processes data item.\r\n\t *\r\n\t * @param dataItem     Data item\r\n\t * @param dataContext  Raw data\r\n\t * @param index        Index of the data item\r\n\t */\r\n\tprotected processDataItem(dataItem: this[\"_dataItem\"], dataContext?: Object): void {\r\n\t\t(<SunburstDataItem>dataContext).seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes\r\n\t\tsuper.processDataItem(dataItem, dataContext);\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemValueChange description]\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Description\r\n\t */\r\n\tpublic handleDataItemValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemValueChange(dataItem, name);\r\n\t\tdataItem.sunburstDataItem.setValue(name, dataItem.getValue(name));\r\n\t}\r\n\r\n\t/**\r\n\t * [handleDataItemWorkingValueChange description]\r\n\t *\r\n\t * @ignore\r\n\t * @todo Description\r\n\t * @param {this[\"_dataItem\"]} dataItem [description]\r\n\t * @param {string}            name     [description]\r\n\t */\r\n\tpublic handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n\t\tsuper.handleDataItemWorkingValueChange(dataItem, name);\r\n\t\t//dataItem.sunburstDataItem.setWorkingValue(name, dataItem.getWorkingValue(name), 0);\r\n\r\n\t\tlet sunburstDataItem = dataItem.sunburstDataItem.parent.parent;\r\n\t\twhile (sunburstDataItem != undefined) {\r\n\t\t\tsunburstDataItem.series.invalidateProcessedData();\r\n\t\t\tsunburstDataItem = sunburstDataItem.parent;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SunburstSeries\"] = SunburstSeries;\r\nregistry.registeredClasses[\"SunburstSeriesDataItem\"] = SunburstSeriesDataItem;\r\n"]}