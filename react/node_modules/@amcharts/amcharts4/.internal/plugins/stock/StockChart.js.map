{"version":3,"file":"StockChart.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/stock/StockChart.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Module for building 3D serial charts.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYChart, IXYChartProperties, IXYChartDataFields, IXYChartAdapters, IXYChartEvents, XYChartDataItem } from \"../../charts/types/XYChart\";\r\nimport { XYSeries } from \"../../charts/series/XYSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { StockPanel } from \"./StockPanel\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { Axis } from \"../../charts/axes/Axis\";\r\nimport { AxisRenderer } from \"../../charts/axes/AxisRenderer\";\r\nimport { Legend } from \"../../charts/Legend\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[StockChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class StockChartDataItem extends XYChartDataItem {\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StockChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[StockChart]].\r\n */\r\nexport interface IStockChartDataFields extends IXYChartDataFields { }\r\n\r\n/**\r\n * Defines available properties for [[StockChart]].\r\n */\r\nexport interface IStockChartProperties extends IXYChartProperties { }\r\n\r\n/**\r\n * Defines events for [[StockChart]].\r\n */\r\nexport interface IStockChartEvents extends IXYChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StockChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStockChartAdapters extends IXYChartAdapters, IStockChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a 3D XY chart.\r\n *\r\n * @see {@link IStockChartEvents} for a list of available Events\r\n * @see {@link IStockChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation\r\n * @important\r\n */\r\nexport class StockChart extends XYChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IStockChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStockChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStockChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStockChartEvents;\r\n\r\n\tprotected _panels: List<StockPanel>\r\n\r\n\tpublic panelsContainer: Container;\r\n\r\n\tprotected _plotMask:Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"StockChart\";\r\n\r\n\t\tlet panelsContainer = this.yAxesAndPlotContainer.createChild(Container);\r\n\t\tpanelsContainer.isMeasured = false;\r\n\t\tpanelsContainer.layout = \"vertical\";\r\n\t\tpanelsContainer.width = percent(100);\r\n\t\tpanelsContainer.height = percent(100);\t\t\r\n\t\tpanelsContainer.events.on(\"layoutvalidated\", this.updateMask, this, false);\r\n\t\tthis.panelsContainer = panelsContainer;\r\n\r\n\t\tthis.leftAxesContainer.parent = undefined;\r\n\t\tthis.rightAxesContainer.parent = undefined;\r\n\r\n\t\tthis.zoomOutButton.disabled = true;\r\n\r\n\t\tthis._plotMask = panelsContainer.createChild(Sprite);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t// @todo mm\r\n\tpublic get panels(): List<StockPanel> {\r\n\t\tif (!this._panels) {\r\n\t\t\tthis._panels = new List<StockPanel>();\r\n\t\t\tthis._panels.events.on(\"inserted\", this.handlePanelAdded, this, false);\r\n\t\t\tthis._panels.events.on(\"removed\", this.handlePanelRemoved, this, false);\r\n\t\t}\r\n\r\n\t\treturn this._panels;\r\n\t}\r\n\r\n\tprotected updateMask(){\r\n\t\tlet path = \"\"\r\n\t\tthis.panels.each((panel)=>{\r\n\t\t\tlet c = panel.yAxesAndPlotContainer;\r\n\t\t\tlet x = c.pixelX;\r\n\t\t\tlet y = c.pixelY;\r\n\r\n\t\t\tlet point = $utils.spritePointToSprite({x:x, y:y}, panel, this.panelsContainer);\r\n\r\n\t\t\tx = point.x;\r\n\t\t\ty = point.y;\r\n\r\n\t\t\tlet w = c.measuredWidth;\r\n\t\t\tlet h = c.measuredHeight;\t\t\t\r\n\t\t\tpath += $path.moveTo({x:x, y: y});\r\n\t\t\tpath += $path.lineTo({x:x + w, y: y});\r\n\t\t\tpath += $path.lineTo({x:x + w, y: y + h});\r\n\t\t\tpath += $path.lineTo({x:x, y: y + h});\r\n\t\t\tpath += $path.lineTo({x:x, y: y});\r\n\t\t})\r\n\r\n\t\tthis._plotMask.path = path;\r\n\t\tthis.plotContainer.mask = this._plotMask;\r\n\t}\r\n\r\n\r\n\tpublic handlePanelAdded(event: IListEvents<StockPanel>[\"inserted\"]): void {\r\n\t\tlet panel = event.newValue;\r\n\t\tpanel.chart = this;\r\n\t\tpanel.parent = this.panelsContainer;\r\n\t}\r\n\r\n\tpublic handlePanelRemoved(event: IListEvents<StockPanel>[\"removed\"]): void {\r\n\t\tlet panel = event.oldValue;\r\n\t\tthis.series.each((series)=>{\r\n\t\t\tif(panel.yAxes.indexOf(series.yAxis) != -1){\r\n\t\t\t\tthis.series.removeValue(series);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tpanel.yAxes.each((axis)=>{\r\n\t\t\tthis.yAxes.removeValue(axis);\r\n\t\t})\r\n\r\n\t\tevent.oldValue.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic handleYAxisSet(series: XYSeries) {\r\n\t\tlet panel = this.getAxisPanel(series.yAxis);\r\n\t\tif (panel) {\r\n\t\t\tseries.parent = panel.seriesContainer;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates an Axis for use with this chart, e.g. sets proper renderer\r\n\t * and containers for placement.\r\n\t *\r\n\t * @param axis  Axis\r\n\t */\r\n\tprotected processAxis(axis: Axis): void {\r\n\t\tsuper.processAxis(axis);\r\n\t\tthis.setAxisParent(axis);\r\n\t}\r\n\r\n\r\n\r\n\tprotected setAxisParent(axis: Axis) {\r\n\t\tlet panel = this.getAxisPanel(axis);\r\n\t\tif (panel) {\r\n\t\t\tif (axis.renderer.opposite) {\r\n\t\t\t\taxis.parent = panel.rightAxesContainer;\r\n\t\t\t\taxis.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\taxis.parent = panel.leftAxesContainer;\r\n\t\t\t\taxis.toFront();\r\n\t\t\t}\r\n\r\n\t\t\taxis.renderer.gridContainer.parent = panel.plotContainer;\r\n\t\t\tthis._disposers.push(axis.events.on(\"sizechanged\", this.updateXAxesMargins, this, false));\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers (re)rendering of the vertical (Y) axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param axis  Axis\r\n\t */\r\n\tpublic updateYAxis(renderer: AxisRenderer) {\r\n\t\tlet axis = renderer.axis;\r\n\t\tthis.setAxisParent(axis);\r\n\t\tif (axis.renderer) {\r\n\t\t\taxis.renderer.processRenderer();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getAxisPanel(axis: Axis) {\r\n\t\tif (this._panels) {\r\n\t\t\tlet axisPanel: StockPanel;\r\n\t\t\tthis._panels.each((panel) => {\r\n\t\t\t\tif (panel.yAxes.indexOf(axis) != -1) {\r\n\t\t\t\t\taxisPanel = panel;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn axisPanel;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.itemContainers.template.paddingTop = 0;\r\n\t\t\tlegend.itemContainers.template.paddingBottom = 0;\r\n\t\t\tlegend.valign = \"middle\";\r\n\t\t\tlegend.events.on(\"datavalidated\", this.arrangeLegendItems, this, false);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected arrangeLegendItems() {\r\n\t\tif (this.legend) {\r\n\t\t\tthis.legend.itemContainers.each((itemContainer) => {\r\n\t\t\t\tlet dataItem = itemContainer.dataItem;\r\n\t\t\t\tlet series = <XYSeries>dataItem.dataContext;\r\n\r\n\t\t\t\tlet panel = this.getAxisPanel(series.yAxis);\r\n\t\t\t\tif (panel) {\r\n\t\t\t\t\titemContainer.parent = panel.legendItemsContainer;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates margins for horizontal axes based on settings and available space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected updateXAxesMargins(): void {\r\n\r\n\t\tlet leftAxesWidth = 0;\r\n\t\tlet rightAxesWidth = 0;\r\n\r\n\t\tthis.yAxes.each((axis)=>{\r\n\t\t\tif(axis.renderer.opposite){\r\n\t\t\t\tif(axis.measuredWidth > rightAxesWidth){\r\n\t\t\t\t\trightAxesWidth = axis.measuredWidth;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(axis.measuredWidth > leftAxesWidth){\r\n\t\t\t\t\tleftAxesWidth = axis.measuredWidth;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet bottomAxesCont = this.bottomAxesContainer;\r\n\r\n\t\tif (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\tbottomAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\tbottomAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\r\n\t\tlet topAxesCont = this.topAxesContainer;\r\n\r\n\t\tif (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {\r\n\t\t\ttopAxesCont.paddingLeft = leftAxesWidth;\r\n\t\t\ttopAxesCont.paddingRight = rightAxesWidth;\r\n\t\t}\r\n\r\n\t\tthis.panels.each((panel)=>{\r\n\t\t\tpanel.leftAxesContainer.minWidth = leftAxesWidth;\r\n\t\t\tpanel.rightAxesContainer.minWidth = rightAxesWidth;\r\n\t\t\tpanel.headerContainer.paddingLeft = leftAxesWidth;\r\n\t\t\tpanel.headerContainer.paddingRight = rightAxesWidth;\r\n\t\t})\t\t\r\n\r\n\t\tthis.leftAxesContainer.minWidth = leftAxesWidth;\r\n\t\tthis.rightAxesContainer.minWidth = rightAxesWidth;\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StockChart\"] = StockChart;\r\n"]}