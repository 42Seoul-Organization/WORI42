{"version":3,"file":"StockPanel.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/stock/StockPanel.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Module that defines everything related to building StockPanels.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { CloseButton } from \"../../core/elements/CloseButton\";\r\nimport { MinimizeButton } from \"../../core/elements/MinimizeButton\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Axis } from \"../../charts/axes/Axis\";\r\nimport { AxisRendererY } from \"../../charts/axes/AxisRendererY\";\r\nimport { StockChart } from \"./StockChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[StockPanel]].\r\n */\r\nexport interface IStockPanelProperties extends IContainerProperties {\r\n\tcloseEnabled?: boolean;\r\n\r\n\tminimizeEnabled?: boolean;\r\n\r\n\tminimized?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[StockPanel]].\r\n */\r\nexport interface IStockPanelEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[StockPanel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IStockPanelAdapters extends IContainerAdapters, IStockPanelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates StockPanels.\r\n *\r\n * @see {@link IStockPanelEvents} for a list of available events\r\n * @see {@link IStockPanelAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class StockPanel extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IStockPanelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IStockPanelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IStockPanelEvents;\r\n\r\n\tpublic headerContainer: Container;\r\n\r\n\tpublic legendItemsContainer: Container;\r\n\r\n\tpublic leftAxesContainer: Container;\r\n\r\n\tpublic rightAxesContainer: Container;\r\n\r\n\tpublic yAxesAndPlotContainer: Container;\r\n\r\n\tpublic plotContainer: Container;\r\n\r\n\tpublic seriesContainer: Container;\r\n\r\n\tpublic bulletsContainer: Container;\r\n\r\n\tpublic chart: StockChart;\r\n\r\n\tprotected _title: Label;\r\n\r\n\tpublic closeButton: CloseButton;\r\n\r\n\tpublic minimizeButton: MinimizeButton;\r\n\r\n\t/**\r\n\t * Defines the type of vertical axis renderer.\r\n\t */\r\n\tpublic _yAxisRendererType: AxisRendererY;\r\n\r\n\t/**\r\n\t * A list of vertical axes.\r\n\t */\r\n\tprotected _yAxes: List<Axis<this[\"_yAxisRendererType\"]>>;\r\n\r\n\tprotected _realHeight: number | Percent;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"StockPanel\";\r\n\t\tthis.layout = \"vertical\";\r\n\r\n\t\tlet headerContainer = this.createChild(Container);\r\n//\t\theaderContainer.width = percent(100);\r\n\t\theaderContainer.layout = \"horizontal\";\r\n\t\theaderContainer.paddingTop = 12;\r\n\t\theaderContainer.paddingBottom = 6;\r\n\t\theaderContainer.background.fillOpacity = 1;\r\n\t\theaderContainer.background.fill = new InterfaceColorSet().getFor(\"background\");\r\n\t\tthis.headerContainer = headerContainer;\r\n\r\n\t\tlet legendItemsContainer = headerContainer.createChild(Container);\r\n\t\tlegendItemsContainer.layout = \"grid\";\r\n\t\tlegendItemsContainer.valign = \"middle\";\r\n\t\t//legendItemsContainer.contentAlign = \"right\";\r\n\r\n\t\tthis._disposers.push(headerContainer.events.on(\"over\", (event) => {\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (chart && chart.cursor) {\r\n\t\t\t\tchart.cursor.__disabled = true;\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\tthis._disposers.push(headerContainer.events.on(\"out\", (event) => {\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (chart && chart.cursor) {\r\n\t\t\t\tchart.cursor.__disabled = false;\r\n\t\t\t}\r\n\t\t}))\r\n\r\n\t\tthis.legendItemsContainer = legendItemsContainer;\r\n\r\n\t\tlet axesContainer = this.createChild(Container);\r\n\t\taxesContainer.width = percent(100);\r\n\t\taxesContainer.height = percent(100);\r\n\t\taxesContainer.layout = \"horizontal\";\r\n\t\tthis.yAxesAndPlotContainer = axesContainer;\r\n\r\n\t\tlet leftAxesContainer = axesContainer.createChild(Container);\r\n\t\tleftAxesContainer.height = percent(100);\r\n\t\tthis.leftAxesContainer = leftAxesContainer;\r\n\r\n\t\tlet plotContainer = axesContainer.createChild(Container);\r\n\t\tplotContainer.height = percent(100);\r\n\t\tplotContainer.width = percent(100);\r\n\t\tthis.plotContainer = plotContainer;\r\n\r\n\t\tlet seriesContainer = plotContainer.createChild(Container);\r\n\t\tthis.seriesContainer = seriesContainer;\r\n\r\n\t\tlet bulletsContainer = plotContainer.createChild(Container);\r\n\t\tthis.bulletsContainer = bulletsContainer;\r\n\r\n\t\tlet rightAxesContainer = axesContainer.createChild(Container);\r\n\t\trightAxesContainer.height = percent(100);\r\n\t\tthis.rightAxesContainer = rightAxesContainer;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of vertical (Y) axes.\r\n\t *\r\n\t * @return List of axes\r\n\t */\r\n\tpublic get yAxes(): List<Axis<this[\"_yAxisRendererType\"]>> {\r\n\t\tif (!this._yAxes) {\r\n\t\t\tthis._yAxes = new List<Axis<this[\"_yAxisRendererType\"]>>();\r\n\t\t\tthis._yAxes.events.on(\"inserted\", this.handleYAxisAdded, this, false);\r\n\t\t\tthis._yAxes.events.on(\"removed\", this.handleYAxisRemoved, this, false);\r\n\t\t}\r\n\r\n\t\treturn this._yAxes;\r\n\t}\r\n\r\n\tpublic handleYAxisAdded(event: IListEvents<Axis>[\"inserted\"]): void {\r\n\t\tif (this.chart) {\r\n\t\t\tlet axis = event.newValue;\r\n\t\t\tthis.chart.yAxes.push(axis);\r\n\t\t\taxis.renderer.inside = true;\r\n\t\t\taxis.renderer.baseGrid.disabled = true;\r\n\t\t\taxis.renderer.labels.template.verticalCenter = \"bottom\";\r\n\t\t\taxis.renderer.labels.template.padding(2, 2, 2, 2);\r\n\t\t\taxis.renderer.maxLabelPosition = 0.95;\r\n\t\t\taxis.relativePositionSprite = this.chart.panelsContainer;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic handleYAxisRemoved(event: IListEvents<Axis>[\"removed\"]): void {\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.handleAxisRemoval(event);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic set title(title: Label) {\r\n\t\tif (title != this._title) {\r\n\t\t\tif (this._title) {\r\n\t\t\t\tthis._title.dispose();\r\n\t\t\t}\r\n\t\t\tthis._title = title;\r\n\t\t\ttitle.marginRight = 15;\r\n\t\t\ttitle.fontWeight = \"bold\";\r\n\t\t\ttitle.parent = this.headerContainer;\r\n\r\n\t\t\ttitle.toBack();\r\n\t\t\tthis.legendItemsContainer.toFront();\r\n\r\n\t\t\tif (this.closeButton) {\r\n\t\t\t\tthis.closeButton.toBack();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minimizeButton) {\r\n\t\t\t\tthis.minimizeButton.toBack();\r\n\t\t\t}\r\n\r\n\t\t\ttitle.valign = \"middle\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get title(): Label {\r\n\t\treturn this._title;\r\n\t}\r\n\r\n\tpublic set closeEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"closeEnabled\", value)) {\r\n\t\t\tlet closeButton = this.closeButton;\r\n\t\t\tif (value) {\r\n\t\t\t\tif (!closeButton) {\r\n\t\t\t\t\tlet closeButton = this.headerContainer.createChild(CloseButton);\r\n\t\t\t\t\tcloseButton.marginRight = 10;\r\n\t\t\t\t\tcloseButton.toBack();\r\n\r\n\t\t\t\t\tthis.closeButton = closeButton;\r\n\t\t\t\t\tcloseButton.events.on(\"hit\", () => {\r\n\t\t\t\t\t\tthis.chart.panels.removeValue(this);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcloseButton.disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (closeButton) {\r\n\t\t\t\t\tcloseButton.disabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get closeEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"closeEnabled\");\r\n\t}\r\n\r\n\r\n\tpublic set minimized(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"minimized\", value)) {\r\n\t\t\tif (value) {\r\n\r\n\t\t\t\tthis._realHeight = this.height;\r\n\t\t\t\tthis.minHeight = this.headerContainer.measuredHeight;\r\n\t\t\t\tlet hiddenState = this.hiddenState;\r\n\t\t\t\tlet animation = this.animate({ property: \"height\", to: this.minHeight }, hiddenState.transitionDuration, hiddenState.transitionEasing);\r\n\t\t\t\tanimation.events.on(\"animationended\", () => {\r\n\t\t\t\t\tthis.yAxesAndPlotContainer.disabled = true;\r\n\t\t\t\t}, this, false);\r\n\t\t\t\tanimation.events.on(\"animationprogress\", this.parent.invalidateLayout, this.parent);\r\n\r\n\t\t\t\tlet chart = this.chart;\r\n\t\t\t\tlet hasMaximized = false;\r\n\t\t\t\tchart.panels.each((panel) => {\r\n\t\t\t\t\tif (!panel.minimized) {\r\n\t\t\t\t\t\thasMaximized = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (!hasMaximized) {\r\n\t\t\t\t\tlet panelToMaximize: StockPanel;\r\n\t\t\t\t\tchart.panels.each((panel) => {\r\n\t\t\t\t\t\tif (panel != this && !panelToMaximize) {\r\n\t\t\t\t\t\t\tpanelToMaximize = panel;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif(panelToMaximize){\r\n\t\t\t\t\t\tpanelToMaximize.minimized = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet hiddenState = this.hiddenState;\r\n\t\t\t\tthis.yAxesAndPlotContainer.disabled = false;\r\n\t\t\t\tlet animation = this.animate({ property: \"height\", from: percent(0), to: this._realHeight }, hiddenState.transitionDuration, hiddenState.transitionEasing);\r\n\t\t\t\tanimation.events.on(\"animationprogress\", this.parent.invalidateLayout, this.parent);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.minimizeButton) {\r\n\t\t\t\tthis.minimizeButton.isActive = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get minimized(): boolean {\r\n\t\treturn this.getPropertyValue(\"minimized\");\r\n\t}\r\n\r\n\r\n\tpublic set minimizeEnabled(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"minimizeEnabled\", value)) {\r\n\t\t\tlet minimizeButton = this.minimizeButton;\r\n\t\t\tif (value) {\r\n\t\t\t\tif (!minimizeButton) {\r\n\t\t\t\t\tlet minimizeButton = this.headerContainer.createChild(MinimizeButton);\r\n\t\t\t\t\tminimizeButton.marginRight = 10;\r\n\t\t\t\t\tminimizeButton.toBack();\r\n\r\n\t\t\t\t\tthis.minimizeButton = minimizeButton;\r\n\t\t\t\t\tminimizeButton.events.on(\"hit\", () => {\r\n\t\t\t\t\t\tthis.minimized = minimizeButton.isActive;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tminimizeButton.disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (minimizeButton) {\r\n\t\t\t\t\tminimizeButton.disabled = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic get minimizeEnabled(): boolean {\r\n\t\treturn this.getPropertyValue(\"minimizeEnabled\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"StockPanel\"] = StockPanel;"]}