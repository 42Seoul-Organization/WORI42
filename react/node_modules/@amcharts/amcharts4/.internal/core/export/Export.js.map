{"version":3,"file":"Export.js","sourceRoot":"","sources":["../../../../../src/.internal/core/export/Export.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { AMEvent } from \"../utils/EventDispatcher\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { Color, color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport { Align } from \"../defs/Align\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n\r\n\r\nexport interface IFile {\r\n\tpath: string;\r\n\tbytes: string;\r\n}\r\n\r\nexport interface IFont {\r\n\tname: string;\r\n\tnormal: IFile;\r\n\tbold?: IFile;\r\n\titalics?: IFile;\r\n\tbolditalics?: IFile;\r\n}\r\n\r\n\r\n// This is used to cache the pdfmake loading\r\nlet pdfmakePromise: Promise<any>;\r\n\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nasync function _pdfmake(): Promise<any> {\r\n\tlet a = await Promise.all([\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n\t]);\r\n\tlet pdfmake = a[0];\r\n\tlet vfs_fonts = a[1];\r\n\tconst global = <any>window;\r\n\tglobal.pdfMake = global.pdfMake || {};\r\n\tglobal.pdfMake.vfs = vfs_fonts.default;\r\n\tpdfmake.vfs = vfs_fonts.default;\r\n\treturn pdfmake;\r\n}\r\n\r\n\r\n// TODO better parsing\r\nconst fontFamilySrcRegexp = /src: ([^;]+);/;\r\n\r\n// TODO better checks\r\nfunction supportsBlobUri(): boolean {\r\n\treturn window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob: Blob): Promise<string> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\t// TODO handle abort ?\r\n\t\tconst f = new FileReader();\r\n\t\tf.onload = (e) => { resolve(<string>f.result); };\r\n\t\tf.onerror = (e) => { reject(e); };\r\n\t\tf.readAsDataURL(blob);\r\n\t});\r\n}\r\n\r\nasync function getCssRules(s: HTMLStyleElement): Promise<CSSRuleList> {\r\n\tconst sheet = <CSSStyleSheet>s.sheet;\r\n\r\n\ttry {\r\n\t\treturn sheet.cssRules;\r\n\r\n\t} catch (e) {\r\n\t\t// Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n\t\treturn await new Promise<CSSRuleList>((success, error) => {\r\n\t\t\ts.addEventListener(\"load\", () => {\r\n\t\t\t\tsuccess(sheet.cssRules);\r\n\t\t\t}, true);\r\n\r\n\t\t\ts.addEventListener(\"error\", (e) => {\r\n\t\t\t\terror(e);\r\n\t\t\t}, true);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\terror(new Error(\"Timeout while waiting for <style> to load\"));\r\n\t\t\t}, 10000);\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nasync function loadStylesheet(doc: Document, url: string, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tlet response;\r\n\r\n\ttry {\r\n\t\tresponse = await $net.load(url);\r\n\r\n\t} catch (e) {\r\n\t\tconsole.error(\"Failed to load stylesheet\", url, e);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst s = doc.createElement(\"style\");\r\n\ts.textContent = response.response;\r\n\tdoc.head.appendChild(s);\r\n\r\n\ttry {\r\n\t\tconst rules = await getCssRules(s);\r\n\t\tawait eachStylesheet(doc, url, rules, f);\r\n\r\n\t} finally {\r\n\t\tdoc.head.removeChild(s);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheet(doc: Document, topUrl: string, rules: CSSRuleList, f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\tconst promises: Array<Promise<void>> = [];\r\n\r\n\tconst length = rules.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tconst rule = rules[i];\r\n\r\n\t\tif (rule.type === CSSRule.IMPORT_RULE) {\r\n\t\t\tlet url = (<CSSImportRule>rule).href;\r\n\r\n\t\t\tif (url) {\r\n\t\t\t\turl = $utils.joinUrl(topUrl, url);\r\n\t\t\t\tpromises.push(loadStylesheet(doc, url, f));\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\tf(topUrl, rule);\r\n\t\t}\r\n\t}\r\n\r\n\tif (promises.length) {\r\n\t\tawait Promise.all(promises);\r\n\t}\r\n}\r\n\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nasync function eachStylesheets(f: (topUrl: string, rule: CSSRule) => void): Promise<void> {\r\n\t// This uses an <iframe> so it doesn't screw up the site's styles\r\n\tconst iframe = document.createElement(\"iframe\");\r\n\r\n\t// This causes it to use the same origin policy as the parent page\r\n\tiframe.src = \"about:blank\";\r\n\t// This tries to make it more accessible for screen readers\r\n\tiframe.setAttribute(\"title\", \"\");\r\n\r\n\tdocument.head.appendChild(iframe);\r\n\r\n\ttry {\r\n\t\tconst doc = iframe.contentDocument;\r\n\r\n\t\t// TODO use $dom.getRoot instead of document ?\r\n\t\tawait Promise.all($array.map(document.styleSheets, (sheet) => {\r\n\t\t\tlet url = sheet.href;\r\n\r\n\t\t\tif (url == null) {\r\n\t\t\t\treturn eachStylesheet(doc, location.href, (<CSSStyleSheet>sheet).cssRules, f);\r\n\r\n\t\t\t} else {\r\n\t\t\t\turl = $utils.joinUrl(location.href, url);\r\n\t\t\t\treturn loadStylesheet(doc, url, f);\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t} finally {\r\n\t\tdocument.head.removeChild(iframe);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Represents an Event object that comes from [[Export]].\r\n */\r\nexport type ExportOperation = {\r\n\tformat?: string;\r\n\toptions?: any;\r\n}\r\n\r\n/**\r\n * Defines image formats available for export.\r\n */\r\nexport type imageFormats = \"png\" | \"gif\" | \"jpg\";\r\n\r\n/**\r\n * An interface describing extra elements to include in export.\r\n *\r\n * @since 4.2.0\r\n */\r\nexport interface IExportCanvas {\r\n\r\n\t/**\r\n\t * Top margin in pixels.\r\n\t */\r\n\tmarginTop?: number;\r\n\r\n\t/**\r\n\t * Right margin in pixels.\r\n\t */\r\n\tmarginRight?: number;\r\n\r\n\t/**\r\n\t * Bottom margin in pixels.\r\n\t */\r\n\tmarginBottom?: number;\r\n\r\n\t/**\r\n\t * Left margin in pixels.\r\n\t */\r\n\tmarginLeft?: number;\r\n\r\n\t/**\r\n\t * Position to put extra element in relation to main chart.\r\n\t */\r\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\r\n\r\n\t/**\r\n\t * Reference to element.\r\n\t */\r\n\tsprite?: Sprite;\r\n\r\n\t/**\r\n\t * If this is set to `true` and extra element is higher/wider than main\r\n\t * chart element, the extra element will be cropped.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.1\r\n\t */\r\n\tcrop?: boolean;\r\n}\r\n\r\n/**\r\n * Represents options for image export.\r\n */\r\nexport interface IExportImageOptions {\r\n\r\n\t/**\r\n\t * Quality of the exported image. (0-1)\r\n\t */\r\n\tquality?: number;\r\n\r\n\t/**\r\n\t * Rescale image.\r\n\t *\r\n\t * Number less than 1 will shrink the image.\r\n\t *\r\n\t * Number bigger than 1 will scale up the image.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tscale?: number;\r\n\r\n\t/**\r\n\t * Minimum width in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminWidth?: number;\r\n\r\n\t/**\r\n\t * Minimum height in pixels of the exported image. If source chart is smaller\r\n\t * thank this, it will be scaled up.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tminHeight?: number;\r\n\r\n\t/**\r\n\t * Maximum width in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minWidth`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxWidth?: number;\r\n\r\n\t/**\r\n\t * Maximum height in pixels of the exported image. If source chart is bigger\r\n\t * thank this, it will be scaled down.\r\n\t *\r\n\t * NOTE: this setting might be overidden by `minHeight`.\r\n\t *\r\n\t * @since 4.9.24\r\n\t */\r\n\tmaxHeight?: number;\r\n\r\n\t/**\r\n\t * Normally, Export removes \"tainted\" images (images that are loaded from\r\n\t * other host than the chart itself) before export.\r\n\t *\r\n\t * Set this to `true` to disable it.\r\n\t *\r\n\t * Please note that removal of tainted images might trigger cross-origin\r\n\t * security restrictions in browser and prevent the whole export operation,\r\n\t * so use with caution.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tkeepTainted?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for SVG export.\r\n */\r\nexport interface IExportSVGOptions {\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Available PDF page sizes.\r\n */\r\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\r\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\r\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\r\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\r\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\r\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\r\n\r\n/**\r\n * Represents options for PDF export.\r\n */\r\nexport interface IExportPDFOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * Font size to use for all texts.\r\n\t */\r\n\tfontSize?: number;\r\n\r\n\t/**\r\n\t * An image format to use for embedded images in PDF.\r\n\t *\r\n\t * See `imageFormats` in [[Export_module]].\r\n\t */\r\n\timageFormat?: imageFormats;\r\n\r\n\t/**\r\n\t * Whether to add a URL of the web page the chart has been exported from.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddURL?: boolean;\r\n\r\n\t/**\r\n\t * Page size of the exported PDF.\r\n\t *\r\n\t * See `pageSizes` in [[Export_module]].\r\n\t */\r\n\tpageSize?: pageSizes;\r\n\r\n\t/**\r\n\t * Page orientation.\r\n\t */\r\n\tpageOrientation?: \"landscape\" | \"portrait\";\r\n\r\n\t/**\r\n\t * Alignment of the chart image in PDF.\r\n\t *\r\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\r\n\t *\r\n\t * @since 4.9.14\r\n\t * @default left\r\n\t */\r\n\talign?: Align;\r\n\r\n\t/**\r\n\t * Page margins.\r\n\t *\r\n\t * Can be one of the following:\r\n\t *\r\n\t * A single number, in which case it will act as margin setting\r\n\t * for all four edges of the page.\r\n\t *\r\n\t * An array of two numbers `[ horizontal, vertical ]`.\r\n\t *\r\n\t * An array of four numbers `[ left, top, right, bottom ]`.\r\n\t */\r\n\tpageMargins?: number | number[];\r\n\r\n\t/**\r\n\t * Should data table be included together with the image?\r\n\t *\r\n\t * Use \"pdfdata\" options to configure table output.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\taddData?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.7.0\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t * @since 4.7.0\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.7.0\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n\t/**\r\n\t * Font which should be used for the export.\r\n\t *\r\n\t * Default font used for PDF includes only Latin-based and Cyrilic\r\n\t * characters. If you are exporting text in other languages, you might need\r\n\t * to use some other export font.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\tfont?: IFont;\r\n\r\n\t/**\r\n\t * Additional optional fonts which can be used on individual elements.\r\n\t *\r\n\t * @since 4.9.19\r\n\t * @see {@link https://www.amcharts.com/docs/v4/tutorials/using-pdf-export-fonts/}\r\n\t */\r\n\textraFonts?: Array<IFont>;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for CSV export.\r\n */\r\nexport interface IExportCSVOptions {\r\n\r\n\t/**\r\n\t * Separator string to separate columns with.\r\n\t *\r\n\t * @default \",\"\r\n\t */\r\n\tseparator?: string;\r\n\r\n\t/**\r\n\t * CSV format does not require enclosing values in quotes, unless it\r\n\t * contains strings.\r\n\t *\r\n\t * This setting can be used to enforce enclosing of all values in CSV with\r\n\t * quotes.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tforceQuotes?: boolean;\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Add rows in reverse order.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\treverse?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for JSON export\r\n */\r\nexport interface IExportJSONOptions {\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Sets indent size for each hierarchical elements.\r\n\t *\r\n\t * @default \"  \"\r\n\t */\r\n\tindent?: number;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for XLSX export.\r\n */\r\nexport interface IExportExcelOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.6.8\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for HTML export.\r\n * @since 4.7.0\r\n */\r\nexport interface IExportHTMLOptions {\r\n\r\n\t/**\r\n\t * Add column names in first row?\r\n\t *\r\n\t * Export will try to use user-friendly column names where possible, either\r\n\t * from Export's `dataFields` or deduced from chart's series' names that are\r\n\t * bound to specific data fields.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\taddColumnNames?: boolean;\r\n\r\n\t/**\r\n\t * Use timestamps instead of formatted date/time values.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseTimestamps?: boolean;\r\n\r\n\t/**\r\n\t * Will try to format numbers and date/time according to user's locale\r\n\t * settings.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseLocale?: boolean;\r\n\r\n\t/**\r\n\t * Replace missing values with this.\r\n\t *\r\n\t * @default \"\" (empty string)\r\n\t */\r\n\temptyAs?: any;\r\n\r\n\t/**\r\n\t * If set to `true` will export data as pivoted (column names in first column;\r\n\t * values in rows).\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tpivot?: boolean;\r\n\r\n\t/**\r\n\t * A class name to add to table.\r\n\t */\r\n\ttableClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\trowClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table headers.\r\n\t */\r\n\theaderClass?: string;\r\n\r\n\t/**\r\n\t * A class name to add to table cells.\r\n\t */\r\n\tcellClass?: string;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for print.\r\n */\r\nexport interface IExportPrintOptions extends IExportImageOptions {\r\n\r\n\t/**\r\n\t * A delay in milliseconds to wait before initiating print.\r\n\t *\r\n\t * This delay is necessary to ensure DOM is prepared and repainted before\r\n\t * print dialog kicks in.\r\n\t *\r\n\t * @default 500\r\n\t */\r\n\tdelay?: number;\r\n\r\n\t/**\r\n\t * Method to use for printing.\r\n\t *\r\n\t * If one fails for your particular setup, try the other.\r\n\t *\r\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\r\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\r\n\t *\r\n\t * @default \"iframe\"\r\n\t */\r\n\tprintMethod?: \"css\" | \"iframe\";\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents options for custom menu items.\r\n */\r\nexport interface IExportCustomOptions {\r\n\r\n\t/**\r\n\t * A callback function reference that will be called when this custom item\r\n\t * is clicked.\r\n\t */\r\n\tcallback?: (branch?: any) => any;\r\n\r\n\t/**\r\n\t * A target which will be `this` context for callback calls.\r\n\t */\r\n\tcallbackTarget?: any;\r\n\r\n\t/**\r\n\t * Set this option to `disabled` for a format to not show up in [[ExportMenu]].\r\n\t *\r\n\t * @since 4.9.11\r\n\t */\r\n\tdisabled?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Represents interface for a temporarily removed image.\r\n */\r\nexport interface IExportRemovedObject {\r\n\r\n\t/**\r\n\t * Element that was removed out of DOM.\r\n\t */\r\n\telement: Node;\r\n\r\n\t/**\r\n\t * A placeholder element that was placed instead of removed element so that\r\n\t * we know where to put removed element back in.\r\n\t */\r\n\tplaceholder: Node;\r\n\r\n}\r\n\r\n/**\r\n * Represents all available options for all export operations.\r\n */\r\nexport interface IExportOptions {\r\n\tpng: IExportImageOptions;\r\n\tgif: IExportImageOptions;\r\n\tjpg: IExportImageOptions;\r\n\tsvg: IExportSVGOptions;\r\n\tpdf: IExportPDFOptions;\r\n\txlsx: IExportExcelOptions;\r\n\tcsv: IExportCSVOptions;\r\n\tjson: IExportJSONOptions;\r\n\tpdfdata: IExportPDFOptions;\r\n\thtml: IExportHTMLOptions;\r\n\tprint: IExportPrintOptions;\r\n\tcustom: IExportCustomOptions;\r\n}\r\n\r\n/**\r\n * All export options as a type.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport type ExportOptions = IExportImageOptions | IExportSVGOptions | IExportPDFOptions | IExportExcelOptions | IExportCSVOptions | IExportJSONOptions | IExportHTMLOptions | IExportPrintOptions;\r\n\r\n/**\r\n * Defines events for export operations.\r\n */\r\nexport interface IExportEvents {\r\n\r\n\t/**\r\n\t * Invoked when Export initializes.\r\n\t */\r\n\tinited: {};\r\n\r\n\t/**\r\n\t * Invoked when Export menu is created.\r\n\t */\r\n\tmenucreated: {};\r\n\r\n\t/**\r\n\t * Invoked when the Export starts export procedure.\r\n\t *\r\n\t * You can use event handlers here to modify config before actual export\r\n\t * starts.\r\n\t */\r\n\texportstarted: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation finishes.\r\n\t */\r\n\texportfinished: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation encounters error.\r\n\t */\r\n\terror: ExportOperation;\r\n\r\n\t/**\r\n\t * Invoked when export operation times out.\r\n\t *\r\n\t * Use Export's `timeoutDelay` setting to set timeout. (default: 2000ms)\r\n\t */\r\n\texporttimedout: ExportOperation;\r\n\r\n}\r\n\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport type Keys = keyof IExportOptions;\r\n\r\n/**\r\n * Represents a list of available adapters for [[Export]].\r\n */\r\nexport interface IExportAdapters {\r\n\r\n\tsupported: {\r\n\t\tsupported: boolean,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\texportFunction: {\r\n\t\tfunc: <Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]) => Promise<any>,\r\n\t\ttype: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\toptions: {\r\n\t\toptions: IExportOptions[Keys],\r\n\t\ttype?: Keys\r\n\t},\r\n\r\n\ttitle: {\r\n\t\ttitle: $type.Optional<string>,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcharset: {\r\n\t\tcharset: string,\r\n\t\ttype?: Keys,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t}\r\n\r\n\tsvgToDataURI: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tnormalizeSVG: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetCSV: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetJSON: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetExcel: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tgetHTML: {\r\n\t\tdata: string,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeDocument: {\r\n\t\tdoc: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tpdfmakeTable: {\r\n\t\ttable: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\tcontainer: {\r\n\t\tcontainer: HTMLElement\r\n\t},\r\n\r\n\tsprite: {\r\n\t\tsprite: Sprite\r\n\t},\r\n\r\n\textraSprites: {\r\n\t\textraSprites: Array<Sprite | IExportCanvas>\r\n\t},\r\n\r\n\tvalidateSprites: {\r\n\t\tvalidateSprites: Array<Sprite>\r\n\t},\r\n\r\n\tdata: {\r\n\t\tdata: Array<any>\r\n\t},\r\n\r\n\tdataFields: {\r\n\t\tdataFields: any\r\n\t},\r\n\r\n\tformatDataFields: {\r\n\t\tdataFields: any,\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdataFieldsOrder: {\r\n\t\tdataFieldsOrder: string[],\r\n\t\tformat: string\r\n\t},\r\n\r\n\tdateFormatter: {\r\n\t\tdateFormatter: DateFormatter\r\n\t},\r\n\r\n\tdateFormat: {\r\n\t\tdateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>\r\n\t},\r\n\r\n\tdateFields: {\r\n\t\tdateFields: any\r\n\t},\r\n\r\n\tnumberFormatter: {\r\n\t\tnumberFormatter: NumberFormatter\r\n\t},\r\n\r\n\tnumberFormat: {\r\n\t\tnumberFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tnumberFields: {\r\n\t\tnumberFields: any\r\n\t},\r\n\r\n\tdurationFormatter: {\r\n\t\tdurationFormatter: DurationFormatter\r\n\t},\r\n\r\n\tdurationFormat: {\r\n\t\tdurationFormat: $type.Optional<string>\r\n\t},\r\n\r\n\tdurationFields: {\r\n\t\tdurationFields: any\r\n\t},\r\n\r\n\tdataFieldName: {\r\n\t\tname: string,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDateField: {\r\n\t\tisDateField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisNumberField: {\r\n\t\tisNumberField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tisDurationField: {\r\n\t\tisDurationField: boolean,\r\n\t\tfield: string\r\n\t},\r\n\r\n\tcontentType: {\r\n\t\tcontentType: string,\r\n\t\ttype: Keys\r\n\t},\r\n\r\n\tfilePrefix: {\r\n\t\tfilePrefix: string\r\n\t},\r\n\r\n\tbackgroundColor: {\r\n\t\tbackgroundColor: $type.Optional<Color>\r\n\t},\r\n\r\n\ttimeoutMessage: {\r\n\t\tmessage: string\r\n\t},\r\n\r\n\txlsxWorkbookOptions: {\r\n\t\toptions: any\r\n\t},\r\n\r\n\txlsxSheetName: {\r\n\t\tname: string\r\n\t},\r\n\r\n\t/**\r\n\t * @since 4.9.28\r\n\t */\r\n\txlsxWorkbook: {\r\n\t\tworkbook: any,\r\n\t\toptions?: IExportOptions[Keys]\r\n\t},\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nexport class Export extends Validatable {\r\n\r\n\t/**\r\n\t * XLINK namespace definition.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tstatic XLINK: string = \"http://www.w3.org/1999/xlink\";\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IExportEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IExportAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter = new Adapter<Export, IExportAdapters>(this);\r\n\r\n\t/**\r\n\t * Holds options for each format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _formatOptions: Dictionary<string, ExportOptions> = new Dictionary<string, ExportOptions>();\r\n\r\n\t/**\r\n\t * An instance of [[Language]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _language: $type.Optional<Language>;\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _menu: $type.Optional<ExportMenu>;\r\n\r\n\t/**\r\n\t * Reference to main container to place menu in.\r\n\t */\r\n\tprotected _container: HTMLElement;\r\n\r\n\t/**\r\n\t * [[Sprite]] instance to be used when converting to image.\r\n\t */\r\n\tprotected _sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Extra [[Sprite]] elements to include in exports.\r\n\t */\r\n\tprotected _extraSprites: Array<Sprite | IExportCanvas> = [];\r\n\r\n\t/**\r\n\t * A list of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t */\r\n\tprotected _validateSprites: Array<Sprite> = [];\r\n\r\n\t/**\r\n\t * Data storage to be used when exporting to data formats.\r\n\t */\r\n\tprotected _data: any;\r\n\r\n\t/**\r\n\t * Holds an object of field key / field name used to name columns when\r\n\t * exporting to data formats.\r\n\t */\r\n\tprotected _dataFields: any;\r\n\r\n\t/**\r\n\t * Holds an array of data field names. If set, exported data fields will try\r\n\t * to maintain this order.\r\n\t *\r\n\t * If not set (default), the export will try to maintain the same order as\r\n\t * in source data, or as in `dataFields` (if set).\r\n\t *\r\n\t * @since 4.9.7\r\n\t */\r\n\tpublic dataFieldsOrder: string[] = [];\r\n\r\n\t/**\r\n\t * Indicates whether data fields were generated dynamically (`true`) or\r\n\t * if they were pre-set by the user (`false`).\r\n\t */\r\n\tprotected _dynamicDataFields: boolean = true;\r\n\r\n\t/**\r\n\t * A reference to [[DateFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormatter: $type.Optional<DateFormatter>;\r\n\r\n\t/**\r\n\t * A Date format to be used when formatting dates in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFormat: $type.Optional<string | Intl.DateTimeFormatOptions>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold date values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _dateFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[DurationFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormatter: $type.Optional<DurationFormatter>;\r\n\r\n\t/**\r\n\t * A duration format to be used when formatting numeric values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold duration values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _durationFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * A reference to [[NumberFormatter]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormatter: $type.Optional<NumberFormatter>;\r\n\r\n\t/**\r\n\t * A number format to be used when formatting numbers in string-based data\r\n\t * formats.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFormat: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * A list of column keys that hold number values.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _numberFields: $type.Optional<List<string>>;\r\n\r\n\t/**\r\n\t * Holds a list of objects that were temporarily removed from the DOM while\r\n\t * exporting. Those most probably are tainted images, or foreign objects that\r\n\t * would otherwise prevent SVG to be converted to canvas.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _removedObjects: List<IExportRemovedObject> = new List<IExportRemovedObject>();\r\n\r\n\t/**\r\n\t * Holds references to the objects that were temporarily hidden when export\r\n\t * started, so that we can reveal them back when export ends.\r\n\t */\r\n\tprotected _hiddenObjects: Sprite[] = [];\r\n\r\n\t/**\r\n\t * Indicates if non-exportable objects are now hidden;\r\n\t */\r\n\tprotected _objectsAlreadyHidden: boolean = false;\r\n\r\n\t/**\r\n\t * Exported files will be prefixed with whatever it is set here.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _filePrefix: string = \"amCharts\";\r\n\r\n\t/**\r\n\t * Export will try to determine proper background color itself. If you want to\r\n\t * override it and use some other color, set this property.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _backgroundColor: $type.Optional<Color>;\r\n\r\n\t/**\r\n\t * A title to use for some document exports, mainly for print.\r\n\t * A document.title will be used if not set.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _title: $type.Optional<string>;\r\n\r\n\t/**\r\n\t * If you are using web fonts (such as Google Fonts), your chart might be\r\n\t * using them as well.\r\n\t *\r\n\t * Normally, exporting to image will require to download these fonts so the\r\n\t * are carried over to exported image.\r\n\t *\r\n\t * This setting can be used to disable or enable this functionality.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useWebFonts: boolean = true;\r\n\r\n\t/**\r\n\t * Many modern displays have use more actual pixels per displayed pixel. This\r\n\t * results in sharper images on screen. Unfortunately, when exported to a\r\n\t * bitmap image of the sam width/height size it will lose those extra pixels,\r\n\t * resulting in somewhat blurry image.\r\n\t *\r\n\t * This is why we are going to export images larger than they are, so that we\r\n\t * don't lose any details.\r\n\t *\r\n\t * If you'd rather export images without change in size, set this to `false`.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpublic useRetina: boolean = true;\r\n\r\n\t/**\r\n\t * By default Export will try to use built-in method for transforming chart\r\n\t * into an image for download, then fallback to external library (canvg) for\r\n\t * conversion if failed.\r\n\t *\r\n\t * Setting this to `false` will force use of external library for all export\r\n\t * operations.\r\n\t *\r\n\t * It might be useful to turn off simplified export if you are using strict\r\n\t * content security policies, that disallow images with blobs as their\r\n\t * source.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.2.5\r\n\t */\r\n\tpublic useSimplifiedExport: boolean = true;\r\n\r\n\t/**\r\n\t * If export operation takes longer than milliseconds in this second, we will\r\n\t * show a modal saying export operation took longer than expected.\r\n\t */\r\n\tpublic timeoutDelay: number = 2000;\r\n\r\n\t/**\r\n\t * A reference to export timeout.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _timeoutTimeout: $type.Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Holds reference to [[Modal]] instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _modal: $type.Optional<Modal>;\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\tprivate _exportRunning: boolean = false;\r\n\r\n\t/**\r\n\t * Indicator used by [[Component]].\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprivate _prevHasData: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor(container: HTMLElement) {\r\n\t\tsuper();\r\n\r\n\t\tthis._container = container;\r\n\r\n\t\tthis.className = \"Export\";\r\n\r\n\t\t// Set default options\r\n\t\tthis._formatOptions.setKey(\"png\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"jpg\", {\r\n\t\t\tquality: 0.8\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"gif\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"svg\", {});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdf\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\talign: \"left\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"json\", {\r\n\t\t\tindent: 2,\r\n\t\t\tuseLocale: true\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"csv\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"xlsx\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\tuseLocale: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"html\", {\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"pdfdata\", {\r\n\t\t\tfontSize: 14,\r\n\t\t\timageFormat: \"png\",\r\n\t\t\taddURL: true,\r\n\t\t\taddColumnNames: true,\r\n\t\t\temptyAs: \"\"\r\n\t\t});\r\n\r\n\t\tthis._formatOptions.setKey(\"print\", {\r\n\t\t\tdelay: 500,\r\n\t\t\tprintMethod: \"iframe\"\r\n\t\t});\r\n\r\n\t\t// Add options adapter\r\n\t\tthis.adapter.add(\"options\", (arg) => {\r\n\t\t\tlet formatOptions = this._formatOptions.getKey(arg.type);\r\n\t\t\tif (arg.options) {\r\n\t\t\t\targ.options = $object.merge(formatOptions, arg.options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\targ.options = formatOptions;\r\n\t\t\t}\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.dispatchImmediately(\"inited\");\r\n\t}\r\n\r\n\t/**\r\n\t * An instance of [[ExportMenu]].\r\n\t *\r\n\t * To add an export menu to a chart, set this to a new instance of\r\n\t * [[ExportMenu]].\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.menu = new am4core.ExportMenu();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     \"menu\": {}\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param menu  ExportMenu instance\r\n\t */\r\n\tpublic set menu(menu: $type.Optional<ExportMenu>) {\r\n\t\tif (this._menu) {\r\n\t\t\tthis.removeDispose(this._menu);\r\n\t\t}\r\n\t\tthis._menu = menu;\r\n\r\n\t\t// Set container and language\r\n\t\tthis._menu.container = this.container;\r\n\t\tthis._menu.language = this._language;\r\n\r\n\t\t// Add adapter to check for browser support\r\n\t\tthis._menu.adapter.add(\"branch\", (arg) => {\r\n\t\t\targ.branch.unsupported = !this.typeSupported(arg.branch.type);\r\n\t\t\treturn arg;\r\n\t\t});\r\n\r\n\t\t// Add click events\r\n\t\tthis._menu.events.on(\"hit\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"enter\", (ev) => {\r\n\t\t\tthis.export(ev.branch.type, ev.branch.options);\r\n\t\t\tthis.menu.close();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"over\", (ev) => {\r\n\t\t\tthis._disablePointers();\r\n\t\t});\r\n\r\n\t\tthis._menu.events.on(\"out\", (ev) => {\r\n\t\t\tsetTimeout(() => { this._releasePointers(); }, 10);\r\n\t\t});\r\n\r\n\t\t// Dispatch event\r\n\t\tthis.dispatchImmediately(\"menucreated\");\r\n\r\n\t\t// Prefix with Sprite's class name\r\n\t\tthis._menu.adapter.add(\"classPrefix\", (obj) => {\r\n\t\t\tobj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n\t\t\treturn obj;\r\n\t\t});\r\n\r\n\t\t// Add menu to disposers so that it's destroyed when Export is disposed\r\n\t\tthis._disposers.push(this._menu);\r\n\t}\r\n\r\n\t/**\r\n\t * @return ExportMenu instance\r\n\t */\r\n\tpublic get menu(): $type.Optional<ExportMenu> {\r\n\t\treturn this._menu;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this specific menu item type is supported by current system.\r\n\t *\r\n\t * @param type  Menu item type\r\n\t * @return `false` if not supported\r\n\t */\r\n\tpublic typeSupported<Key extends keyof IExportOptions>(type: Key): boolean {\r\n\t\tlet supported = true;\r\n\t\tconst options = this.getFormatOptions(type);\r\n\t\tif ($type.hasValue(options) && options.disabled) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if (type === \"pdf\") {\r\n\t\t\t//supported = this.downloadSupport();\r\n\t\t}\r\n\t\telse if (type === \"xlsx\") {\r\n\t\t\t//supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n\t\t\tsupported = this._hasData() ? true : false;\r\n\t\t}\r\n\t\telse if (type == \"print\" && !(<any>window).print) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\telse if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n\t\t\tsupported = false;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"supported\", {\r\n\t\t\tsupported: supported,\r\n\t\t\ttype: type\r\n\t\t}).supported;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if data is available.\r\n\t *\r\n\t * @return Has data?\r\n\t */\r\n\tprivate _hasData(): boolean {\r\n\t\treturn this.data && this.data.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Get function to handle export for particular format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprivate _getFunction<Key extends keyof IExportOptions>(type: Key): (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\treturn <any>this.getImage;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\treturn <any>this.getSVG;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\treturn <any>this.getPDF;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\treturn <any>this.getExcel;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\treturn <any>this.getCSV;\r\n\t\t\tcase \"json\":\r\n\t\t\t\treturn <any>this.getJSON;\r\n\t\t\tcase \"html\":\r\n\t\t\t\treturn <any>this.getHTML;\r\n\t\t\tcase \"print\":\r\n\t\t\t\treturn <any>this.getPrint;\r\n\t\t\tdefault:\r\n\t\t\t\treturn this.unsupported;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates export procedure.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return `true` if export was successful\r\n\t * @async\r\n\t */\r\n\tpublic async export<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<boolean> {\r\n\r\n\t\t// Check if it's a custom item, and do nothing or execute custom callback\r\n\t\tif (type == \"custom\") {\r\n\t\t\tthis.handleCustom(<IExportCustomOptions>options);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t// Set export running flag\r\n\t\tthis._exportRunning = true;\r\n\r\n\t\t// Dispatch event\r\n\t\tif (this.events.isEnabled(\"exportstarted\")) {\r\n\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportstarted\"] = {\r\n\t\t\t\t\"type\": \"exportstarted\",\r\n\t\t\t\t\"target\": this,\r\n\t\t\t\t\"format\": type,\r\n\t\t\t\t\"options\": options\r\n\t\t\t};\r\n\t\t\tthis.events.dispatchImmediately(\"exportstarted\", event);\r\n\t\t}\r\n\r\n\t\t// Schedule a preloader\r\n\t\tthis.showPreloader()\r\n\r\n\t\t// Schedule a timeout\r\n\t\tif (this.timeoutDelay) {\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tthis._timeoutTimeout = this.setTimeout((): void => {\r\n\r\n\t\t\t\t// Dispatch event\r\n\t\t\t\tif (this.events.isEnabled(\"exporttimedout\")) {\r\n\t\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exporttimedout\"] = {\r\n\t\t\t\t\t\t\"type\": \"exporttimedout\",\r\n\t\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\t\"options\": options\r\n\t\t\t\t\t};\r\n\t\t\t\t\tthis.events.dispatchImmediately(\"exporttimedout\", event);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Show modal\r\n\t\t\t\tthis.showTimeout()\r\n\r\n\t\t\t}, this.timeoutDelay);\r\n\t\t}\r\n\r\n\t\t// Hide items that should not be exported\r\n\t\tthis.hideNonExportableSprites();\r\n\r\n\t\t// Get the actual export function\r\n\t\tlet func: (this: this, type: Key, options?: IExportOptions[Key]) => Promise<any> = this._getFunction(type);\r\n\r\n\t\t// Give chance for plugins to override both function and options\r\n\t\toptions = this.adapter.apply(\"options\", {\r\n\t\t\toptions: options,\r\n\t\t\ttype: type\r\n\t\t}).options;\r\n\r\n\t\tfunc = this.adapter.apply(\"exportFunction\", {\r\n\t\t\tfunc: func as any,\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).func;\r\n\r\n\t\t// Get exported stuff\r\n\t\tlet data = await func.call(this, type, options);\r\n\r\n\t\t// Release pointers\r\n\t\tthis._exportRunning = false;\r\n\t\tthis._releasePointers();\r\n\r\n\t\t// Restore temporarily hidden elements\r\n\t\tthis.restoreNonExportableSprites();\r\n\r\n\t\tif (data) {\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"exportfinished\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"exportfinished\"] = {\r\n\t\t\t\t\t\"type\": \"exportfinished\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"exportfinished\", event);\r\n\t\t\t}\r\n\r\n\t\t\t// Hide preloader and timeout modals\r\n\t\t\tthis.hidePreloader();\r\n\t\t\tthis.hideTimeout();\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.close();\r\n\t\t\t}\r\n\r\n\t\t\t// Download or print\r\n\t\t\tif (type === \"print\") {\r\n\t\t\t\treturn this.print(data, <IExportOptions[\"print\"]>options, this.adapter.apply(\"title\", {\r\n\t\t\t\t\ttitle: this.title,\r\n\t\t\t\t\toptions: options\r\n\t\t\t\t}).title);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (type == \"pdfdata\") {\r\n\t\t\t\t\treturn this.download(data, this.filePrefix + \".pdf\");\r\n\t\t\t\t}\r\n\t\t\t\treturn this.download(data, this.filePrefix + \".\" + type);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Throw exception?\r\n\t\t\t// @todo\r\n\r\n\t\t\t// Dispatch event\r\n\t\t\tif (this.events.isEnabled(\"error\")) {\r\n\t\t\t\tconst event: AMEvent<this, IExportEvents>[\"error\"] = {\r\n\t\t\t\t\t\"type\": \"error\",\r\n\t\t\t\t\t\"target\": this,\r\n\t\t\t\t\t\"format\": type,\r\n\t\t\t\t\t\"options\": options\r\n\t\t\t\t};\r\n\t\t\t\tthis.events.dispatchImmediately(\"error\", event);\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A function that should handle unsupported export types.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async unsupported<Key extends keyof IExportOptions>(type: Key, options?: IExportOptions[Key]): Promise<string> {\r\n\t\t// TODO should this return `undefined`?\r\n\t\treturn \"\";\r\n\t}\r\n\r\n\t/**\r\n\t * Handles click on a \"custom\" menu item.\r\n\t *\r\n\t * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param options  Options\r\n\t */\r\n\tpublic handleCustom(options: IExportCustomOptions): void {\r\n\t\tif ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n\t\t\toptions.callback.call(options.callbackTarget || this, options);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Requests a Print of the chart.\r\n\t *\r\n\t * @param type     Export type\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPrint(type: string, options?: IExportPrintOptions): Promise<string> {\r\n\t\treturn this.getImage(\"png\", options);\r\n\t}\r\n\r\n\t/**\r\n\t * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return String which can be embedded directly into a <style> element.\r\n\t * @async\r\n\t */\r\n\tpublic async getFontFamilies(): Promise<{ blobs: Array<string>, cssText: string }> {\r\n\t\tconst DOMURL = this.getDOMURL();\r\n\r\n\t\tconst blobs: Array<string> = [];\r\n\t\tconst promises: Array<Promise<string>> = [];\r\n\r\n\t\tawait eachStylesheets((topUrl, rule) => {\r\n\t\t\tif (rule.type === CSSRule.FONT_FACE_RULE) {\r\n\t\t\t\tconst cssText = rule.cssText;\r\n\r\n\t\t\t\t// TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n\t\t\t\tconst src = fontFamilySrcRegexp.exec(cssText);\r\n\r\n\t\t\t\tif (src !== null) {\r\n\t\t\t\t\t// TODO make this faster (don't create Promises for non-url stuff)\r\n\t\t\t\t\tconst urls: Array<Promise<string | null>> = src[1].split(/ *, */).map(async (url) => {\r\n\t\t\t\t\t\t// TODO better parsing for this\r\n\t\t\t\t\t\t// TODO is it necessary to handle ' ?\r\n\t\t\t\t\t\tconst a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n\r\n\t\t\t\t\t\tif (a === null) {\r\n\t\t\t\t\t\t\treturn url;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconst after = a[2];\r\n\r\n\t\t\t\t\t\t\tconst fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// Fetch the actual font-file (.woff)\r\n\t\t\t\t\t\t\t\tconst response = await $net.load(fullUrl, undefined, { responseType: \"blob\" });\r\n\r\n\t\t\t\t\t\t\t\tlet url;\r\n\r\n\t\t\t\t\t\t\t\t// We need blob for IE and Edge\r\n\t\t\t\t\t\t\t\tif (supportsBlobUri()) {\r\n\t\t\t\t\t\t\t\t\turl = DOMURL.createObjectURL(response.blob);\r\n\t\t\t\t\t\t\t\t\tblobs.push(url);\r\n\r\n\t\t\t\t\t\t\t\t\t// We need a data URI for Firefox and Chrome\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\turl = await blobToDataUri(response.blob);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// TODO should it should escape the URI ?\r\n\t\t\t\t\t\t\t\treturn \"url(\\\"\" + url + \"\\\")\" + after;\r\n\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Failed to load font\", fullUrl, e);\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tpromises.push(Promise.all(urls).then((a) => {\r\n\t\t\t\t\t\ta = a.filter((x) => x != null);\r\n\r\n\t\t\t\t\t\tif (a.length === 0) {\r\n\t\t\t\t\t\t\treturn \"\";\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn cssText.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst a = await Promise.all(promises);\r\n\r\n\t\treturn {\r\n\t\t\tblobs: blobs,\r\n\t\t\tcssText: a.filter((x) => !!x).join(\"\\n\")\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Produces image output from the element.\r\n\t *\r\n\t * Converts to a `Canvas` first, then produces an image to download.\r\n\t *\r\n\t * This is an asynchronous function. Rather than returning a result, it\r\n\t * returns a Promise.\r\n\t *\r\n\t * You can use `await` notion from other async functions, or `then()`\r\n\t * anywhere else.\r\n\t *\r\n\t * ```TypeScript\r\n\t * let img;\r\n\t *\r\n\t * // Async\r\n\t * img = await chart.exporting.getImage( \"png\" );\r\n\t *\r\n\t * // Sync\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * var img;\r\n\t * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n\t *   img = data;\r\n\t * } );\r\n\t * ```\r\n\t *\r\n\t * @param  type           Image format\r\n\t * @param  options        Options\r\n\t * @param  includeExtras  Should extra sprites be included if set?\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getImage<Key extends imageFormats>(type: Key, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Are we using simplified export option?\r\n\t\tif (await this.simplifiedImageExport()) {\r\n\r\n\t\t\ttry {\r\n\t\t\t\tlet canvas = await this.getCanvas(options);\r\n\r\n\t\t\t\t// Add extra sprites\r\n\t\t\t\tif (includeExtras !== false) {\r\n\t\t\t\t\tcanvas = await this.addExtras(canvas, options);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert to data uri\r\n\t\t\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t\t\t// Get rid of the canvas\r\n\t\t\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tconsole.error(e.message + \"\\n\" + e.stack);\r\n\t\t\t\t$log.warn(\"Simple export failed, falling back to advanced export\");\r\n\r\n\t\t\t\t// An error occurred, let's try advanced method\r\n\t\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\t\tif (!prehidden) {\r\n\t\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn data;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Going the hard way. Converting to canvas from each node\r\n\t\t\t */\r\n\t\t\tconst data = await this.getImageAdvanced(type, options, includeExtras);\r\n\r\n\t\t\tif (!prehidden) {\r\n\t\t\t\tthis.restoreNonExportableSprites();\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds extra elements to the canvas.\r\n\t *\r\n\t * @param  canvas   Original canvas\r\n\t * @param  options  Options\r\n\t */\r\n\tprivate async addExtras(canvas: HTMLCanvasElement, options?: IExportImageOptions, advanced?: boolean): Promise<HTMLCanvasElement> {\r\n\t\tif (this.extraSprites.length) {\r\n\t\t\tlet middleLeft = 0;\r\n\t\t\tlet middleTop = 0;\r\n\t\t\tlet middleWidth = canvas.width;\r\n\t\t\tlet middleHeight = canvas.height;\r\n\t\t\tlet extraRight = 0;\r\n\t\t\tlet extraBottom = 0;\r\n\r\n\t\t\tconst extras = await Promise.all($array.map(this.extraSprites, async (extraSprite) => {\r\n\t\t\t\t// Get that extra\r\n\t\t\t\tlet extra: IExportCanvas;\r\n\r\n\t\t\t\tif (extraSprite instanceof Sprite) {\r\n\t\t\t\t\textra = {\r\n\t\t\t\t\t\tsprite: extraSprite,\r\n\t\t\t\t\t\tposition: \"bottom\"\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textra = extraSprite;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set defaults\r\n\t\t\t\textra.position = extra.position || \"bottom\";\r\n\t\t\t\textra.marginTop = extra.marginTop || 0;\r\n\t\t\t\textra.marginRight = extra.marginRight || 0;\r\n\t\t\t\textra.marginBottom = extra.marginBottom || 0;\r\n\t\t\t\textra.marginLeft = extra.marginLeft || 0;\r\n\r\n\t\t\t\tlet extraCanvas;\r\n\r\n\t\t\t\tif (advanced) {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvasAdvanced(options);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\textraCanvas = await extra.sprite.exporting.getCanvas(options);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n\t\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\tmiddleTop += extraHeight;\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\textraRight += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tmiddleHeight = extra.crop ? middleHeight : $math.max(middleHeight, extraHeight);\r\n\t\t\t\t\tmiddleLeft += extraWidth;\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tmiddleWidth = extra.crop ? middleHeight : $math.max(middleWidth, extraWidth);\r\n\t\t\t\t\textraBottom += extraHeight;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcanvas: extraCanvas,\r\n\t\t\t\t\tposition: extra.position,\r\n\t\t\t\t\tleft: extra.marginLeft,\r\n\t\t\t\t\ttop: extra.marginTop,\r\n\t\t\t\t\twidth: extraWidth,\r\n\t\t\t\t\theight: extraHeight\r\n\t\t\t\t};\r\n\t\t\t}));\r\n\r\n\t\t\tconst newCanvas = this.getDisposableCanvas();\r\n\r\n\t\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\r\n\t\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\r\n\r\n\t\t\tconst ctx = newCanvas.getContext(\"2d\");\r\n\r\n\t\t\t// Get background\r\n\t\t\tconst background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet left = middleLeft;\r\n\t\t\tlet top = middleTop;\r\n\t\t\tlet right = left + middleWidth;\r\n\t\t\tlet bottom = top + middleHeight;\r\n\r\n\t\t\t// Radiates outwards from center\r\n\t\t\t$array.each(extras, (extra) => {\r\n\t\t\t\tif (extra.position == \"top\") {\r\n\t\t\t\t\ttop -= extra.height;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position == \"right\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\r\n\t\t\t\t\tright += extra.width;\r\n\r\n\t\t\t\t} else if (extra.position == \"left\") {\r\n\t\t\t\t\tleft -= extra.width;\r\n\t\t\t\t\tctx.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\r\n\r\n\t\t\t\t} else if (extra.position === \"bottom\") {\r\n\t\t\t\t\tctx.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\r\n\t\t\t\t\tbottom += extra.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.disposeCanvas(extra.canvas);\r\n\t\t\t});\r\n\r\n\t\t\tctx.drawImage(canvas, middleLeft, middleTop);\r\n\r\n\t\t\treturn newCanvas;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvas;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]].\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvas(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get DOM URL\r\n\t\tlet DOMURL = this.getDOMURL();\r\n\t\tlet url: string | null = null;\r\n\t\tlet blobs: Array<string> | null = null;\r\n\t\tlet canvas;\r\n\r\n\t\t// Create temporary image element\r\n\t\ttry {\r\n\t\t\t/**\r\n\t\t\t * Simplified version using `createObjectURL`\r\n\t\t\t * Not supported in older browsers\r\n\t\t\t */\r\n\r\n\t\t\t// Get dimensions\r\n\t\t\tlet width = this.sprite.pixelWidth;\r\n\t\t\tlet height = this.sprite.pixelHeight;\r\n\t\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\t\tlet scale = options.scale || 1;\r\n\t\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t\t// Create canvas and its 2D context\r\n\t\t\tcanvas = this.getDisposableCanvas();\r\n\r\n\t\t\t// Set canvas width/height\r\n\t\t\tcanvas.style.width = width * scale + 'px';\r\n\t\t\tcanvas.style.height = height * scale + 'px';\r\n\t\t\tcanvas.width = width * scale;\r\n\t\t\tcanvas.height = height * scale;\r\n\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\r\n\t\t\t// if (pixelRatio != 1) {\r\n\t\t\t// \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n\t\t\t// }\r\n\r\n\t\t\t// Add background if necessary\r\n\t\t\tif (background) {\r\n\t\t\t\tctx.fillStyle = background.toString();\r\n\t\t\t\tctx.fillRect(0, 0, width * scale, height * scale);\r\n\t\t\t}\r\n\r\n\t\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\t\tif (this.useWebFonts) {\r\n\t\t\t\t// TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n\t\t\t\tpromises.push(this.getFontFamilies().then((fonts) => {\r\n\t\t\t\t\tblobs = fonts.blobs;\r\n\t\t\t\t\treturn fonts.cssText;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\r\n\t\t\tpromises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n\t\t\tpromises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n\r\n\t\t\t// Do prepareations on a document\r\n\t\t\tlet a = await Promise.all(promises);\r\n\r\n\t\t\t// Get SVG representation of the Sprite\r\n\t\t\tlet data = this.normalizeSVG(\r\n\t\t\t\t\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\t\toptions,\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tscale,\r\n\t\t\t\tfont,\r\n\t\t\t\tfontSize\r\n\t\t\t);\r\n\r\n\t\t\t// Get Blob representation of SVG and create object URL\r\n\t\t\tlet svg = new Blob([data], { type: \"image/svg+xml\" });\r\n\t\t\turl = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img = await this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\");\r\n\r\n\t\t\t// Draw image on canvas\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t} finally {\r\n\t\t\tif (url !== null) {\r\n\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t}\r\n\r\n\t\t\tif (blobs !== null) {\r\n\t\t\t\t$array.each(blobs, (url) => {\r\n\t\t\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Restore replaced tainted images in DOM\r\n\t\t\tthis.restoreRemovedObjects();\r\n\t\t}\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvas representation of the [[Sprite]] using canvg.\r\n\t *\r\n\t * @param   options  Options\r\n\t * @return           Canvas\r\n\t */\r\n\tpublic async getCanvasAdvanced(options?: IExportImageOptions): Promise<HTMLCanvasElement> {\r\n\r\n\t\t// Options are set?\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t// Convert external images to data uris\r\n\t\tawait this.imagesToDataURI(this.sprite.dom, options);\r\n\r\n\t\t// Get background\r\n\t\tlet background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n\r\n\t\t// Get canvg\r\n\t\tlet canvg = await this.canvg;\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth;\r\n\t\tlet height = this.sprite.pixelHeight;\r\n\t\tlet font = $dom.findFont(this.sprite.dom);\r\n\t\tlet fontSize = $dom.findFontSize(this.sprite.dom);\r\n\t\tlet scale = options.scale || 1;\r\n\t\tlet pixelRatio = this.getPixelRatio(options);\r\n\r\n\t\t// Check if scale needs to be updated as per min/max dimensions\r\n\t\tscale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n\r\n\t\t// Get SVG representation of the Sprite\r\n\t\tlet data = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tscale,\r\n\t\t\tfont,\r\n\t\t\tfontSize,\r\n\t\t\tbackground\r\n\t\t);\r\n\r\n\t\t// Create canvas and its 2D context\r\n\t\tlet canvas = this.getDisposableCanvas();\r\n\r\n\t\t// Set canvas width/height\r\n\t\tcanvas.style.width = (width * pixelRatio * scale) + 'px';\r\n\t\tcanvas.style.height = (height * pixelRatio * scale) + 'px';\r\n\t\tcanvas.width = width * pixelRatio * scale;\r\n\t\tcanvas.height = height * pixelRatio * scale;\r\n\r\n\t\tlet config: any = {\r\n\t\t\t//ignoreDimensions: true,\r\n\t\t\tuseCORS: true\r\n\t\t};\r\n\r\n\t\tif (pixelRatio != 1) {\r\n\t\t\tconfig.ignoreDimensions = true;\r\n\t\t\tconfig.scaleWidth = width * pixelRatio * scale;\r\n\t\t\tconfig.scaleHeight = height * pixelRatio * scale;\r\n\t\t}\r\n\r\n\t\tawait canvg.fromString(canvas.getContext(\"2d\"), data, config).render();\r\n\r\n\t\treturn canvas;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n\t * export an image using its functions.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Image format\r\n\t * @param options  Options\r\n\t * @return Data uri\r\n\t */\r\n\tpublic async getImageAdvanced(type: imageFormats, options?: IExportImageOptions, includeExtras?: boolean): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(options)) {\r\n\t\t\toptions = this.getFormatOptions(type);\r\n\t\t}\r\n\t\t// Get canvas\r\n\t\tlet canvas = await this.getCanvasAdvanced(options);\r\n\r\n\t\t// Add extra sprites\r\n\t\tif (includeExtras !== false) {\r\n\t\t\tcanvas = await this.addExtras(canvas, options, true);\r\n\t\t}\r\n\r\n\t\t// Convert canvas to data url\r\n\t\tlet uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n\r\n\t\t// Get rid of the canvas\r\n\t\tthis.disposeCanvas(canvas);\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a `<canvas>` element and returns it.\r\n\t *\r\n\t * @return Canvas element\r\n\t */\r\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\r\n\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\tcanvas.style.position = \"fixed\";\r\n\t\tcanvas.style.top = \"-10000px\";\r\n\t\tdocument.body.appendChild(canvas);\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\t/**\r\n\t * Removes canvas.\r\n\t *\r\n\t * @param canvas  Canvas element\r\n\t */\r\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\r\n\t\tdocument.body.removeChild(canvas);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pixel ratio for retina displays.\r\n\t *\r\n\t * @return Pixel ratio\r\n\t */\r\n\tprotected getPixelRatio(options?: IExportImageOptions): number {\r\n\t\t// const scale = options && options.scale ? options.scale : 1;\r\n\t\t// return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n\t\treturn this.useRetina ? $utils.getPixelRatio() : 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates adjusted scale if image does not fit or is larger than min/max\r\n\t * settings.\r\n\t *\r\n\t * @param   width    Width of the source image\r\n\t * @param   height   Height of the source image\r\n\t * @param   scale    Current scale\r\n\t * @param   options  Options\r\n\t * @return           Adjusted scale\r\n\t */\r\n\tprotected getAdjustedScale(width: number, height: number, scale: number, options?: IExportImageOptions): number {\r\n\r\n\t\tif (!options) {\r\n\t\t\treturn scale;\r\n\t\t}\r\n\r\n\t\tlet adjWidth = width * scale;\r\n\t\tlet adjHeight = width * scale;\r\n\r\n\t\t// Check max restrictions\r\n\t\tlet widthScale;\r\n\t\tlet heightScale;\r\n\t\tif (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n\t\t\twidthScale = options.maxWidth / width;\r\n\t\t}\r\n\t\tif (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n\t\t\theightScale = options.maxHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.min(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\t// Check min restrictions\r\n\t\tif (options.minWidth && (adjWidth < options.minWidth)) {\r\n\t\t\twidthScale = options.minWidth / width;\r\n\t\t}\r\n\t\tif (options.minHeight && (adjHeight < options.minHeight)) {\r\n\t\t\theightScale = options.minHeight / height;\r\n\t\t}\r\n\t\tif (widthScale || heightScale) {\r\n\t\t\treturn $math.max(widthScale, heightScale)\r\n\t\t}\r\n\r\n\t\treturn scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts all `<image>` tags in SVG to use data uris instead of external\r\n\t * URLs\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async imagesToDataURI(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all images\r\n\t\tlet images = el.querySelectorAll(\"image\");\r\n\t\tif (images.length) {\r\n\r\n\t\t\t// Init promises\r\n\t\t\tlet promises = [];\r\n\r\n\t\t\t// There are images, process each of them\r\n\t\t\tfor (let count = images.length, i = 0; i < count; i++) {\r\n\r\n\t\t\t\t// Get image and its href\r\n\t\t\t\tlet image = images[i];\r\n\t\t\t\tlet href = image.getAttributeNS(Export.XLINK, \"href\");\r\n\r\n\t\t\t\t// no href?\r\n\t\t\t\tif (!href) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (href.indexOf(\"data:image\") !== -1) {\r\n\t\t\t\t\t// Ignore image if it's already in Data URI format\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// SVG or bitmap image?\r\n\t\t\t\t\tif (href.indexOf(\".svg\") !== -1) {\r\n\t\t\t\t\t\tpromises.push(this.svgToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tpromises.push(this.imageToDataURI(image, options));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tawait Promise.all(promises);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * `foreignObject` elements cannot be exported. This function hides them\r\n\t * temprarily. In the future it might try to convert them to SVG to make them\r\n\t * exportable.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG node\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t */\r\n\tpublic async prepForeignObjects(el: SVGSVGElement, options?: IExportImageOptions): Promise<void> {\r\n\r\n\t\t// Get and process all foreign objects\r\n\t\tlet objects = el.querySelectorAll(\"foreignObject\");\r\n\t\tif (objects.length) {\r\n\r\n\t\t\t// There are foreign objects, process each of them\r\n\t\t\tfor (let count = objects.length, i = 0; i < count; i++) {\r\n\t\t\t\tthis.temporarilyRemoveObject(objects[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n\t * external file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el       SVG element\r\n\t * @param options  Options\r\n\t */\r\n\tpublic async imageToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\r\n\t\t// Create a new image and set its `crossOrigin`. This might not work on some\r\n\t\t// browsers. We'll deal with it if error occurs\r\n\t\tlet img: HTMLImageElement;\r\n\t\ttry {\r\n\r\n\t\t\t// Create image\r\n\t\t\timg = await this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\");\r\n\r\n\t\t\t// Create new canvas\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\t// Draw new image on it via `toDataURL`\r\n\t\t\tcanvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n\r\n\t\t\t// Replace image `href` with data uri\r\n\t\t\t// If we got to this point it means image has loaded, however we might\r\n\t\t\t// still get an error with `toDataURL()`\r\n\t\t\ttry {\r\n\t\t\t\tlet uri = canvas.toDataURL();\r\n\t\t\t\tel.setAttribute(\"href\", uri);\r\n\t\t\t\treturn uri;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\t// Give up and temporarily remove the element href temporarily\r\n\t\t\t\tif (options.keepTainted !== false) {\r\n\t\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t\t});\r\n\t\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tcatch (e) {\r\n\r\n\t\t\t// Give up and temporarily remove the element's href\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n\t * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el        An SVG element\r\n\t * @param options   Options\r\n\t */\r\n\tpublic async svgToDataURI(el: SVGImageElement, options?: IExportImageOptions): Promise<string> {\r\n\t\tlet href = el.getAttributeNS(Export.XLINK, \"href\");\r\n\t\ttry {\r\n\t\t\tlet data = await $net.load(href);\r\n\t\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\t\tcharset: \"base64\",\r\n\t\t\t\ttype: \"svg\",\r\n\t\t\t\toptions: options\r\n\t\t\t}).charset;\r\n\r\n\t\t\tlet uri = this.adapter.apply(\"svgToDataURI\", {\r\n\t\t\t\tdata: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n\t\t\t\toptions: options\r\n\t\t\t}).data;\r\n\r\n\t\t\tel.setAttributeNS(Export.XLINK, \"href\", uri);\r\n\t\t\treturn uri;\r\n\t\t}\r\n\t\tcatch (e) {\r\n\t\t\t// Disable temporarily\r\n\t\t\tif (!options || options.keepTainted !== false) {\r\n\t\t\t\t/*this._removedObjects.push({\r\n\t\t\t\t\t\"element\": el,\r\n\t\t\t\t\t\"originalHref\": href\r\n\t\t\t\t});\r\n\t\t\t\tel.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n\t\t\t\tthis.temporarilyRemoveObject(el);\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Temporarily removes element from DOM, and replaces it with a dummy\r\n\t * placeholder, as well as stores it for later restoration.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param el Node\r\n\t */\r\n\tpublic temporarilyRemoveObject(el: Node, placeholder?: SVGSVGElement): void {\r\n\r\n\t\t// Get parent\r\n\t\tlet parent = el.parentElement || el.parentNode;\r\n\r\n\t\t// Create a placeholder group element if it has not been passed in\r\n\t\tif (!placeholder) {\r\n\t\t\tplaceholder = this.sprite.paper.add(\"g\").node;\r\n\t\t}\r\n\t\tparent.insertBefore(placeholder, el);\r\n\r\n\t\t// Check if we have a textContents we can replace with\r\n\t\t// @todo Perhaps we should explore alternatives to creating text nodes\r\n\t\t// i.e. creating a text version of the HTML-based Text, just for export\r\n\t\t// purposes. Converting HTML into SVG is very complicated\r\n\t\tif (el.textContent) {\r\n\t\t\t/*let text = this.sprite.paper.add(\"text\").node;\r\n\t\t\ttext.textContent = el.textContent;\r\n\t\t\tplaceholder.appendChild(text);\r\n\r\n\t\t\t// Copy properties from the removing element to the placeholder\r\n\t\t\t$dom.copyAttributes(el, placeholder);*/\r\n\t\t}\r\n\r\n\t\t// Remove the old element\r\n\t\tparent.removeChild(el);\r\n\r\n\t\t// Log removed item\r\n\t\tthis._removedObjects.push({\r\n\t\t\t\"element\": el,\r\n\t\t\t\"placeholder\": placeholder\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Restores all (possibly tainted or unsupported) objects that were\r\n\t * temporarily removed when exporting.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic restoreRemovedObjects(): void {\r\n\t\tlet obj: IExportRemovedObject;\r\n\r\n\t\twhile (true) {\r\n\t\t\tobj = this._removedObjects.pop()\r\n\r\n\t\t\tif (!obj) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//obj.element.setAttribute(\"href\", obj.originalHref);\r\n\t\t\tlet parent = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n\t\t\tparent.insertBefore(obj.element, obj.placeholder);\r\n\t\t\t//parent.removeChild(obj.placeholder);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n\t * document does not contain any external images.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return `true` if simplified export can be used\r\n\t */\r\n\tpublic async simplifiedImageExport(): Promise<boolean> {\r\n\r\n\t\tif (this.useSimplifiedExport === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"simplifiedImageExport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\r\n\t\t// Try generating a small SVG-embedded canvas\r\n\t\t// If exception occurs, simplified method is not supported\r\n\t\ttry {\r\n\t\t\tlet canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = 1;\r\n\t\t\tcanvas.height = 1;\r\n\t\t\tlet ctx = canvas.getContext(\"2d\");\r\n\t\t\tlet DOMURL = this.getDOMURL();\r\n\t\t\tlet svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n\t\t\tlet url = DOMURL.createObjectURL(svg);\r\n\t\t\tlet img;\r\n\t\t\ttry {\r\n\t\t\t\timg = await this.loadNewImage(url, 1, 1);\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\t\t\tDOMURL.revokeObjectURL(url);\r\n\t\t\ttry {\r\n\t\t\t\t//let uri = canvas.toDataURL(\"image/png\");\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", true);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tcatch (e) {\r\n\t\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\tregistry.setCache(\"simplifiedImageExport\", false);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new `<image>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param url          URL of the image\r\n\t * @param width        Width (px)\r\n\t * @param height       Height (px)\r\n\t * @param crossOrigin  Cross-Origin setting\r\n\t * @return Promise\r\n\t */\r\n\tpublic loadNewImage(url: string, width?: number, height?: number, crossOrigin?: string): Promise<HTMLImageElement> {\r\n\t\treturn new Promise((success, error) => {\r\n\r\n\t\t\t// New image\r\n\t\t\tlet image: HTMLImageElement;\r\n\t\t\tif (width && height) {\r\n\t\t\t\timage = new Image(width, height);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\timage = new Image();\r\n\t\t\t}\r\n\r\n\t\t\t// Set crossorigin\r\n\t\t\tif (crossOrigin) {\r\n\t\t\t\timage.setAttribute(\"crossOrigin\", crossOrigin);\r\n\t\t\t}\r\n\r\n\t\t\t// Report success on load\r\n\t\t\timage.onload = () => {\r\n\t\t\t\tsuccess(image);\r\n\t\t\t};\r\n\r\n\t\t\tfunction onerror() {\r\n\t\t\t\t// Error occurred. Just in case it's the crossOrigin issue, let's try\r\n\t\t\t\t// stripping off this attribute and trying again\r\n\t\t\t\tif (crossOrigin) {\r\n\r\n\t\t\t\t\t// Retain old uri\r\n\t\t\t\t\tlet currentHref = image.src;\r\n\r\n\t\t\t\t\t// Set up another `onerror` to handle situations where image is not\r\n\t\t\t\t\t// loadable at all (i.e. protected by CORS)\r\n\t\t\t\t\timage.onerror = () => {\r\n\t\t\t\t\t\t// Nope, no luck\r\n\t\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// remove the `crossOrigin` attribute\r\n\t\t\t\t\timage.removeAttribute(\"crossorigin\");\r\n\r\n\t\t\t\t\t// retry\r\n\t\t\t\t\timage.src = \"\";\r\n\t\t\t\t\timage.src = currentHref;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\terror(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Set image error handlers\r\n\t\t\timage.onabort = onerror;\r\n\t\t\timage.onerror = onerror;\r\n\r\n\t\t\t// Trigger load\r\n\t\t\timage.src = url;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current DOM URL.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return URL\r\n\t */\r\n\tpublic getDOMURL(): any {\r\n\t\treturn self.URL || (<any>self).webkitURL || self;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an SVG representation of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t */\r\n\tpublic async getSVG(type: \"svg\", options?: IExportSVGOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\tlet prehidden = this._objectsAlreadyHidden;\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.hideNonExportableSprites();\r\n\t\t}\r\n\r\n\t\t// Wait for required elements to be ready before proceeding\r\n\t\tawait this.awaitValidSprites();\r\n\r\n\t\t// Get dimensions\r\n\t\tlet width = this.sprite.pixelWidth,\r\n\t\t\theight = this.sprite.pixelHeight,\r\n\t\t\tfont = $dom.findFont(this.sprite.dom),\r\n\t\t\tfontSize = $dom.findFontSize(this.sprite.dom);\r\n\r\n\t\t// Get SVG\r\n\t\tlet svg = this.normalizeSVG(\r\n\t\t\tthis.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom),\r\n\t\t\toptions,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\t1,\r\n\t\t\tfont,\r\n\t\t\tfontSize\r\n\t\t);\r\n\r\n\t\t// Prep data URI\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: \"svg\",\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getSVG\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\tif (!prehidden) {\r\n\t\t\tthis.restoreNonExportableSprites();\r\n\t\t}\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n\t * necessary.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param svg       Input SVG\r\n\t * @param options   Options\r\n\t * @param width     Width of the SVG viewport\r\n\t * @param height    Height of the SVG viewport\r\n\t * @param font      Font family to use as a base\r\n\t * @param fontSize  Font size to use as a base\r\n\t * @return Output SVG\r\n\t * @todo Add style params to existing <svg>\r\n\t */\r\n\tpublic normalizeSVG(svg: string, options?: IExportSVGOptions, width?: number, height?: number, scale?: number, font?: string, fontSize?: string, background?: Color): string {\r\n\r\n\t\t// Construct width/height params\r\n\t\tlet dimParams = \"\";\r\n\t\tif (width) {\r\n\t\t\tdimParams += \"width=\\\"\" + Math.round(width * scale) + \"px\\\" \";\r\n\t\t}\r\n\t\tif (height) {\r\n\t\t\tdimParams += \"height=\\\"\" + Math.round(height * scale) + \"px\\\" \";\r\n\t\t}\r\n\r\n\t\t// Apply font settings\r\n\t\tlet styleParams = \"\";\r\n\t\tif (font) {\r\n\t\t\tstyleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n\t\t}\r\n\t\tif (fontSize) {\r\n\t\t\tstyleParams += \"font-size: \" + fontSize + \";\";\r\n\t\t}\r\n\r\n\t\t// Scale\r\n\t\tif (scale) {\r\n\t\t\tdimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n\t\t}\r\n\r\n\t\t// Remove foreign objects temporarily\r\n\t\tlet fos: string[] = [];\r\n\t\tlet ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n\t\tif (ms) {\r\n\t\t\tfor (let i = 0; i < ms.length; i++) {\r\n\t\t\t\tsvg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n\t\t\t\tfos.push(ms[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add missing <svg> enclosure\r\n\t\tif (!svg.match(/<svg/)) {\r\n\t\t\tsvg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tif (dimParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}\r\n\r\n\t\t\t/*if (styleParams !== \"\") {\r\n\t\t\t\t// Clear current params\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n\t\t\t\tsvg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n\t\t\t\t// Add new params\r\n\t\t\t\tsvg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n\t\t\t}*/\r\n\t\t}\r\n\r\n\r\n\t\tif (background) {\r\n\t\t\tsvg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n\t\t\t//svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n\t\t}\r\n\r\n\t\tif ($browser.isInternetExplorer()) {\r\n\t\t\t// IE can't handle exporting <feColorMatrix> for some reason\r\n\t\t\tsvg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n\t\t}\r\n\r\n\t\t// Remove base uri-related stuff\r\n\t\tlet reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n\t\tsvg = svg.replace(reg, \"url(#\");\r\n\r\n\t\t// Remove escaped quotes in url() parameters\r\n\t\tsvg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n\r\n\t\t// Put foreignObjects back in\r\n\t\tif (fos.length) {\r\n\t\t\tfor (let i = 0; i < fos.length; i++) {\r\n\t\t\t\tsvg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsvg = this.adapter.apply(\"normalizeSVG\", {\r\n\t\t\tdata: svg,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn svg;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes an element and returns its contents.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element  An element to serialize\r\n\t * @return A serialized XML\r\n\t */\r\n\tpublic serializeElement(element: HTMLElement | SVGSVGElement | SVGDefsElement): string {\r\n\t\treturn new XMLSerializer().serializeToString(element);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a PDF containing chart image.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Account for header when calculating vertical fit\r\n\t */\r\n\tpublic async getPDF(type: \"pdf\" | \"pdfdata\", options?: IExportPDFOptions): Promise<string> {\r\n\r\n\t\t// Get image\r\n\t\tlet image = await this.getImage(options.imageFormat || \"png\", options);\r\n\r\n\t\t// Load pdfmake\r\n\t\tlet pdfmake = await this.pdfmake;\r\n\r\n\t\t// Defaults\r\n\t\tlet defaultMargins = [30, 30, 30, 30];\r\n\r\n\t\t// Init content for PDF\r\n\t\tlet doc = {\r\n\t\t\tpageSize: options.pageSize || \"A4\",\r\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\r\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\r\n\t\t\tdefaultStyle: {\r\n\t\t\t\tfont: options.font ? options.font.name : undefined,\r\n\t\t\t},\r\n\t\t\t//header: <any>[],\r\n\t\t\tcontent: <any>[]\r\n\t\t};\r\n\r\n\t\t// Should we add title?\r\n\t\tlet title = this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this.title,\r\n\t\t\toptions: options\r\n\t\t}).title;\r\n\r\n\t\tlet extraMargin = 0;\r\n\r\n\t\tif (title) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: title,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tbold: true,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for title\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add page URL?\r\n\t\tif (options.addURL) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttext: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n\t\t\t\tfontSize: options.fontSize,\r\n\t\t\t\tmargin: [0, 0, 0, 15]\r\n\t\t\t});\r\n\r\n\t\t\t// Add some leftover margin for URL\r\n\t\t\textraMargin += 50;\r\n\t\t}\r\n\r\n\t\t// Add image\r\n\t\tif (type != \"pdfdata\") {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\timage: image,\r\n\t\t\t\talignment: options.align || \"left\",\r\n\t\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Add data\r\n\t\tif (type == \"pdfdata\" || options.addData) {\r\n\t\t\tdoc.content.push({\r\n\t\t\t\ttable: await this.getPDFData(\"pdf\", options)\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Apply adapters\r\n\t\tdoc = this.adapter.apply(\"pdfmakeDocument\", {\r\n\t\t\tdoc: doc,\r\n\t\t\toptions: options\r\n\t\t}).doc;\r\n\r\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\r\n\t\tlet vfs: { [path: string]: string } | null = null;\r\n\r\n\t\tfunction addFont(font: IFont) {\r\n\t\t\tconst paths: { [path: string]: string } = {};\r\n\r\n\t\t\tpaths.normal = font.normal.path;\r\n\t\t\tvfs[font.normal.path] = font.normal.bytes;\r\n\r\n\t\t\tif (font.bold) {\r\n\t\t\t\tpaths.bold = font.bold.path;\r\n\t\t\t\tvfs[font.bold.path] = font.bold.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bold = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.italics) {\r\n\t\t\t\tpaths.italics = font.italics.path;\r\n\t\t\t\tvfs[font.italics.path] = font.italics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.italics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tif (font.bolditalics) {\r\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\r\n\t\t\t\tvfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tpaths.bolditalics = font.normal.path;\r\n\t\t\t}\r\n\r\n\t\t\tfonts[font.name] = paths;\r\n\t\t}\r\n\r\n\t\tif (options.font) {\r\n\t\t\tfonts = {};\r\n\t\t\tvfs = {};\r\n\t\t\taddFont(options.font);\r\n\r\n\t\t\tif (options.extraFonts) {\r\n\t\t\t\t$array.each(options.extraFonts, addFont);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create PDF\r\n\t\treturn await new Promise<string>((success, error) => {\r\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getDataUrl((uri: string) => {\r\n\t\t\t\tsuccess(uri);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getPDFData(type: \"pdf\", options?: IExportPDFOptions): Promise<any> {\r\n\r\n\t\t// Init output\r\n\t\tlet content = <any>{\r\n\t\t\t\"body\": <any>[]\r\n\t\t};\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"pdf\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"pdfdata\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"pdf\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n\t\t\t\tcontent.headerRows = 1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"pdfmakeTable\", {\r\n\t\t\ttable: content,\r\n\t\t\toptions: options\r\n\t\t}).table;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of data for use in PDF data table (pdfmake).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @since 4.7.0\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated Data line\r\n\t */\r\n\tpublic getPDFDataRow(row: any, options?: IExportPDFOptions, dataFields?: any, asIs: boolean = false): Array<string> {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"pdfdata\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\t\t\titem = \"\" + item;\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns fit dimensions for available page sizes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param pageSize Page size\r\n\t * @return `[width, height]` in pixels\r\n\t */\r\n\tpublic getPageSizeFit(pageSize: pageSizes, margins?: number | number[], extraMargin: number = 0): number[] {\r\n\r\n\t\t// Check margins\r\n\t\tlet newMargins = [0, 0, 0, 0];\r\n\t\tif (typeof margins == \"number\") {\r\n\t\t\tnewMargins = [margins, margins, margins, margins];\r\n\t\t}\r\n\t\telse if (margins.length == 2) {\r\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n\t\t}\r\n\t\telse if (margins.length == 4) {\r\n\t\t\tnewMargins = margins;\r\n\t\t}\r\n\r\n\t\t// Define available page sizes\r\n\t\tlet sizes = {\r\n\t\t\t\"4A0\": [4767.87, 6740.79],\r\n\t\t\t\"2A0\": [3370.39, 4767.87],\r\n\t\t\tA0: [2383.94, 3370.39],\r\n\t\t\tA1: [1683.78, 2383.94],\r\n\t\t\tA2: [1190.55, 1683.78],\r\n\t\t\tA3: [841.89, 1190.55],\r\n\t\t\tA4: [595.28, 841.89],\r\n\t\t\tA5: [419.53, 595.28],\r\n\t\t\tA6: [297.64, 419.53],\r\n\t\t\tA7: [209.76, 297.64],\r\n\t\t\tA8: [147.40, 209.76],\r\n\t\t\tA9: [104.88, 147.40],\r\n\t\t\tA10: [73.70, 104.88],\r\n\t\t\tB0: [2834.65, 4008.19],\r\n\t\t\tB1: [2004.09, 2834.65],\r\n\t\t\tB2: [1417.32, 2004.09],\r\n\t\t\tB3: [1000.63, 1417.32],\r\n\t\t\tB4: [708.66, 1000.63],\r\n\t\t\tB5: [498.90, 708.66],\r\n\t\t\tB6: [354.33, 498.90],\r\n\t\t\tB7: [249.45, 354.33],\r\n\t\t\tB8: [175.75, 249.45],\r\n\t\t\tB9: [124.72, 175.75],\r\n\t\t\tB10: [87.87, 124.72],\r\n\t\t\tC0: [2599.37, 3676.54],\r\n\t\t\tC1: [1836.85, 2599.37],\r\n\t\t\tC2: [1298.27, 1836.85],\r\n\t\t\tC3: [918.43, 1298.27],\r\n\t\t\tC4: [649.13, 918.43],\r\n\t\t\tC5: [459.21, 649.13],\r\n\t\t\tC6: [323.15, 459.21],\r\n\t\t\tC7: [229.61, 323.15],\r\n\t\t\tC8: [161.57, 229.61],\r\n\t\t\tC9: [113.39, 161.57],\r\n\t\t\tC10: [79.37, 113.39],\r\n\t\t\tRA0: [2437.80, 3458.27],\r\n\t\t\tRA1: [1729.13, 2437.80],\r\n\t\t\tRA2: [1218.90, 1729.13],\r\n\t\t\tRA3: [864.57, 1218.90],\r\n\t\t\tRA4: [609.45, 864.57],\r\n\t\t\tSRA0: [2551.18, 3628.35],\r\n\t\t\tSRA1: [1814.17, 2551.18],\r\n\t\t\tSRA2: [1275.59, 1814.17],\r\n\t\t\tSRA3: [907.09, 1275.59],\r\n\t\t\tSRA4: [637.80, 907.09],\r\n\t\t\tEXECUTIVE: [521.86, 756.00],\r\n\t\t\tFOLIO: [612.00, 936.00],\r\n\t\t\tLEGAL: [612.00, 1008.00],\r\n\t\t\tLETTER: [612.00, 792.00],\r\n\t\t\tTABLOID: [792.00, 1224.00]\r\n\t\t};\r\n\r\n\t\t// Calculate size\r\n\t\tlet fitSize = sizes[pageSize]\r\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\r\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n\t\treturn fitSize;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an Excel file of chart's data.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type     Type of the export\r\n\t * @param options  Options\r\n\t * @return Promise\r\n\t * @async\r\n\t * @todo Handle dates\r\n\t * @todo Support for multi-sheet\r\n\t */\r\n\tpublic async getExcel(type: \"xlsx\", options?: IExportExcelOptions): Promise<string> {\r\n\r\n\t\t// Load xlsx\r\n\t\tlet XLSX = await this.xlsx;\r\n\r\n\t\t// Create workbook options\r\n\t\tlet wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n\t\t\toptions: {\r\n\t\t\t\tbookType: \"xlsx\",\r\n\t\t\t\tbookSST: false,\r\n\t\t\t\ttype: \"base64\",\r\n\t\t\t\t//dateNF: 'yyyy-mm-dd'\r\n\t\t\t}\r\n\t\t}).options;\r\n\r\n\t\t// Get sheet name\r\n\t\tlet sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n\t\t\tname: this.title || this.language.translate(\"Data\")\r\n\t\t}).name);\r\n\r\n\t\t// Create a workbook\r\n\t\tlet wb = {\r\n\t\t\tSheetNames: <any>[sheetName],\r\n\t\t\tSheets: <any>{}\r\n\t\t};\r\n\r\n\t\t// Init worksheet data\r\n\t\tlet data: Array<any> = [];\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"xslx\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"xlsx\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = this.data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"xlsx\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tdata.push(this.getExcelRow(dataRow, options, undefined, true));\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\t//console.log(a, b)\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tdata.push(this.getExcelRow(dataFields, options, undefined, true));\r\n\t\t\t}\r\n\r\n\t\t\t// Add lines\r\n\t\t\tfor (let len = this.data.length, i = 0; i < len; i++) {\r\n\t\t\t\tdata.push(this.getExcelRow(this.data[i], options, dataFields));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Create sheet and add data\r\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n\r\n\t\t// Apply adapters\r\n\t\twb = this.adapter.apply(\"xlsxWorkbook\", {\r\n\t\t\tworkbook: wb,\r\n\t\t\toptions: options\r\n\t\t}).workbook;\r\n\r\n\t\t// Generate data uri\r\n\t\tlet uri = this.adapter.apply(\"getExcel\", {\r\n\t\t\tdata: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\t}\r\n\r\n\t/**\r\n\t * This is needed to work around Excel limitations.\r\n\t *\r\n\t * @param name  Source name\r\n\t * @return Normalized name\r\n\t */\r\n\tprivate normalizeExcelSheetName(name: string): string {\r\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n\t\treturn $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n\t}\r\n\r\n\t/**\r\n\t * Rertuns an array of values to be used as Excel row.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         Row data\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Array of values\r\n\t */\r\n\tpublic getExcelRow(row: any, options?: IExportExcelOptions, dataFields?: any, asIs: boolean = false): any[] {\r\n\r\n\t\t// Init\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"xlsx\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"xlsx\">(key, value, options, true);\r\n\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as CSV.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getCSV(type: \"csv\", options?: IExportCSVOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\t// Init output\r\n\t\tlet csv = \"\";\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tlet br = \"\";\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"csv\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"csv\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\r\n\t\t\t\tif (options.reverse) {\r\n\t\t\t\t\tcsv = row + br + csv;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcsv += br + row;\r\n\t\t\t\t}\r\n\t\t\t\tbr = \"\\n\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getCSV\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv): csv,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of CSV data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated CSV line\r\n\t */\r\n\tpublic getCSVRow(row: any, options?: IExportCSVOptions, dataFields?: any, asIs: boolean = false): string {\r\n\r\n\t\t// Init\r\n\t\tlet separator = options.separator || \",\";\r\n\t\tlet items: any[] = [];\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// Process each row item\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Check if we need to skip\r\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\r\n\t\t\t/*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n\t\t\t\treturn;\r\n\t\t\t}*/\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"csv\">(key, value, options);\r\n\r\n\t\t\t// Cast and escape doublequotes\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/\"/g, '\"\"');\r\n\r\n\t\t\t// Enclose into double quotes\r\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add to item\r\n\t\t\titems.push(item);\r\n\t\t}, (a, b) => {\r\n\t\t\t//console.log(a, b)\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\treturn items.join(separator);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data formatted as HTML table.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getHTML(type: \"html\", options?: IExportHTMLOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"<table>\";\r\n\t\tif (options.tableClass) {\r\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFields;\r\n\r\n\t\t// Add rows\r\n\t\tconst data = this.data;\r\n\r\n\t\t// Vertical or horizontal (default) layout\r\n\t\tif (options.pivot) {\r\n\r\n\t\t\t// Data fields order\r\n\t\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\t\tformat: \"html\"\r\n\t\t\t}).dataFieldsOrder;\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\r\n\t\t\t\tlet dataRow = [];\r\n\t\t\t\tif (options.addColumnNames) {\r\n\t\t\t\t\tdataRow.push(val);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\t\tlet dataValue = data[i][key];\r\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat<\"html\">(key, dataValue, options, true));\r\n\t\t\t\t}\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\r\n\t\t\t}, (a, b) => {\r\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\t\tif (ai > bi) {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t\telse if (ai < bi) {\r\n\t\t\t\t\treturn 1\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\r\n\t\t}\r\n\r\n\t\telse {\r\n\t\t\t// Add column names?\r\n\t\t\tif (options.addColumnNames) {\r\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n<tbody>\";\r\n\r\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\r\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n\t\t\t}\r\n\r\n\t\t\thtml += \"\\n</tbody>\";\r\n\t\t}\r\n\r\n\t\thtml += \"\\n</table>\";\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getHTML\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a row of HTML data.\r\n\t *\r\n\t * @since 4.7.0\r\n\t * @ignore Exclude from docs\r\n\t * @param  row         An object holding data for the row\r\n\t * @param  options     Options\r\n\t * @param  dataFields  Data fields\r\n\t * @param  asIs        Do not try to convert to dates\r\n\t * @return Formated HTML row\r\n\t */\r\n\tpublic getHTMLRow(row: any, options?: IExportHTMLOptions, dataFields?: any, asIs: boolean = false, headerRow: boolean = false): string {\r\n\r\n\t\t// Init output\r\n\t\tlet html = \"\\t<tr>\";\r\n\t\tif (options.rowClass) {\r\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n\t\t}\r\n\r\n\t\t// Data fields\r\n\t\tif (!dataFields) {\r\n\t\t\tdataFields = row;\r\n\t\t}\r\n\r\n\t\t// Data fields order\r\n\t\tconst dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n\t\t\tdataFieldsOrder: this.dataFieldsOrder,\r\n\t\t\tformat: \"html\"\r\n\t\t}).dataFieldsOrder;\r\n\r\n\t\t// th or dh?\r\n\t\tconst tag = headerRow ? \"th\" : \"td\";\r\n\r\n\t\t// Process each row item\r\n\t\tlet first = true;\r\n\t\t$object.eachOrdered(dataFields, (key, name) => {\r\n\r\n\t\t\t// Get value\r\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\r\n\r\n\t\t\t// Convert dates\r\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat<\"html\">(key, value, options);\r\n\r\n\t\t\t// Escape HTML entities\r\n\t\t\titem = \"\" + item;\r\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\r\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\r\n\t\t\t});\r\n\r\n\t\t\t// Which tag to use\r\n\t\t\tlet useTag = tag;\r\n\t\t\tif (options.pivot && first) {\r\n\t\t\t\tuseTag = \"th\";\r\n\t\t\t}\r\n\r\n\t\t\t// Add cell\r\n\t\t\tif (options.cellClass) {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n\t\t\t}\r\n\r\n\t\t\tfirst = false;\r\n\t\t}, (a, b) => {\r\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\r\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\r\n\t\t\tif (ai > bi) {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse if (ai < bi) {\r\n\t\t\t\treturn -1\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\thtml += \"\\n\\t</tr>\";\r\n\r\n\t\treturn html;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns chart's data in JSON format.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param type       Type of the export\r\n\t * @param options    Options\r\n\t * @param encodeURI  If true, will return result will be data URI\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async getJSON(type: \"json\", options?: IExportJSONOptions, encodeURI: boolean = true): Promise<string> {\r\n\r\n\t\t// Check if we need to regenerate data based on `dataFields`\r\n\t\tlet data: any[];\r\n\t\tconst dataFields = this.adapter.apply(\"formatDataFields\", {\r\n\t\t\tdataFields: this.dataFields,\r\n\t\t\tformat: \"csv\"\r\n\t\t}).dataFields;\r\n\t\tif (!this._dynamicDataFields) {\r\n\t\t\tdata = [];\r\n\t\t\tconst sourceData = this.data;\r\n\t\t\tfor (let len = sourceData.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet value = sourceData[i];\r\n\t\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t\tlet newValue: any = {};\r\n\t\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\t\tif ($type.hasValue(dataFields[field])) {\r\n\t\t\t\t\t\t\tnewValue[dataFields[field]] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.push(newValue);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdata = this.data;\r\n\t\t}\r\n\r\n\t\t// Stringify JSON\r\n\t\tlet json = JSON.stringify(data, (key, value) => {\r\n\t\t\tif (typeof value == \"object\") {\r\n\t\t\t\t$object.each(value, (field, item) => {\r\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat<\"json\">(field, item, options);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, options.indent);\r\n\r\n\t\t// Add content type\r\n\t\tlet charset = this.adapter.apply(\"charset\", {\r\n\t\t\tcharset: \"charset=utf-8\",\r\n\t\t\ttype: type,\r\n\t\t\toptions: options\r\n\t\t}).charset;\r\n\r\n\t\tlet uri = this.adapter.apply(\"getJSON\", {\r\n\t\t\tdata: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n\t\t\toptions: options\r\n\t\t}).data;\r\n\r\n\t\treturn uri;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Converts the value to proper date format.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param  field         Field name\r\n\t * @param  value         Value\r\n\t * @param  options       Options\r\n\t * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n\t * @return Formatted date value or unmodified value\r\n\t */\r\n\tpublic convertToSpecialFormat<Key extends \"json\" | \"csv\" | \"xlsx\" | \"html\" | \"pdf\">(field: string, value: any, options?: IExportOptions[Key], keepOriginal?: boolean): any {\r\n\r\n\t\t// Is this a timestamp or duration?\r\n\t\tif (typeof value == \"number\") {\r\n\t\t\tif (this.isDateField(field)) {\r\n\t\t\t\tvalue = new Date(value);\r\n\t\t\t}\r\n\t\t\telse if (this.isDurationField(field)) {\r\n\t\t\t\treturn this.durationFormatter.format(value, this.durationFormat);\r\n\t\t\t}\r\n\t\t\telse if (this.isNumberField(field) && this.numberFormat) {\r\n\t\t\t\treturn this.numberFormatter.format(value, this.numberFormat);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value instanceof Date) {\r\n\t\t\tif (options.useTimestamps) {\r\n\t\t\t\tvalue = value.getTime();\r\n\t\t\t}\r\n\t\t\telse if (options.useLocale) {\r\n\t\t\t\tif (!keepOriginal) {\r\n\t\t\t\t\tvalue = value.toLocaleString();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = this.dateFormatter.format(value, this.dateFormat);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n\t\t\tvalue = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts empty value based on `emptyAs` option.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic convertEmptyValue<Key extends \"csv\" | \"xlsx\">(field: string, value: any, options?: IExportOptions[Key]): any {\r\n\t\treturn $type.hasValue(value) ? value : options.emptyAs;\r\n\t}\r\n\r\n\t/**\r\n\t * Triggers download of the file.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param uri       Data URI with file content\r\n\t * @param fileName  File name\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async download(uri: string, fileName: string): Promise<boolean> {\r\n\r\n\t\tif (this.msBlobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\r\n\t\t\t */\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\r\n\t\t\t// Check if we need to Base64-decode\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\t// Prep Blob and force the download\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.blobDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Supports Blob object.\r\n\t\t\t * Use it.\r\n\t\t\t */\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\r\n\t\t\t// Extract content type and get pure data without headers\r\n\t\t\tlet parts = uri.split(\";\");\r\n\t\t\tlet contentType = parts.shift().replace(/data:/, \"\");\r\n\r\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n\r\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet decoded = atob(uri);\r\n\t\t\t\t\turi = decoded;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\r\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\t\tlink.href = url;\r\n\t\t\t\tlink.download = fileName;\r\n\t\t\t\tlink.click();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tdocument.body.removeChild(link);\r\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t\t}, 100);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Dissect uri into array\r\n\t\t\tlet chars = new Array(uri.length);\r\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\r\n\t\t\t\tlet charCode = uri.charCodeAt(i);\r\n\t\t\t\tchars[i] = charCode;\r\n\t\t\t}\r\n\r\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n\t\t\tlet url = window.URL.createObjectURL(blob);\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.download = fileName;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\twindow.URL.revokeObjectURL(url);\r\n\t\t\t}, 100);\r\n\r\n\t\t}\r\n\r\n\t\telse if (this.linkDownloadSupport()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * For regular browsers, we create a link then simulate a click on it\r\n\t\t\t */\r\n\r\n\t\t\tlet link = document.createElement(\"a\");\r\n\t\t\tlink.download = fileName;\r\n\t\t\tlink.href = uri;\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\r\n\t\t}\r\n\t\telse if (this.legacyIE()) {\r\n\r\n\t\t\t/**\r\n\t\t\t * Old IEs (9 and down) we will use an <iframe> trick\r\n\t\t\t */\r\n\r\n\t\t\tlet parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n\r\n\t\t\tif (parts.length === 4) {\r\n\t\t\t\t// Base64-encoded or text-based stuff?\r\n\t\t\t\tif (parts[2] == \"base64\") {\r\n\r\n\t\t\t\t\t// Base64-encoded - probably an image\r\n\t\t\t\t\tif (parts[1].match(/^image\\//)) {\r\n\r\n\t\t\t\t\t\t// Yep, an image. Let's create a temporary image placeholder,\r\n\t\t\t\t\t\t// so that user can use do Save As.\r\n\t\t\t\t\t\tthis.showModal(\r\n\t\t\t\t\t\t\t\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n\t\t\t\t\t\t\t\"<p>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\"\r\n\t\t\t\t\t\t\t) +\r\n\t\t\t\t\t\t\t\"</p>\" +\r\n\t\t\t\t\t\t\t\"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\r\n\t\t\t\t\t\t\t\t\"(Press ESC to close this message)\"\r\n\t\t\t\t\t\t\t) + \"</small></p>\",\r\n\t\t\t\t\t\t\tthis.language.translate(\"Image Export Complete\")\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\r\n\t\t\t\t\t// Text-based\r\n\r\n\t\t\t\t\t// IE9 is trippy about saving files with filenames of the extensions it\r\n\t\t\t\t\t// does not know. Let's use .txt extension for all text-based export\r\n\t\t\t\t\t// formats, except SVG.\r\n\t\t\t\t\tlet contentType;\r\n\t\t\t\t\tif (fileName.match(/\\.svg$/)) {\r\n\t\t\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcontentType = \"text/plain\";\r\n\t\t\t\t\t\tfileName += \".txt\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create temporary iframe\r\n\t\t\t\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\t\t\t\tiframe.width = \"1px\";\r\n\t\t\t\t\tiframe.height = \"1px\"\r\n\t\t\t\t\tiframe.style.display = \"none\";\r\n\t\t\t\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t\t\t\t// Add our stuff to the document of the iframe and trigger save as\r\n\t\t\t\t\tlet idoc = iframe.contentDocument;\r\n\t\t\t\t\tidoc.open(contentType, \"replace\");\r\n\t\t\t\t\t// TODO test this with various encodings (e.g. UTF)\r\n\t\t\t\t\t//idoc.charset = parts[2].replace(/charset=/, \"\");\r\n\t\t\t\t\tidoc.write(decodeURIComponent(parts[3]));\r\n\t\t\t\t\tidoc.close();\r\n\t\t\t\t\tidoc.execCommand(\"SaveAs\", true, fileName);\r\n\r\n\t\t\t\t\t// Destroy the iframe\r\n\t\t\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\t/**\r\n\t\t\t * Something else - perhaps a mobile.\r\n\t\t\t * Let's just display it in the same page.\r\n\t\t\t * (hey we don't like it either)\r\n\t\t\t */\r\n\t\t\twindow.location.href = uri;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if browser has any supported methods to trigger download\r\n\t * of a binary file.\r\n\t *\r\n\t * @return Supports downloads?\r\n\t */\r\n\tpublic downloadSupport(): boolean {\r\n\t\t//return !this.legacyIE();\r\n\t\treturn this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports \"download\" attribute on links.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic linkDownloadSupport(): boolean {\r\n\t\t// Do we have this cached?\r\n\t\tlet cache = registry.getCache(\"linkDownloadSupport\");\r\n\t\tif (cache === false || cache === true) {\r\n\t\t\treturn cache;\r\n\t\t}\r\n\t\tlet a = document.createElement(\"a\");\r\n\t\tlet res = typeof a.download !== \"undefined\";\r\n\t\tregistry.setCache(\"linkDownloadSupport\", res);\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic blobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.Blob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if the browser supports download via `msBlob`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Browser supports triggering downloads?\r\n\t */\r\n\tpublic msBlobDownloadSupport(): boolean {\r\n\t\treturn $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this is a legacy version of IE.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return IE9 or less?\r\n\t */\r\n\tpublic legacyIE(): boolean {\r\n\t\t// Create a temporary <div> with conditional tags in it an an <i> tag.\r\n\t\t// Count <i>s. If there are some, we have IE9 or late on our hands.\r\n\t\tlet div = document.createElement(\"div\");\r\n\t\tdiv.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n\t\treturn div.getElementsByTagName(\"i\").length == 1;\r\n\t}\r\n\r\n\t/**\r\n\t * Initiates print of the chart.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @param data     Data URI for the image\r\n\t * @param options  Options\r\n\t * @param title    Optional title to use (uses window's title by default)\r\n\t * @return Promise\r\n\t * @async\r\n\t */\r\n\tpublic async print(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\tif (options.printMethod == \"css\") {\r\n\t\t\treturn this.printViaCSS(data, options, title);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.printViaIframe(data, options, title);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected async printViaCSS(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\t\t// Save current scroll position\r\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n\r\n\t\t// Hide all current nodes of the document and save their current states\r\n\t\t// of `display` style\r\n\t\t/*let states: Array<string> = [];\r\n\t\tlet items = document.body.childNodes;\r\n\t\tfor (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\tstates[i] = item.style.display;\r\n\t\t\t\titem.style.display = \"none\";\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\t\t// Hide all document nodes by applyin custom CSS\r\n\t\tlet rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n\t\t\t\"display\": \"none\",\r\n\t\t\t\"position\": \"fixed\",\r\n\t\t\t\"visibility\": \"hidden\",\r\n\t\t\t\"opacity\": \"0\",\r\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n\t\t});\r\n\r\n\t\t// Replace title?\r\n\t\tlet originalTitle: string;\r\n\t\tif (title && document && document.title) {\r\n\t\t\toriginalTitle = document.title;\r\n\t\t\tdocument.title = title;\r\n\t\t}\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\timg.style.display = \"block\";\r\n\t\timg.style.position = \"relative\";\r\n\t\timg.style.visibility = \"visible\";\r\n\t\timg.style.opacity = \"1\";\r\n\t\timg.style.clipPath = \"none\";\r\n\t\tdocument.body.appendChild(img);\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\t(<any>window).print();\r\n\t\t}, 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(img);\r\n\r\n\t\t\t// Reset back all elements\r\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\r\n\t\t\t\tlet item = <HTMLElement>items[i];\r\n\t\t\t\tif ($dom.isElement(item)) {\r\n\t\t\t\t\titem.style.display = states[i];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\trule.dispose();\r\n\r\n\t\t\t// Restore title\r\n\t\t\tif (originalTitle) {\r\n\t\t\t\tdocument.title = document.title;\r\n\t\t\t}\r\n\r\n\t\t\t// Scroll back the document the way it was before\r\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n\r\n\t\t}, options.delay || 500);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected async printViaIframe(data: string, options?: IExportPrintOptions, title?: string): Promise<boolean> {\r\n\r\n\t\t// Create an iframe\r\n\t\tlet iframe = document.createElement(\"iframe\");\r\n\t\tiframe.style.visibility = \"hidden\";\r\n\t\tdocument.body.appendChild(iframe);\r\n\r\n\t\t// This is needed for FireFox\r\n\t\tiframe.contentWindow.document.open();\r\n\t\tiframe.contentWindow.document.close();\r\n\r\n\t\t// Create and add exported image\r\n\t\tlet img = new Image();\r\n\t\timg.src = data;\r\n\t\timg.style.maxWidth = \"100%\";\r\n\t\tif (title) {\r\n\t\t\tiframe.contentWindow.document.title = title;\r\n\t\t}\r\n\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\r\n\t\t(<any>iframe).load = function() {\r\n\t\t\tiframe.contentWindow.document.body.appendChild(img);\r\n\t\t};\r\n\r\n\t\t// Print\r\n\t\tthis.setTimeout(() => {\r\n\t\t\ttry {\r\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\r\n\t\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\t(<any>iframe).contentWindow.print();\r\n\t\t\t}\r\n\t\t}, options.delay || 50);\r\n\r\n\t\t// Delay needs to be at least a second for iOS devices\r\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\r\n\t\tif (isIOS && (options.delay < 1000)) {\r\n\t\t\toptions.delay = 1000;\r\n\t\t}\r\n\t\telse if (options.delay < 100) {\r\n\t\t\toptions.delay = 100;\r\n\t\t}\r\n\r\n\t\t// Delay function that resets back the document the way ot was before\r\n\t\tthis.setTimeout(() => {\r\n\r\n\t\t\t// Remove image\r\n\t\t\tdocument.body.removeChild(iframe);\r\n\r\n\t\t}, options.delay + 50 || 100);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Finds a background color for the element. If element is transparent it goes\r\n\t * up the DOM hierarchy to find a parent element that does.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param element Element\r\n\t * @return Color code\r\n\t */\r\n\tpublic findBackgroundColor(element: Element): Color {\r\n\r\n\t\t// Check if element has styles set\r\n\t\tlet opacity = 1,\r\n\t\t\tcurrentColor = (<string>getComputedStyle(element, \"background-color\"));\r\n\r\n\t\t// Check opacity\r\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n\t\t\topacity = 0;\r\n\t\t}\r\n\r\n\t\tif (opacity == 0) {\r\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\r\n\r\n\t\t\t// Completely transparent. Look for a parent\r\n\t\t\tif (parent) {\r\n\t\t\t\treturn this.findBackgroundColor(parent);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn color(\"#fff\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn color(currentColor, opacity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to a container to be used to place [[ExportMenu]] in.\r\n\t *\r\n\t * @param value Reference\r\n\t */\r\n\tpublic set container(value: HTMLElement) {\r\n\t\tthis._container = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reference\r\n\t */\r\n\tpublic get container(): HTMLElement {\r\n\t\treturn this.adapter.apply(\"container\", {\r\n\t\t\tcontainer: this._container\r\n\t\t}).container;\r\n\t}\r\n\r\n\t/**\r\n\t * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n\t * internal elements.\r\n\t *\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set sprite(value: Sprite) {\r\n\t\tthis._sprite = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get sprite(): Sprite {\r\n\t\treturn this.adapter.apply(\"sprite\", {\r\n\t\t\tsprite: this._sprite\r\n\t\t}).sprite;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of extra [[Sprite]] elements to include in export.\r\n\t *\r\n\t * It can be used to export any external elements, or even other charts.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.extraSprites.push(chart2);\r\n\t * ```\r\n\t *\r\n\t * @since 4.2.0\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set extraSprites(value: Array<Sprite | IExportCanvas>) {\r\n\t\tthis._extraSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get extraSprites(): Array<Sprite | IExportCanvas> {\r\n\t\treturn this.adapter.apply(\"extraSprites\", {\r\n\t\t\textraSprites: this._extraSprites\r\n\t\t}).extraSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of [[Sprite]] elements that need to be valid before export\r\n\t * commences.\r\n\t *\r\n\t * If any of those elements is not completely ready when export is triggered,\r\n\t * the export will wait until they are (their `validated` event triggers)\r\n\t * before going through with the export opertaion.\r\n\t *\r\n\t * This is useful if you need to modify chart appearance for the export.\r\n\t *\r\n\t * E.g.:\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Add watermark\r\n\t * let watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Add watermark\r\n\t * var watermark = chart.createChild(am4core.Label);\r\n\t * watermark.text = \"Copyright (C) 2019\";\r\n\t * watermark.disabled = true;\r\n\t *\r\n\t * // Add watermark to validated sprites\r\n\t * chart.exporting.validateSprites.push(watermark);\r\n\t *\r\n\t * // Enable watermark on export\r\n\t * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n\t *   watermark.disabled = false;\r\n\t * });\r\n\t *\r\n\t * // Disable watermark when export finishes\r\n\t * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n\t *   watermark.disabled = true;\r\n\t * });\r\n\t * ```\r\n\t *\r\n\t * @since 4.6.8\r\n\t * @param value Sprite\r\n\t */\r\n\tpublic set validateSprites(value: Array<Sprite>) {\r\n\t\tthis._validateSprites = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Sprite\r\n\t */\r\n\tpublic get validateSprites(): Array<Sprite> {\r\n\t\treturn this.adapter.apply(\"validateSprites\", {\r\n\t\t\tvalidateSprites: this._validateSprites\r\n\t\t}).validateSprites;\r\n\t}\r\n\r\n\t/**\r\n\t * Data to export.\r\n\t *\r\n\t * @param value Data\r\n\t */\r\n\tpublic set data(value: any) {\r\n\t\tthis._data = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Data\r\n\t */\r\n\tpublic get data(): any {\r\n\t\treturn this.adapter.apply(\"data\", {\r\n\t\t\tdata: this._data\r\n\t\t}).data;\r\n\t}\r\n\r\n\t/**\r\n\t * Data fields in `{ field: fieldName }` format. Those are used for\r\n\t * exporting in data formats to name the columns.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n\t * @param value Field names\r\n\t */\r\n\tpublic set dataFields(value: any) {\r\n\t\tthis._dataFields = value;\r\n\t\tthis._dynamicDataFields = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Field names `{ field: fieldName }`\r\n\t */\r\n\tpublic get dataFields(): any {\r\n\t\tif (!this._dataFields) {\r\n\t\t\tthis.generateDataFields();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dataFields\", {\r\n\t\t\tdataFields: this._dataFields\r\n\t\t}).dataFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Called after target chart's data updates.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tpublic handleDataUpdated(): void {\r\n\t\tif (this._dynamicDataFields) {\r\n\t\t\tthis._dataFields = undefined;\r\n\t\t}\r\n\t\tconst hasData = this.data.length > 0;\r\n\t\tif (this._prevHasData != hasData) {\r\n\t\t\tthis._prevHasData = hasData;\r\n\t\t\tif (this.menu) {\r\n\t\t\t\tthis.menu.invalidate();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @param value DateFormatter instance\r\n\t */\r\n\tpublic set dateFormatter(value: DateFormatter) {\r\n\t\tthis._dateFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DateFormatter instance\r\n\t */\r\n\tpublic get dateFormatter(): DateFormatter {\r\n\t\tif (!this._dateFormatter) {\r\n\t\t\tthis._dateFormatter = new DateFormatter();\r\n\t\t\tthis._dateFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFormatter\", {\r\n\t\t\tdateFormatter: this._dateFormatter\r\n\t\t}).dateFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @param value Date format\r\n\t */\r\n\tpublic set dateFormat(value: $type.Optional<string | Intl.DateTimeFormatOptions>) {\r\n\t\tthis._dateFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date format\r\n\t */\r\n\tpublic get dateFormat(): $type.Optional<string | Intl.DateTimeFormatOptions> {\r\n\t\treturn this.adapter.apply(\"dateFormat\", {\r\n\t\t\tdateFormat: this._dateFormat\r\n\t\t}).dateFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold date values.\r\n\t *\r\n\t * @param value Date field list\r\n\t */\r\n\tpublic set dateFields(value: List<string>) {\r\n\t\tthis._dateFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Date field list\r\n\t */\r\n\tpublic get dateFields(): List<string> {\r\n\t\tif (!this._dateFields) {\r\n\t\t\tthis._dateFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"dateFields\", {\r\n\t\t\tdateFields: this._dateFields\r\n\t\t}).dateFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value NumberFormatter instance\r\n\t */\r\n\tpublic set numberFormatter(value: NumberFormatter) {\r\n\t\tthis._numberFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A NumberFormatter instance\r\n\t */\r\n\tpublic get numberFormatter(): NumberFormatter {\r\n\t\tif (!this._numberFormatter) {\r\n\t\t\tthis._numberFormatter = new NumberFormatter();\r\n\t\t\tthis._numberFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFormatter\", {\r\n\t\t\tnumberFormatter: this._numberFormatter\r\n\t\t}).numberFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n\t * format if not set.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number format\r\n\t */\r\n\tpublic set numberFormat(value: $type.Optional<string>) {\r\n\t\tthis._numberFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number format\r\n\t */\r\n\tpublic get numberFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"numberFormat\", {\r\n\t\t\tnumberFormat: this._numberFormat\r\n\t\t}).numberFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold number values.\r\n\t *\r\n\t * @since 4.5.15\r\n\t * @param value Number field list\r\n\t */\r\n\tpublic set numberFields(value: List<string>) {\r\n\t\tthis._numberFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number field list\r\n\t */\r\n\tpublic get numberFields(): List<string> {\r\n\t\tif (!this._numberFields) {\r\n\t\t\tthis._numberFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"numberFields\", {\r\n\t\t\tnumberFields: this._numberFields\r\n\t\t}).numberFields;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[DurationFormatter]] to use when formatting duration values when\r\n\t * exporting data.\r\n\t *\r\n\t * @param value  DurationFormatter instance\r\n\t */\r\n\tpublic set durationFormatter(value: DurationFormatter) {\r\n\t\tthis._durationFormatter = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A DurationFormatter instance\r\n\t */\r\n\tpublic get durationFormatter(): DurationFormatter {\r\n\t\tif (!this._durationFormatter) {\r\n\t\t\tthis._durationFormatter = new DurationFormatter();\r\n\t\t\tthis._durationFormatter.language = this.language;\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFormatter\", {\r\n\t\t\tdurationFormatter: this._durationFormatter\r\n\t\t}).durationFormatter;\r\n\t}\r\n\r\n\t/**\r\n\t * A format to use when formatting values from `durationFields`.\r\n\t * Will use [[DurationFormatter]] format if not set.\r\n\t *\r\n\t * @param value Duration format\r\n\t */\r\n\tpublic set durationFormat(value: $type.Optional<string>) {\r\n\t\tthis._durationFormat = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration format\r\n\t */\r\n\tpublic get durationFormat(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"durationFormat\", {\r\n\t\t\tdurationFormat: this._durationFormat\r\n\t\t}).durationFormat;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of fields that hold duration values.\r\n\t *\r\n\t * @param value Duration field list\r\n\t */\r\n\tpublic set durationFields(value: List<string>) {\r\n\t\tthis._durationFields = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Duration field list\r\n\t */\r\n\tpublic get durationFields(): List<string> {\r\n\t\tif (!this._durationFields) {\r\n\t\t\tthis._durationFields = new List<string>();\r\n\t\t}\r\n\t\treturn this.adapter.apply(\"durationFields\", {\r\n\t\t\tdurationFields: this._durationFields\r\n\t\t}).durationFields;\r\n\t}\r\n\r\n\t/**\r\n\t * Generates data fields out of the first row of data.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic generateDataFields(): void {\r\n\t\tthis._dataFields = {};\r\n\t\tif (this.data.length) {\r\n\t\t\t$array.each(this.data, (row) => {\r\n\t\t\t\t$object.each(row, (key, value) => {\r\n\t\t\t\t\tif (!$type.hasValue(this._dataFields[key])) {\r\n\t\t\t\t\t\tthis._dataFields[key] = this.adapter.apply(\"dataFieldName\", {\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tfield: key\r\n\t\t\t\t\t\t}).name;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `dateFields` property to determine if this field holds\r\n\t * dates.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDateField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDateField\", {\r\n\t\t\tisDateField: this.dateFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDateField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `numberFields` property to determine if this field holds\r\n\t * numbers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a number field\r\n\t */\r\n\tpublic isNumberField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isNumberField\", {\r\n\t\t\tisNumberField: this.numberFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isNumberField;\r\n\t}\r\n\r\n\t/**\r\n\t * Cheks against `durationFields` property to determine if this field holds\r\n\t * durations.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param field   Field name\r\n\t * @param options Options\r\n\t * @return `true` if it's a date field\r\n\t */\r\n\tpublic isDurationField(field: string): boolean {\r\n\t\treturn this.adapter.apply(\"isDurationField\", {\r\n\t\t\tisDurationField: this.durationFields.contains(field),\r\n\t\t\tfield: field\r\n\t\t}).isDurationField;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns proper content type for the export type.\r\n\t *\r\n\t * @param type  Export format/type\r\n\t * @return Proper content type, i.e. \"image/jpeg\"\r\n\t */\r\n\tpublic getContentType<Key extends keyof IExportOptions>(type: Key): string {\r\n\r\n\t\tlet contentType = \"\";\r\n\t\tswitch (type) {\r\n\t\t\tcase \"png\":\r\n\t\t\tcase \"gif\":\r\n\t\t\t\tcontentType = \"image/\" + type;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"jpg\":\r\n\t\t\t\tcontentType = \"image/jpeg\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"svg\":\r\n\t\t\t\tcontentType = \"image/svg+xml\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"csv\":\r\n\t\t\t\tcontentType = \"text/csv\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tcontentType = \"application/json\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"html\":\r\n\t\t\t\tcontentType = \"text/html\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pdf\":\r\n\t\t\tcase \"pdfdata\":\r\n\t\t\t\tcontentType = \"application/pdf\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"xlsx\":\r\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn this.adapter.apply(\"contentType\", {\r\n\t\t\tcontentType: contentType,\r\n\t\t\ttype: type\r\n\t\t}).contentType;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * A file prefix to be used for all exported formats.\r\n\t *\r\n\t * Export will apply format-related extension to it. E.g. if this is set to\r\n\t * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n\t *\r\n\t * @param value File prefix\r\n\t */\r\n\tpublic set filePrefix(value: string) {\r\n\t\tthis._filePrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return File prefix\r\n\t */\r\n\tpublic get filePrefix(): string {\r\n\t\treturn this.adapter.apply(\"filePrefix\", {\r\n\t\t\tfilePrefix: this._filePrefix\r\n\t\t}).filePrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * A background color to be used for exported images. If set, this will\r\n\t * override the automatically acquired background color.\r\n\t *\r\n\t * @param value Color\r\n\t */\r\n\tpublic set backgroundColor(value: $type.Optional<Color>) {\r\n\t\tthis._backgroundColor = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Background color\r\n\t */\r\n\tpublic get backgroundColor(): $type.Optional<Color> {\r\n\t\treturn this.adapter.apply(\"backgroundColor\", {\r\n\t\t\tbackgroundColor: this._backgroundColor\r\n\t\t}).backgroundColor;\r\n\t}\r\n\r\n\t/**\r\n\t * A title to be used when printing.\r\n\t *\r\n\t * @param value Title\r\n\t */\r\n\tpublic set title(value: $type.Optional<string>) {\r\n\t\tthis._title = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Title\r\n\t */\r\n\tpublic get title(): $type.Optional<string> {\r\n\t\treturn this.adapter.apply(\"title\", {\r\n\t\t\ttitle: this._title\r\n\t\t}).title;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @todo Add ability to change text\r\n\t */\r\n\tpublic showPreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 0.5;\r\n\t\t\tpreloader.label.text = \"...\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hidePreloader(): void {\r\n\t\tlet preloader = this.preloader;\r\n\t\tif (preloader) {\r\n\t\t\tpreloader.progress = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n\t * exported.\r\n\t *\r\n\t * @return Preloader\r\n\t */\r\n\tpublic get preloader(): Preloader {\r\n\t\treturn this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n\t\t\tthis._sprite.parent.preloader :\r\n\t\t\tundefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Displays a modal saying export is taking longer than expected.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic showTimeout(): void {\r\n\t\tthis.showModal(\r\n\t\t\tthis.adapter.apply(\"timeoutMessage\", {\r\n\t\t\t\tmessage: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n\t\t\t}).message\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Hides preloader/exporting indicator.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideTimeout(): void {\r\n\t\tif (this._timeoutTimeout) {\r\n\t\t\tthis.removeDispose(this._timeoutTimeout);\r\n\t\t\tthis._timeoutTimeout = null;\r\n\t\t}\r\n\t\tthis.hideModal();\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Language]] instance to be used for translations.\r\n\t *\r\n\t * @param value An instance of [[Language]]\r\n\t */\r\n\tpublic set language(value: Language) {\r\n\t\tthis._language = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return A [[Language]] instance to be used\r\n\t */\r\n\tpublic get language(): Language {\r\n\t\tif (!this._language) {\r\n\t\t\tthis._language = new Language();\r\n\t\t}\r\n\r\n\t\treturn this._language;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns (and creates) [[Modal]].\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Modal instance\r\n\t */\r\n\tpublic get modal(): Modal {\r\n\t\tif (!this._modal) {\r\n\t\t\tthis._modal = new Modal();\r\n\r\n\t\t\t// Prefix with Sprite's class name\r\n\t\t\tthis._modal.adapter.add(\"classPrefix\", (value) => {\r\n\t\t\t\tvalue = options.classNamePrefix + value;\r\n\t\t\t\treturn value;\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this._modal;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows [[Modal]] with specific text.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param text Modal contents\r\n\t */\r\n\tpublic showModal(text: string, title?: string): void {\r\n\r\n\t\t// Hide previous modal and preloader\r\n\t\tthis.hideModal();\r\n\t\tthis.hidePreloader();\r\n\r\n\t\t// Create modal\r\n\t\tlet modal = this.modal;\r\n\t\tmodal.container = this.sprite.svgContainer.SVGContainer;\r\n\t\tmodal.content = text;\r\n\t\tmodal.readerTitle = title;\r\n\t\tmodal.open();\r\n\t}\r\n\r\n\t/**\r\n\t * Hides modal window if one's currently open.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic hideModal(): void {\r\n\t\tif (this._modal) {\r\n\t\t\tthis.modal.close();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads canvg dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t * @async\r\n\t */\r\n\tprivate async _canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\tconst canvg = (await import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")) as any;\r\n\r\n\t\tif (canvg.default != null) {\r\n\t\t\treturn canvg.default;\r\n\r\n\t\t} else {\r\n\t\t\treturn canvg;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns canvg instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of canvg\r\n\t */\r\n\tpublic get canvg(): Promise<typeof import(\"../../canvg/index.js\")[\"default\"]> {\r\n\t\treturn this._canvg();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns pdfmake instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get pdfmake(): Promise<any> {\r\n\t\tif (pdfmakePromise == null) {\r\n\t\t\tpdfmakePromise = _pdfmake();\r\n\t\t}\r\n\r\n\t\treturn pdfmakePromise;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads xlsx dynamic module.\r\n\t *\r\n\t * This is an asynchronous function. Check the description of `getImage()`\r\n\t * for description and example usage.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t * @async\r\n\t */\r\n\tprivate async _xlsx(): Promise<any> {\r\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"xlsx\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns xlsx instance.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Instance of pdfmake\r\n\t */\r\n\tpublic get xlsx(): Promise<any> {\r\n\t\treturn this._xlsx();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets options for a format.\r\n\t */\r\n\tpublic setFormatOptions<Key extends keyof IExportOptions>(type: Key, options: IExportOptions[Key]): void {\r\n\t\tthis._formatOptions.setKey(type, options);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns current options for a format.\r\n\t */\r\n\tpublic getFormatOptions<Key extends keyof IExportOptions>(type: Key): IExportOptions[Key] {\r\n\t\treturn this._formatOptions.getKey(type);\r\n\t}\r\n\r\n\t/**\r\n\t * A [[Dictionary]] object containing format-specific options.\r\n\t *\r\n\t * May be used to change specific option for the format:\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"exporting\": {\r\n\t *     // ...\r\n\t *     \"formatOptions\": {\r\n\t *       \"csv\": {\r\n\t *         \"disabled\": true\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.9.12\r\n\t * @return  Options\r\n\t */\r\n\tpublic get formatOptions(): Dictionary<string, ExportOptions> {\r\n\t\treturn this._formatOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected _disablePointers(): void {\r\n\t\tif (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t}\r\n\t\tthis.sprite.interactionsEnabled = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected _releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides all elements that should not be included in the exported image.\r\n\t */\r\n\tprivate hideNonExportableSprites(): void {\r\n\t\tif (this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst svgContainer = this.sprite.svgContainer;\r\n\t\tif (svgContainer) {\r\n\t\t\t$array.each(svgContainer.nonExportableSprites, (item) => {\r\n\t\t\t\tif (!item.isHidden && !item.isHiding && item.visible) {\r\n\t\t\t\t\tthis._hiddenObjects.push(item);\r\n\t\t\t\t}\r\n\t\t\t\titem.hide(0);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._objectsAlreadyHidden = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Respores elements that were hidden before export.\r\n\t */\r\n\tprivate restoreNonExportableSprites(): void {\r\n\t\tif (!this._objectsAlreadyHidden) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t$array.each(this._hiddenObjects, (item) => {\r\n\t\t\titem.show(0);\r\n\t\t});\r\n\t\tthis._hiddenObjects = [];\r\n\t\tthis._objectsAlreadyHidden = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if there are elements that absolutely need to be validated before\r\n\t * export.\r\n\t *\r\n\t * If there are invalid elements, it will await for them to be validated.\r\n\t *\r\n\t * @return Promise\r\n\t */\r\n\tprivate async awaitValidSprites(): Promise<void> {\r\n\t\tlet promises: Promise<any>[] = [];\r\n\r\n\t\tif (this.validateSprites.length) {\r\n\t\t\t$array.each(this.validateSprites, (sprite, index) => {\r\n\t\t\t\tif (sprite.invalid) {\r\n\t\t\t\t\tpromises.push(new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tsprite.events.once(\"validated\", (ev) => {\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (promises.length) {\r\n\t\t\tawait Promise.all(promises);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tregistry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up menu\r\n\t\t\tif ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n\t\t\t\tconfig.menu.type = \"ExportMenu\";\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n"]}