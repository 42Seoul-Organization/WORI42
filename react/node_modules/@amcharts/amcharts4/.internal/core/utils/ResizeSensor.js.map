{"version":3,"file":"ResizeSensor.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/ResizeSensor.ts"],"names":[],"mappings":"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","sourcesContent":["import * as $array from \"./Array\";\nimport * as $log from \"./Log\";\n\n\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n\ndeclare const ResizeObserver: any;\n\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"content-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | undefined;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._targets.length === 0) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\tlet size = target.getBoundingClientRect();\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tcancelAnimationFrame(this._timer);\n\t\t}\n\t}\n}\n\n\nlet observer: Sensor | null = null;\n\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\nexport class ResizeSensor {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n\n\t/**\n\t * Deprecated: do not use.\n\t *\n\t * @ignore Exclude from docs\n\t */\n\tpublic reset() {\n\t\t$log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\n\t}\n}\n"]}