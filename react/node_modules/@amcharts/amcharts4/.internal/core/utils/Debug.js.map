{"version":3,"file":"Debug.js","sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Debug.ts"],"names":[],"mappings":"AAGA;IAGC,oBAAY,CAAM;QACjB,IAAM,QAAQ,GAAS,KAAM,CAAC,eAAe,CAAC;QAExC,KAAM,CAAC,eAAe,GAAG,GAAG,CAAC;QAEnC,IAAU,KAAM,CAAC,iBAAiB,EAAE;YAC7B,KAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SACxC;QAEK,KAAM,CAAC,eAAe,GAAG,QAAQ,CAAC;IACzC,CAAC;IACF,iBAAC;AAAD,CAAC,AAdD,IAcC;AAGD,IAAI,OAAO,GAAG,IAAI,CAAC;AAEnB,MAAM,UAAU,MAAM;IACrB,OAAO,GAAG,IAAI,CAAC;AAChB,CAAC;AAED,MAAM,UAAU,OAAO;IACtB,OAAO,GAAG,KAAK,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,KAAK,CAAC,KAAgB;IACrC,gEAAgE;IAChE,IAAI,OAAO,IAAU,KAAM,CAAC,SAAS,KAAK,mBAAmB,EAAE;QAC9D,IAAM,GAAC,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC;QAEhC,UAAU,CAAC;YACV,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,GAAC,CAAC,KAAK,CAAC,CAAC;aAC5B;QACF,CAAC,EAAE,KAAK,CAAC,CAAC;KACV;AACF,CAAC","sourcesContent":["import { IDisposer } from \"./Disposer\";\n\n\nclass DebugError {\n\tpublic stack!: string;\n\n\tconstructor(f: any) {\n\t\tconst oldValue = (<any>Error).stackTraceLimit;\n\n\t\t(<any>Error).stackTraceLimit = 100;\n\n\t\tif ((<any>Error).captureStackTrace) {\n\t\t\t(<any>Error).captureStackTrace(this, f);\n\t\t}\n\n\t\t(<any>Error).stackTraceLimit = oldValue;\n\t}\n}\n\n\nlet enabled = true;\n\nexport function enable() {\n\tenabled = true;\n}\n\nexport function disable() {\n\tenabled = false;\n}\n\nexport function debug(value: IDisposer) {\n\t// TODO better detection for classes which shouldn't be debugged\n\tif (enabled && (<any>value).className !== \"InterfaceColorSet\") {\n\t\tconst x = new DebugError(debug);\n\n\t\tsetTimeout(() => {\n\t\t\tif (!value.isDisposed()) {\n\t\t\t\tconsole.log(value, x.stack);\n\t\t\t}\n\t\t}, 10000);\n\t}\n}\n"]}