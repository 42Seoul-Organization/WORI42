{"version":3,"file":"Rectangle3D.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/elements/3d/Rectangle3D.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Creates a 3D rectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../Container\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport { Color, color, toColor } from \"../../utils/Color\";\r\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../rendering/fills/Pattern\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\nimport * as $type from \"../../utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Rectangle3D]].\r\n */\r\nexport interface Rectangle3DProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Rectangle3D]]\r\n */\r\nexport interface Rectangle3DEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Rectangle3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface Rectangle3DAdapters extends IContainerAdapters, Rectangle3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Builds a 3D rectangle\r\n * @see {@link IRectangle3DEvents} for a list of available events\r\n * @see {@link IRectangle3DAdapters} for a list of available Adapters\r\n */\r\nexport class Rectangle3D extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: Rectangle3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: Rectangle3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: Rectangle3DEvents;\r\n\r\n\t/**\r\n\t * Left side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideLeft: Sprite;\r\n\r\n\t/**\r\n\t * Right side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideRight: Sprite;\r\n\r\n\t/**\r\n\t * Top element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideTop: Sprite;\r\n\r\n\t/**\r\n\t * Bottom element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBottom: Sprite;\r\n\r\n\t/**\r\n\t * Back element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideBack: Sprite;\r\n\r\n\t/**\r\n\t * Front element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideFront: Sprite;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 30;\r\n\t\tthis.className = \"Rectangle3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\tlet sideBack: Sprite = this.createChild(Sprite);\r\n\t\tsideBack.shouldClone = false;\r\n\t\tsideBack.setElement(this.paper.add(\"path\"));\r\n\t\tsideBack.isMeasured = false;\r\n\r\n\t\tthis.sideBack = sideBack;\r\n\t\tthis._disposers.push(this.sideBack);\r\n\r\n\t\tlet sideBottom: Sprite = this.createChild(Sprite);\r\n\t\tsideBottom.shouldClone = false;\r\n\t\tsideBottom.setElement(this.paper.add(\"path\"));\r\n\t\tsideBottom.isMeasured = false;\r\n\t\tthis.sideBottom = sideBottom;\r\n\t\tthis._disposers.push(this.sideBottom);\r\n\r\n\t\tlet sideLeft: Sprite = this.createChild(Sprite);\r\n\t\tsideLeft.shouldClone = false;\r\n\t\tsideLeft.setElement(this.paper.add(\"path\"));\r\n\t\tsideLeft.isMeasured = false;\r\n\t\tthis.sideLeft = sideLeft;\r\n\t\tthis._disposers.push(this.sideLeft);\r\n\r\n\t\tlet sideRight: Sprite = this.createChild(Sprite);\r\n\t\tsideRight.shouldClone = false;\r\n\t\tsideRight.setElement(this.paper.add(\"path\"));\r\n\t\tsideRight.isMeasured = false;\r\n\t\tthis.sideRight = sideRight;\r\n\t\tthis._disposers.push(this.sideRight);\r\n\r\n\t\tlet sideTop: Sprite = this.createChild(Sprite);\r\n\t\tsideTop.shouldClone = false;\r\n\t\tsideTop.setElement(this.paper.add(\"path\"));\r\n\t\tsideTop.isMeasured = false;\r\n\t\tthis.sideTop = sideTop;\r\n\t\tthis._disposers.push(this.sideTop);\r\n\r\n\t\tlet sideFront: Sprite = this.createChild(Sprite);\r\n\t\tsideFront.shouldClone = false;\r\n\t\tsideFront.setElement(this.paper.add(\"path\"));\r\n\t\tsideFront.isMeasured = false;\r\n\t\tthis.sideFront = sideFront;\r\n\t\tthis._disposers.push(this.sideFront);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tsuper.draw();\r\n\r\n\t\tlet w: number = this.innerWidth;\r\n\t\tlet h: number = this.innerHeight;\r\n\r\n\t\tlet depth: number = this.depth;\r\n\t\tlet angle: number = this.angle;\r\n\t\tlet sin: number = $math.sin(angle);\r\n\t\tlet cos: number = $math.cos(angle);\r\n\r\n\t\tlet a: IPoint = { x: 0, y: 0 };\r\n\t\tlet b: IPoint = { x: w, y: 0 };\r\n\t\tlet c: IPoint = { x: w, y: h };\r\n\t\tlet d: IPoint = { x: 0, y: h };\r\n\r\n\t\tlet ah: IPoint = { x: depth * cos, y: -depth * sin };\r\n\t\tlet bh: IPoint = { x: depth * cos + w, y: -depth * sin };\r\n\t\tlet ch: IPoint = { x: depth * cos + w, y: -depth * sin + h };\r\n\t\tlet dh: IPoint = { x: depth * cos, y: -depth * sin + h };\r\n\r\n\t\tthis.sideFront.path = $path.moveTo(a) + $path.lineTo(b) + $path.lineTo(c) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideBack.path = $path.moveTo(ah) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(dh) + $path.closePath();\r\n\t\tthis.sideLeft.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(dh) + $path.lineTo(d) + $path.closePath();\r\n\t\tthis.sideRight.path = $path.moveTo(b) + $path.lineTo(bh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideBottom.path = $path.moveTo(d) + $path.lineTo(dh) + $path.lineTo(ch) + $path.lineTo(c) + $path.closePath();\r\n\t\tthis.sideTop.path = $path.moveTo(a) + $path.lineTo(ah) + $path.lineTo(bh) + $path.lineTo(b) + $path.closePath();\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (Z dimension) of the 3D rectangle in pixels.\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Depth (px)\r\n\t */\r\n\tpublic set depth(value: number) {\r\n\t\tthis.setPropertyValue(\"depth\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\treturn this.getPropertyValue(\"angle\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\r\n\t\tif (!$type.isObject(value) || \"r\" in value) {\r\n\t\t\tvalue = toColor(value);\r\n\t\t}\r\n\r\n\t\tlet colorStr: string;\r\n\t\tif (value instanceof Color) {\r\n\t\t\tcolorStr = value.hex;\r\n\t\t}\r\n\t\telse if (value instanceof LinearGradient || value instanceof RadialGradient) {\r\n\t\t\tcolorStr = value.stops.getIndex(0).color.hex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet filter = new LightenFilter();\r\n\t\t\tfilter.lightness = -0.2;\r\n\t\t\tthis.sideBack.filters.push(filter);\r\n\r\n\t\t\tlet filter2 = filter.clone()\r\n\t\t\tfilter2.lightness = -0.4;\r\n\t\t\tthis.sideLeft.filters.push(filter2);\r\n\r\n\t\t\tlet filter3 = filter.clone()\r\n\t\t\tfilter3.lightness = -0.2;\r\n\t\t\tthis.sideRight.filters.push(filter3);\r\n\r\n\t\t\tlet filter4 = filter.clone()\r\n\t\t\tfilter4.lightness = -0.1;\r\n\t\t\tthis.sideTop.filters.push(filter4);\r\n\r\n\t\t\tlet filter5 = filter.clone()\r\n\t\t\tfilter5.lightness = -0.5;\r\n\t\t\tthis.sideBottom.filters.push(filter5);\r\n\t\t}\r\n\r\n\t\tif (colorStr) {\r\n\t\t\tthis.sideBack.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideLeft.fill = color(colorStr).lighten(-0.4);\r\n\t\t\tthis.sideRight.fill = color(colorStr).lighten(-0.2);\r\n\t\t\tthis.sideTop.fill = color(colorStr).lighten(-0.1);\r\n\t\t\tthis.sideBottom.fill = color(colorStr).lighten(-0.5);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Rectangle3D.\r\n\t *\r\n\t * @param source Source Rectangle3D\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.sideBack.copyFrom(source.sideBack);\r\n\t\tthis.sideLeft.copyFrom(source.sideLeft);\r\n\t\tthis.sideRight.copyFrom(source.sideRight);\r\n\t\tthis.sideTop.copyFrom(source.sideTop);\r\n\t\tthis.sideBottom.copyFrom(source.sideBottom);\r\n\t}\r\n\r\n}\r\n"]}