{"version":3,"file":"Slice3D.js","sourceRoot":"","sources":["../../../../../../src/.internal/core/elements/3d/Slice3D.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * 3D slice module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Slice, ISliceProperties, ISliceAdapters, ISliceEvents } from \"../Slice\";\r\nimport { Sprite } from \"../../Sprite\";\r\nimport { IPoint } from \"../../defs/IPoint\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $path from \"../../rendering/Path\";\r\nimport * as $type from \"../../utils/Type\";\r\nimport { Color, color } from \"../../utils/Color\";\r\nimport { RadialGradient } from \"../../rendering/fills/RadialGradient\";\r\nimport { LinearGradient } from \"../../rendering/fills/LinearGradient\";\r\nimport { Pattern } from \"../../rendering/fills/Pattern\";\r\nimport { LightenFilter } from \"../../rendering/filters/LightenFilter\";\r\n\r\n/**\r\n * Defines properties for [[Slice3D]].\r\n */\r\nexport interface ISlice3DProperties extends ISliceProperties {\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t */\r\n\tdepth?: number;\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t */\r\n\tangle?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[Slice3D]].\r\n */\r\nexport interface ISlice3DEvents extends ISliceEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slice3D]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISlice3DAdapters extends ISliceAdapters, ISlice3DProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a 3D slice of a Pie chart.\r\n *\r\n * @see {@link ISlice3DEvents} for a list of available events\r\n * @see {@link ISlice3DAdapters} for a list of available Adapters\r\n */\r\nexport class Slice3D extends Slice {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISlice3DProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISlice3DAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISlice3DEvents;\r\n\r\n\t/**\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic edge: Sprite;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideA: Sprite;\r\n\r\n\t/**\r\n\t * Side element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic sideB: Sprite;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Slice3D\";\r\n\t\tthis.layout = \"none\";\r\n\r\n\t\t// Create edge container\r\n\t\tlet edge = this.createChild(Sprite);\r\n\t\tthis.edge = edge;\r\n\t\tedge.shouldClone = false;\r\n\t\tedge.isMeasured = false;\r\n\t\tedge.toBack();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.angle = 30;\r\n\t\tthis.depth = 20;\r\n\r\n\t\t// Create side A element\r\n\t\tlet sideA = this.createChild(Sprite);\r\n\t\tthis.sideA = sideA;\r\n\t\tsideA.shouldClone = false;\r\n\t\tsideA.isMeasured = false;\r\n\t\t//sideA.setElement(this.paper.add(\"path\"));\r\n\t\t//sideA.strokeOpacity = 0;\r\n\r\n\t\t// Crate side B element\r\n\t\tlet sideB = this.createChild(Sprite);\r\n\t\tthis.sideB = sideB;\r\n\t\tsideB.shouldClone = false;\r\n\t\tsideB.isMeasured = false;\r\n\t\t//sideB.setElement(this.paper.add(\"path\"));\r\n\t\t//sideB.strokeOpacity = 0;\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets actual `fill` property on the SVG element, including applicable color\r\n\t * modifiers.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param value  Fill\r\n\t */\r\n\tprotected setFill(value: $type.Optional<Color | Pattern | LinearGradient | RadialGradient>): void {\r\n\t\tsuper.setFill(value);\r\n\r\n\t\tlet colorStr: string;\r\n\t\tif (value instanceof Color) {\r\n\t\t\tcolorStr = value.hex;\r\n\t\t}\r\n\t\telse if (value instanceof LinearGradient || value instanceof RadialGradient) {\r\n\t\t\tcolorStr = value.stops.getIndex(0).color.hex;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet filter = new LightenFilter();\r\n\t\t\tfilter.lightness = -0.25;\r\n\t\t\tthis.edge.filters.push(filter);\r\n\t\t\tthis.sideA.filters.push(filter.clone());\r\n\t\t\tthis.sideB.filters.push(filter.clone());\r\n\t\t}\r\n\r\n\t\tif (colorStr) {\r\n\t\t\tlet edgeFill = color(colorStr).lighten(-0.25);\r\n\r\n\t\t\tthis.edge.fill = edgeFill;\r\n\t\t\tthis.sideA.fill = edgeFill;\r\n\t\t\tthis.sideB.fill = edgeFill;\r\n\r\n\t\t\tthis.edge.stroke = edgeFill;\r\n\t\t\tthis.sideA.stroke = edgeFill;\r\n\t\t\tthis.sideB.stroke = edgeFill;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Draws the element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tthis.cornerRadius = 0;\r\n\t\tthis.innerCornerRadius = 0;\r\n\r\n\t\tsuper.draw();\r\n\r\n\t\tif (this.arc !== 0 && this.radius > 0 && this.depth > 0) {\r\n\t\t\tthis.sideB.show(0);\r\n\t\t\tthis.sideA.show(0);\r\n\t\t\tthis.edge.show(0);\r\n\r\n\t\t\tlet startAngle = this.startAngle;\r\n\t\t\tlet arc = this.arc;\r\n\t\t\tlet innerRadius = this.pixelInnerRadius || 0;\r\n\t\t\tlet radiusY = this.radiusY || 0;\r\n\r\n\t\t\t//let cornerRadius = this.cornerRadius || 0;\r\n\t\t\t//let innerCornerRadius = this.innerCornerRadius;\r\n\t\t\tlet radius = this.radius;\r\n\r\n\t\t\t// this is code duplicate with $path.arc. @todo to think how to avoid it\r\n\r\n\t\t\tlet endAngle = startAngle + arc;\r\n\t\t\t//let crSin = $math.sin($math.min(arc, 45) / 2);\r\n\r\n\t\t\t//innerCornerRadius = innerCornerRadius || cornerRadius;\r\n\r\n\t\t\tlet innerRadiusY = (radiusY / radius) * innerRadius;\r\n\t\t\t//let cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n\t\t\t//let innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n\r\n\t\t\t//cornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\t//cornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\t//innerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n\t\t\t//innerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n\r\n\t\t\t//cornerRadius = $math.fitToRange(cornerRadius, 0, radius * crSin);\r\n\t\t\t//cornerRadiusY = $math.fitToRange(cornerRadiusY, 0, radiusY * crSin);\r\n\r\n\t\t\t//innerCornerRadius = $math.fitToRange(innerCornerRadius, 0, innerRadius * crSin);\r\n\t\t\t//innerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin);\r\n\r\n\t\t\t//let crAngle: number = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n\t\t\t//let crAngleY: number = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\t//if (innerRadius < innerCornerRadius) {\r\n\t\t\t//\tinnerRadius = innerCornerRadius;\r\n\t\t\t//}\r\n\r\n\t\t\t//if (innerRadiusY < innerCornerRadiusY) {\r\n\t\t\t//\tinnerRadiusY = innerCornerRadiusY;\r\n\t\t\t//}\r\n\r\n\t\t\t//let crInnerAngle: number = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n\t\t\t//let crInnerAngleY: number = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n\r\n\t\t\t//if (!$type.isNumber(crInnerAngle)) {\r\n\t\t\t//\tcrInnerAngle = 0;\r\n\t\t\t//}\r\n\t\t\t//if (!$type.isNumber(crInnerAngleY)) {\r\n\t\t\t//\tcrInnerAngleY = 0;\r\n\t\t\t//}\r\n\r\n\t\t\t//let middleAngle = startAngle + arc / 2;\r\n\t\t\t//let mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.round($math.sin(middleAngle) * innerRadiusY, 4) };\r\n\r\n\t\t\tlet a0 = { x: $math.cos(startAngle) * (innerRadius), y: $math.sin(startAngle) * (innerRadiusY) };\r\n\t\t\tlet b0 = { x: $math.cos(startAngle) * (radius), y: $math.sin(startAngle) * (radiusY) };\r\n\t\t\tlet c0 = { x: $math.cos(endAngle) * (radius), y: $math.sin(endAngle) * (radiusY) };\r\n\t\t\tlet d0 = { x: $math.cos(endAngle) * (innerRadius), y: $math.sin(endAngle) * (innerRadiusY) };\r\n\t\t\t// end of duplicate\r\n\r\n\t\t\tlet h: number = this.depth;\r\n\t\t\tlet ah: IPoint = { x: a0.x, y: a0.y - h };\r\n\t\t\tlet bh: IPoint = { x: b0.x, y: b0.y - h };\r\n\t\t\tlet ch: IPoint = { x: c0.x, y: c0.y - h };\r\n\t\t\tlet dh: IPoint = { x: d0.x, y: d0.y - h };\r\n\r\n\t\t\tlet edgePath = \"\";\r\n\t\t\tlet count = Math.ceil(arc / 5);\r\n\t\t\tlet step = arc / count;\r\n\t\t\tlet mangle = startAngle;\r\n\r\n\t\t\tlet prevPoint = bh;\r\n\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tmangle += step;\r\n\t\t\t\tif (mangle > 0 && mangle < 180) {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (radius), y: $math.sin(mangle) * (radiusY) - h };\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: prevPoint.x, y: prevPoint.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: pp.x, y: pp.y + h }, radius, radiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo(pp);\r\n\t\t\t\t\tedgePath += $path.arcToPoint(prevPoint, radius, radiusY);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (radius), y: $math.sin(mangle) * (radiusY) - h };\r\n\t\t\t\t\tedgePath += $path.arcToPoint(pp, radius, radiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: pp.x, y: pp.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: prevPoint.x, y: prevPoint.y + h }, radius, radiusY);\r\n\t\t\t\t\tedgePath += $path.lineTo(prevPoint);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprevPoint = ah;\r\n\t\t\tmangle = startAngle;\r\n\r\n\r\n\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\tmangle += step;\r\n\t\t\t\tif (mangle > 0 && mangle < 180) {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (innerRadius), y: $math.sin(mangle) * (innerRadiusY) - h };\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: prevPoint.x, y: prevPoint.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: pp.x, y: pp.y + h }, innerRadius, innerRadiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo(pp);\r\n\t\t\t\t\tedgePath += $path.arcToPoint(prevPoint, innerRadius, innerRadiusY);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tedgePath += $path.moveTo(prevPoint);\r\n\t\t\t\t\tlet pp = { x: $math.cos(mangle) * (innerRadius), y: $math.sin(mangle) * (innerRadiusY) - h };\r\n\t\t\t\t\tedgePath += $path.arcToPoint(pp, innerRadius, innerRadiusY, true);\r\n\t\t\t\t\tedgePath += $path.lineTo({ x: pp.x, y: pp.y + h });\r\n\t\t\t\t\tedgePath += $path.arcToPoint({ x: prevPoint.x, y: prevPoint.y + h }, innerRadius, innerRadiusY);\r\n\t\t\t\t\tedgePath += $path.lineTo(prevPoint);\r\n\t\t\t\t\tedgePath += \"z\";\r\n\t\t\t\t\tprevPoint = pp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.edge.path = edgePath;\r\n/*\r\n\t\t\ta0 = { x: $math.cos(startAngle) * (innerRadius + innerCornerRadius), y: $math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\t\t\tb0 = { x: $math.cos(startAngle) * (radius - cornerRadius), y: $math.sin(startAngle) * (radiusY - cornerRadiusY) };\r\n\t\t\tc0 = { x: $math.cos(endAngle) * (radius - cornerRadius), y: $math.sin(endAngle) * (radiusY - cornerRadiusY) };\r\n\t\t\td0 = { x: $math.cos(endAngle) * (innerRadius + innerCornerRadius), y: $math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n\t\t\t// end of duplicate\r\n\r\n\t\t\tah = { x: a0.x, y: a0.y - h };\r\n\t\t\tbh = { x: b0.x, y: b0.y - h };\r\n\t\t\tch = { x: c0.x, y: c0.y - h };\r\n\t\t\tdh = { x: d0.x, y: d0.y - h };\r\n*/\r\n\t\t\tthis.sideA.path = $path.moveTo(a0) + $path.lineTo(b0) + $path.lineTo(bh) + $path.lineTo(ah) + $path.closePath();\r\n\t\t\tthis.sideB.path = $path.moveTo(c0) + $path.lineTo(d0) + $path.lineTo(dh) + $path.lineTo(ch) + $path.closePath();\r\n\r\n\t\t\tif (this.startAngle < 90) {\r\n\t\t\t\tthis.sideA.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideA.toFront();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.startAngle + this.arc > 90) {\r\n\t\t\t\tthis.sideB.toBack();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.sideB.toFront();\r\n\t\t\t}\r\n\r\n\t\t\tthis.slice.dy = -h;\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.sideA.hide(0);\r\n\t\t\tthis.sideB.hide(0);\r\n\t\t\tthis.edge.hide(0);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Depth (height) of the 3D slice in pixels.\r\n\t *\r\n\t * @default 20\r\n\t * @param depth  Depth (px)\r\n\t */\r\n\tpublic set depth(depth: number) {\r\n\t\tthis.setPropertyValue(\"depth\", depth, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Depth (px)\r\n\t */\r\n\tpublic get depth(): number {\r\n\t\treturn this.getPropertyValue(\"depth\");\r\n\t}\r\n\r\n\t/**\r\n\t * Angle of the point of view to the 3D element. (0-360)\r\n\t *\r\n\t * @default 30\r\n\t * @param value  Angle\r\n\t */\r\n\tpublic set angle(value: number) {\r\n\t\tthis.setPropertyValue(\"angle\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Angle\r\n\t */\r\n\tpublic get angle(): number {\r\n\t\tlet angle: number = this.getPropertyValue(\"angle\");\r\n\t\tif (!$type.isNumber(angle)) {\r\n\t\t\tangle = 0;\r\n\t\t}\r\n\t\treturn angle;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical radius (0-1)\r\n\t */\r\n\tpublic get radiusY(): number {\r\n\t\tlet radiusY: number = this.getPropertyValue(\"radiusY\");\r\n\t\tif (!$type.isNumber(radiusY)) {\r\n\t\t\tradiusY = this.radius - this.radius * this.angle / 90;\r\n\t\t}\r\n\t\treturn radiusY;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical radius for creating skewed slices.\r\n\t *\r\n\t * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n\t * the `radius`.\r\n\t *\r\n\t * @param value Vertical radius (0-1)\r\n\t */\r\n\tpublic set radiusY(value: number) {\r\n\t\tthis.setPropertyValue(\"radiusY\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from a different instance of Axis.\r\n\t *\r\n\t * @param source Source Axis\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.edge.copyFrom(source.edge);\r\n\t\tthis.sideA.copyFrom(source.sideA);\r\n\t\tthis.sideB.copyFrom(source.sideB);\r\n\t}\r\n\r\n}\r\n"]}