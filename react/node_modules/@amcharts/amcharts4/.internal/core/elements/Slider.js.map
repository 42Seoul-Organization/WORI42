{"version":3,"file":"Slider.js","sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Slider.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH;;;;;GAKG;AACH,OAAO,EAAE,SAAS,EAA8D,MAAM,+BAA+B,CAAC;AACtH,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AA4BvC;;;;;GAKG;AAEH;;;;;GAKG;AACH;IAA4B,0BAAS;IAiBpC;;OAEG;IACH;QAAA,YACC,iBAAO,SAcP;QAbA,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAE1B,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;QACvB,KAAI,CAAC,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACvC,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC;QACzB,KAAI,CAAC,OAAO,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAEzC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE;YAChC,KAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAClC,KAAI,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAA;QAEF,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAMD,sBAAc,yBAAK;QAHnB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;aAED,UAAoB,KAAa;QAEjC,CAAC;;;OAJA;IASD,sBAAW,uBAAG;QAHd;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAED;;;;WAIG;aACH,UAAe,QAAgB;QAE/B,CAAC;;;OATA;IAiBD,sBAAW,yBAAK;QAMhB;;WAEG;aACH;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;QAhBD;;;;WAIG;aACH,UAAiB,QAAgB;YAChC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;aACxB;QACF,CAAC;;;OAAA;IAQF,aAAC;AAAD,CAAC,AAnFD,CAA4B,SAAS,GAmFpC;;AAED;;;;;GAKG;AACH,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC","sourcesContent":["/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISliderEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.opacity = 0;\r\n\t\tthis.thumb.interactionsEnabled = false;\r\n\t\tthis.endGrip.opacity = 0;\r\n\t\tthis.endGrip.interactionsEnabled = false;\r\n\r\n\t\tthis.startGrip.events.on(\"drag\", () => {\r\n\t\t\tthis.endGrip.x = this.startGrip.x;\r\n\t\t\tthis.endGrip.y = this.startGrip.y;\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tprotected set __end(value: number) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n"]}