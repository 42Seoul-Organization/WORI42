{"version":3,"sources":["Component/Example/Axios/request.js","Component/Example/Compose/InputBoxGrid.js","Component/Example/Compose/Marker/Marker.js","Component/Example/Compose/Slidebar/Sliderbar.js","Component/Example/Compose/Footer/Footer.js","Component/Example/Compose/Compose.js","App.js","index.js"],"names":["request","method","url","params","func","a","axios","InputBox","mainSearchInput","goToViewPort","isMain","Fragment","className","type","onChange","onClick","style","background","href","Circle","userData","map","Data","i","latitude","key","longitude","parseFloat","am4core","am4themes_animated","Footer","dotenv","config","Compose","useState","zoom","pitch","bearing","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","searchInfo","info","setInfo","setUserData","useCallback","vp","target","value","address","process","then","res","data","results","geometry","location","lat","lng","catch","console","log","useEffect","interval","setInterval","clearInterval","user_data","province","city","group","infection_case","confirmed","time","name","err","width","height","onViewportChange","nextViewport","mapStyle","mapboxApiAccessToken","App","ReactDOM","render","document","getElementById"],"mappings":"qaAUeA,EARF,uCAAG,WAAOC,EAAQC,EAAKC,EAAQC,GAA5B,SAAAC,EAAA,sEACDC,IAAM,CACjBL,SACAC,MACAC,WAJY,mFAAH,4D,OCkBEI,MAhBf,YAA4D,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,OAEhD,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAWF,EAAM,oCAClB,wCACA,uBAAGE,UAAU,WAAb,kOACA,uBAAGA,UAAU,WAAb,+EACA,2BAAOC,KAAK,OAAOC,SAAUN,IAC7B,4BAAQO,QAAS,kBAAIN,KAAgBO,MAAO,CAACC,WAAY,gBAAzD,UACA,2BAAG,uBAAGC,KAAK,kDAAR,UAAH,4B,OCQKC,MAhBf,YACE,OAD0B,EAAXC,SACCC,KAAI,SAACC,EAAMC,GACzB,GAAsB,MAAlBD,EAAKE,SACP,OACE,kBAAC,IAAD,CACEC,IAAKF,EACLG,UAAWC,WAAWL,EAAKI,WAC3BF,SAAUG,WAAWL,EAAKE,WAE1B,yBAAKZ,UAAU,gB,0BCVzBgB,IAAiBC,K,OCMFC,MARf,WACE,OACE,yBAAKlB,UAAU,oBAAf,2B,yBCQJmB,EAAOC,SAwIQC,MAtIf,WAAoB,IAAD,EACOC,mBAAS,CAC/BR,UAAW,WACXF,SAAU,QACVW,KAAM,IACNC,MAAO,EACPC,QAAS,EACTC,uBAAwB,IAAIC,IAAkB,CAAEC,MAAO,MACvDC,mBAAoB,IACpBC,WAAY,GACZhC,QAAQ,IAVO,mBACViC,EADU,KACJC,EADI,OAYeV,mBAAS,IAZxB,mBAYVd,EAZU,KAYAyB,EAZA,KAcXrC,EAAkBsC,uBACtB,SAACC,GACCH,EAAQ,eACHD,EADE,CAELD,WAAYK,EAAGC,OAAOC,WAG1B,CAACN,IAGGlC,EAAeqC,uBAAY,WAC/B9C,EAAQ,MAAD,oDAA6D,CAClEkD,QAASP,EAAKD,WACdjB,IAAK0B,4CAEJC,MAAK,SAACC,GACLT,EAAQ,eACHD,EADE,CAELjC,QAAQ,EACRc,SAAU6B,EAAIC,KAAKC,QAAQ,GAAGC,SAASC,SAASC,IAChDhC,UAAW2B,EAAIC,KAAKC,QAAQ,GAAGC,SAASC,SAASE,IACjDxB,KAAM,GACNG,uBAAwB,IAAIC,IAC5BE,mBAAoB,UAGvBmB,OAAM,SAACP,GACNQ,QAAQC,IAAIT,QAEf,CAACV,IAgDJ,OA9CAoB,qBAAU,WACR,GAAIpB,EAAKjC,QAAUiC,EAAKjB,WAAa,IAAK,CACxC,IAAMsC,EAAWC,aAAY,WAC3BrB,EAAQ,eACHD,EADE,CAELnB,SAAUmB,EAAKnB,SAAW,KAC1BE,UAAWiB,EAAKjB,UAAY,UAE7B,IACH,OAAO,kBAAMwC,cAAcF,OAG5B,CAACrB,IAEJoB,qBAAU,WACR/D,EAAQ,OAAD,4DAAsE,CAC3EmE,UAAW,CAAC,CACVC,SAAU,QACVC,KAAM,aACNC,MAAO,OACPC,eAAgB,gBAChBC,UAAW,IACXhD,SAAU,UACVE,UAAW,WACX+C,KAAM,qCACNC,KAAM,UACN,CACAN,SAAU,QACVC,KAAM,YACNC,MAAO,OACPC,eAAgB,UAChBC,UAAW,IACXhD,SAAU,SACVE,UAAW,WACX+C,KAAM,qCACNC,KAAM,YAGPtB,MAAK,SAACC,GACLR,EAAYQ,EAAIC,SAEjBM,OAAM,SAACe,GACNd,QAAQC,IAAIa,QAEhB,IAGA,kBAAC,IAAD,iBACMhC,EADN,CAEEiC,MAAM,QACNC,OAAO,QAGPC,iBACEnC,EAAKjC,OACD,aAGA,SAACqE,GAAD,OAAkBnC,EAAQ,eAAKD,EAAN,GAAeoC,KAG9CC,SAAS,iCACTC,qBAAsB9B,8FAEtB,kBAAC,EAAD,CAAQ/B,SAAUA,IAClB,yBAAKR,UAAU,aACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,CACE+B,KAAMA,EACNC,QAASA,EACTpC,gBAAiBA,EACjBC,aAAcA,EACdC,OAAQiC,EAAKjC,UAUjB,kBAAC,EAAD,S,OChIOwE,MARf,WACE,OACE,kBAAC,IAAMvE,SAAP,KACE,kBAAC,EAAD,QCJNwE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.39432345.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst request = async (method, url, params, func) => {\n  return await axios({\n    method,\n    url,\n    params\n  })\n}\n\nexport default request;","import React from \"react\";\n\nimport \"./InputBoxGrid.scss\";\n\nfunction InputBox({mainSearchInput, goToViewPort, isMain}) {\n\n  return (\n    <React.Fragment>\n      <div className={isMain ? `mainBox isMain` : `mainBox notMain`}>\n          <h2>WOORI 42</h2>\n          <p className=\"content\">정부가 가진 난제(코로나19 재난상황)를 국민과 함께 공동생산방식으로 문제해결 해커톤</p>\n          <p className=\"content\">아래 검색어를 입력해주세요.</p>\n          <input type=\"text\" onChange={mainSearchInput}/>\n          <button onClick={()=>goToViewPort()} style={{background: \"transparent\"}}>button</button>\n          <p><a href=\"https://github.com/42Seoul-Organization/WORI42\">Github</a> | Kakao Talk | Email</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default InputBox;","import React from \"react\";\nimport { Marker } from \"react-map-gl\";\n\n// import covid_data from \"../Data/covid-19\";\nimport \"./Marker.scss\";\n\nfunction Circle({userData}) {\n  return userData.map((Data, i) => {\n    if (Data.latitude !== \"-\") {\n      return (\n        <Marker\n          key={i}\n          longitude={parseFloat(Data.longitude)}\n          latitude={parseFloat(Data.latitude)}\n        >\n          <div className=\"Circle\" />\n        </Marker>\n      );\n    }\n  });\n}\n\nexport default Circle;\n","import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nam4core.useTheme(am4themes_animated);\n\nfunction Sliderbar() {\n  const chart = useRef(null);\n\n  useLayoutEffect(() => {\n    let x = am4core.create(\"chartdiv\", am4charts.XYChart);\n    let visits = 10;\n    let data = [];\n    \n    x.background.opacity = 0;\n\n    for (let i = 1; i < 366; i++) {\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      data.push({\n        date: new Date(2018, 0, i),\n        name: \"name\" + i,\n        value: visits,\n      });\n    }\n\n    x.data = data;\n\n    let dateAxis = x.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0.5;\n\n    x.yAxes.push(new am4charts.ValueAxis());\n    // let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\n    // valueAxis.tooltip.disabled = true;\n    // valueAxis.renderer.minWidth = 35;\n\n    let series = x.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    // series.tooltipText = \"{valueY.value}\";\n    // x.cursor = new am4charts.XYCursor();\n\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    x.scrollbarX = scrollbarX;\n\n    x.plotContainer.visible = false;\n    x.leftAxesContainer.visible = false;\n    x.rightAxesContainer.visible = false;\n    x.bottomAxesContainer.visible = false;\n\n    // for color\n    scrollbarX.background.fill = \"#000\";\n    scrollbarX.background.fillOpacity = 0.3;\n    chart.current = x;\n    \n    return () => {\n      x.dispose();\n    };\n  }, []);\n\n  return (\n    <div\n      id=\"chartdiv\"\n      style={{\n        width: \"100%\",\n        height: \"100px\",\n        position: \"absolute\",\n        bottom: 15,\n      }}\n    ></div>\n  );\n}\n\nexport default Sliderbar;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer-container\">\n        Copyright © WOORI42\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBoxGrid\";\nimport Marker from \"./Marker/Marker\";\nimport Sliderbar from \"./Slidebar/Sliderbar\";\nimport Footer from \"./Footer/Footer\";\nimport \"./compose.scss\";\n\n// import Chart from \"../Chart/chart\"\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 5.5,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true,\n  });\n  const [userData, setUserData] = useState([])\n\n  const mainSearchInput = useCallback(\n    (vp) => {\n      setInfo({\n        ...info,\n        searchInfo: vp.target.value,\n      });\n    },\n    [info]\n  );\n\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: process.env.REACT_APP_Google_Token,\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          zoom: 14,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  }, [info]);\n\n  useEffect(() => {\n    if (info.isMain && info.longitude <= 128) {\n      const interval = setInterval(() => {\n        setInfo({\n          ...info,\n          latitude: info.latitude + 0.005,\n          longitude: info.longitude + 0.005,\n        });\n      }, 50);\n      return () => clearInterval(interval);\n    }\n    return;\n  }, [info]);\n\n  useEffect(() => {\n    request(\"post\", `https://hackertonopendata.herokuapp.com/covid19/data/user`, {\n      user_data: [{\n        province: \"Seoul\",\n        city: \"Yongsan-gu\",\n        group: \"TRUE\",\n        infection_case: \"Itaewon Clubs\",\n        confirmed: 139,\n        latitude: 37.538621,\n        longitude: 126.992652,\n        time: \"UTF로 해주세요\",\n        name: \"hochan\"\n      },{\n        province: \"Seoul\",\n        city: \"Gwanak-gu\",\n        group: \"TRUE\",\n        infection_case: \"Richway\",\n        confirmed: 119,\n        latitude: 37.48208,\n        longitude: 126.901384,\n        time: \"UTF로 해주세요\",\n        name: \"Jamin\"\n      }]\n    })\n      .then((res) => {\n        setUserData(res.data)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  },[]);\n\n  return (\n    <MapGL\n      {...info}\n      width=\"100vw\"\n      height=\"100vh\"\n      // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n      // mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_THEME}\n      onViewportChange={\n        info.isMain\n          ? () => {\n              \"\";\n            }\n          : (nextViewport) => setInfo({ ...info, ...nextViewport })\n      }\n      // mapStyle=\"mapbox://styles/mapbox/streets-v11\"\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n    >\n      <Marker userData={userData}/>\n      <div className=\"container\">\n        <div className=\"item\">\n          <InputBox\n            info={info}\n            setInfo={setInfo}\n            mainSearchInput={mainSearchInput}\n            goToViewPort={goToViewPort}\n            isMain={info.isMain}\n          />\n        </div>\n        {/* {info.isMain ? (\n          () => {\n            \"\";\n          }\n        ) : (\n          <Sliderbar />\n        )} */}\n        <Footer />\n        {/* <Chart/> */}\n      </div>\n    </MapGL>\n  );\n}\n\nexport default Compose;\n","import React from \"react\";\n\nimport Compose from \"./Component/Example/Compose/Compose\"\n// import Compose from \"./Component/Maps/Compose/Compose\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Compose/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}