{"version":3,"sources":["Component/Example/Axios/request.js","Component/Example/Compose/InputBox.js","Component/Example/Compose/Compose.js","App.js","index.js"],"names":["request","method","url","params","func","a","axios","InputBox","mainSearchInput","goToViewPort","isMain","Fragment","className","type","onChange","onClick","style","background","href","dotenv","config","Compose","useState","longitude","latitude","zoom","pitch","bearing","transitionInterpolator","FlyToInterpolator","speed","transitionDuration","searchInfo","info","setInfo","useCallback","vp","target","value","address","key","process","then","res","data","results","geometry","location","lat","lng","catch","console","log","useEffect","interval","setInterval","clearInterval","width","height","onViewportChange","nextViewport","mapStyle","mapboxApiAccessToken","App","ReactDOM","render","document","getElementById"],"mappings":"qVAUeA,EARF,uCAAG,WAAOC,EAAQC,EAAKC,EAAQC,GAA5B,SAAAC,EAAA,sEACDC,IAAM,CACjBL,SACAC,MACAC,WAJY,mFAAH,4D,MCkBEI,MAhBf,YAA4D,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,OAEhD,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAWF,EAAM,6BAClB,wCACA,6PACA,0GACA,2BAAOG,KAAK,OAAOC,SAAUN,IAC7B,4BAAQO,QAAS,kBAAIN,KAAgBO,MAAO,CAACC,WAAY,gBAAzD,UACA,2BAAG,uBAAGC,KAAK,kDAAR,UAAH,4B,eCNVC,EAAOC,SAkFQC,MAhFf,WAAoB,IAAD,EACOC,mBAAS,CAC/BC,UAAW,WACXC,SAAU,QACVC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,uBAAwB,IAAIC,IAAkB,CAAEC,MAAO,MACvDC,mBAAoB,IACpBC,WAAY,GACZtB,QAAQ,IAVO,mBACVuB,EADU,KACJC,EADI,KAaX1B,EAAkB2B,uBACtB,SAACC,GACCF,EAAQ,eACHD,EADE,CAELD,WAAYI,EAAGC,OAAOC,WAG1B,CAACL,IAGGxB,EAAe0B,uBAAY,WAC/BnC,EAAQ,MAAD,oDAA6D,CAClEuC,QAASN,EAAKD,WACdQ,IAAKC,4CAEJC,MAAK,SAACC,GACLT,EAAQ,eACHD,EADE,CAELvB,QAAQ,EACRc,SAAUmB,EAAIC,KAAKC,QAAQ,GAAGC,SAASC,SAASC,IAChDzB,UAAWoB,EAAIC,KAAKC,QAAQ,GAAGC,SAASC,SAASE,IACjDxB,KAAM,GACNG,uBAAwB,IAAIC,IAC5BE,mBAAoB,UAGvBmB,OAAM,SAACP,GACNQ,QAAQC,IAAIT,QAEf,CAACV,IAgBJ,OAdAoB,qBAAU,WACR,GAAIpB,EAAKvB,OAAQ,CACf,IAAM4C,EAAWC,aAAY,WAC3BrB,EAAQ,eACHD,EADE,CAELT,SAAUS,EAAKT,SAAW,IAC1BD,UAAWU,EAAKV,UAAY,SAE7B,KACH,OAAO,kBAAMiC,cAAcF,OAG5B,CAACrB,IAGF,kBAAC,IAAD,iBACMA,EADN,CAEEwB,MAAM,QACNC,OAAO,QAGPC,iBAAkB,SAACC,GAAD,OAAkB1B,EAAQ,eAAKD,EAAN,GAAe2B,KAC1DC,SAAS,iCACTC,qBAAsBrB,8FAEtB,kBAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACT1B,gBAAiBA,EACjBC,aAAcA,EACdC,OAAQuB,EAAKvB,W,MCvENqD,MARf,WACE,OACE,kBAAC,IAAMpD,SAAP,KACE,kBAAC,EAAD,QCHNqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e8edb91d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst request = async (method, url, params, func) => {\n  return await axios({\n    method,\n    url,\n    params\n  })\n}\n\nexport default request;","import React from \"react\";\n\nimport \"./InputBox.scss\";\n\nfunction InputBox({mainSearchInput, goToViewPort, isMain}) {\n\n  return (\n    <React.Fragment>\n      <div className={isMain ? `mainBox` : `mainBox notMain`}>\n          <h2>WOORI 42</h2>\n          <p>정부가 가진 난제(코로나19 재난상황)를 국민과 함께 공동생산방식으로 문제해결 해커톤</p>\n          <p>아래 검색어를 입력해주세요.</p>\n          <input type=\"text\" onChange={mainSearchInput}/>\n          <button onClick={()=>goToViewPort()} style={{background: \"transparent\"}}>button</button>\n          <p><a href=\"https://github.com/42Seoul-Organization/WORI42\">Github</a> | Kakao Talk | Email</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default InputBox;","import React, { useState, useCallback, useEffect } from \"react\";\nimport MapGL, { FlyToInterpolator } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import { config } from \"../../../config\";\nimport request from \"../Axios/request\";\nimport InputBox from \"./InputBox\";\nimport dotenv from \"dotenv\"\ndotenv.config();\n\nfunction Compose() {\n  const [info, setInfo] = useState({\n    longitude: 127.024612,\n    latitude: 37.5326,\n    zoom: 9,\n    pitch: 0,\n    bearing: 0,\n    transitionInterpolator: new FlyToInterpolator({ speed: 1.2 }),\n    transitionDuration: 1000,\n    searchInfo: \"\",\n    isMain: true,\n  });\n  \n  const mainSearchInput = useCallback(\n    (vp) => {\n      setInfo({\n        ...info,\n        searchInfo: vp.target.value,\n      });\n    },\n    [info]\n  );\n\n  const goToViewPort = useCallback(() => {\n    request(\"get\", `https://maps.googleapis.com/maps/api/geocode/json`, {\n      address: info.searchInfo,\n      key: process.env.REACT_APP_Google_Token\n    })\n      .then((res) => {\n        setInfo({\n          ...info,\n          isMain: false,\n          latitude: res.data.results[0].geometry.location.lat,\n          longitude: res.data.results[0].geometry.location.lng,\n          zoom: 11,\n          transitionInterpolator: new FlyToInterpolator(),\n          transitionDuration: 1000,\n        });\n      })\n      .catch((res) => {\n        console.log(res);\n      });\n  }, [info]);\n\n  useEffect(() => {\n    if (info.isMain) {\n      const interval = setInterval(() => {\n        setInfo({\n          ...info,\n          latitude: info.latitude + 0.01,\n          longitude: info.longitude + 0.01,\n        });\n      }, 100);\n      return () => clearInterval(interval);\n    }\n    return;\n  }, [info]);\n\n  return (\n    <MapGL\n      {...info}\n      width=\"100vw\"\n      height=\"100vh\"\n      // mapStyle=\"mapbox://styles/holee/ckcmzzc5y24hb1ip8lnkdt8sq\"\n      // mapboxApiAccessToken={config.MAPBOX_THEME}\n      onViewportChange={(nextViewport) => setInfo({ ...info, ...nextViewport })}\n      mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n      mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n    >\n      <InputBox\n        info={info}\n        setInfo={setInfo}\n        mainSearchInput={mainSearchInput}\n        goToViewPort={goToViewPort}\n        isMain={info.isMain}\n      />\n    </MapGL>\n  );\n}\n\nexport default Compose;\n","import React from \"react\";\n\nimport Compose from \"./Component/Example/Compose/Compose\"\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Compose/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}